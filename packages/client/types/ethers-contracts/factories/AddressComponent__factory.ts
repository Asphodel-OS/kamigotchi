/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AddressComponent,
  AddressComponentInterface,
} from "../AddressComponent";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "world",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "authorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "extract",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "get",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAt",
    inputs: [
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntities",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitiesWithValue",
    inputs: [
      {
        name: "value",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitiesWithValue",
    inputs: [
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "has",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "id",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "result",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerWorld",
    inputs: [
      {
        name: "_world",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "remove",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "value",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "values",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "values",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "size",
    inputs: [
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "unauthorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "world",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "writeAccess",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "BareComponent__NotImplemented",
    inputs: [],
  },
  {
    type: "error",
    name: "BatchOp_UnexpectedLength",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerIsZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NoHandoverRequest",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableWritable__NotWriter",
    inputs: [],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroValueNotAllowed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620029b6380380620029b683398101604081905262000034916200014f565b8181818162000043336200006f565b60028190556001600160a01b0382161562000063576200006382620000ab565b5050505050506200018b565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a350565b620000b562000131565b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200011557600080fd5b505af11580156200012a573d6000803e3d6000fd5b5050505050565b638b78c6d8195433146200014d576382b429006000526004601cfd5b565b600080604083850312156200016357600080fd5b82516001600160a01b03811681146200017b57600080fd5b6020939093015192949293505050565b61281b806200019b6000396000f3fe6080604052600436106101fe5760003560e01c806385b397821161011d578063bf4fe57e116100b0578063dd98e3c91161007f578063f04e283e11610064578063f04e283e14610609578063f2fde38b1461061c578063fee81cf41461062f57600080fd5b8063dd98e3c9146105bc578063e9ff6c76146105e957600080fd5b8063bf4fe57e1461053c578063c4c7ad0b1461055c578063cccf7a8e1461057c578063dc5c22cd1461059c57600080fd5b80639507d39a116100ec5780639507d39a146104c65780639d2c76b4146104e6578063af640d0f14610506578063b361be461461051c57600080fd5b806385b3978214610422578063861eb905146104425780638b282947146104725780638da5cb5b1461049257600080fd5b80633e1b5e0d1161019557806354d1f13d1161016457806354d1f13d146103d25780636f9aa155146103da578063715018a6146103fa5780638482643e1461040257600080fd5b80633e1b5e0d146103525780634323c4ef146103725780634cc82215146103925780634fef6a38146103b257600080fd5b806325692962116101d157806325692962146102b65780632f30c6f6146102be57806330b67baa146102de57806331b933b91461033057600080fd5b8063088dd0b91461020357806312b111551461023957806313ca8b6a146102665780631c5ee10c14610288575b600080fd5b34801561020f57600080fd5b5061022361021e366004611fee565b610662565b604051610230919061202b565b60405180910390f35b34801561024557600080fd5b50610259610254366004611fee565b61067b565b60405161023091906120e9565b34801561027257600080fd5b506102866102813660046121f7565b6106c5565b005b34801561029457600080fd5b506102a86102a33660046122cc565b610712565b604051908152602001610230565b610286610736565b3480156102ca57600080fd5b506102866102d9366004612323565b610786565b3480156102ea57600080fd5b5060005461030b9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610230565b34801561033c57600080fd5b5061034561080c565b6040516102309190612353565b34801561035e57600080fd5b5061034561036d36600461238b565b610840565b34801561037e57600080fd5b5061025961038d366004611fee565b610888565b34801561039e57600080fd5b506102866103ad3660046123a8565b6109d4565b3480156103be57600080fd5b506102866103cd36600461238b565b610a1f565b610286610a95565b3480156103e657600080fd5b506102a86103f53660046123c1565b610ad1565b610286610afb565b34801561040e57600080fd5b5061028661041d366004611fee565b610b0f565b34801561042e57600080fd5b5061030b61043d3660046123a8565b610b57565b34801561044e57600080fd5b5061046261045d36600461238b565b610ba9565b6040519015158152602001610230565b34801561047e57600080fd5b5061028661048d366004612406565b610c38565b34801561049e57600080fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275461030b565b3480156104d257600080fd5b5061030b6104e13660046123a8565b610c81565b3480156104f257600080fd5b5061028661050136600461238b565b610c8f565b34801561051257600080fd5b506102a860025481565b34801561052857600080fd5b506103456105373660046122cc565b610d50565b34801561054857600080fd5b5061028661055736600461238b565b610d5b565b34801561056857600080fd5b5061028661057736600461244d565b610dce565b34801561058857600080fd5b506104626105973660046123a8565b610e1f565b3480156105a857600080fd5b506102236105b7366004611fee565b610e41565b3480156105c857600080fd5b506105dc6105d73660046123a8565b610e8e565b6040516102309190612511565b3480156105f557600080fd5b506105dc6106043660046123a8565b610e99565b61028661061736600461238b565b610ee3565b61028661062a36600461238b565b610f20565b34801561063b57600080fd5b506102a861064a36600461238b565b63389a75e1600c908152600091909152602090205490565b606061067561067083610f47565b61108c565b92915050565b606061068633610ba9565b6106bc576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106758261114d565b6106ce33610ba9565b610704576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61070e8282611165565b5050565b600061067560036000848051906020012081526020019081526020016000206112f9565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b61078f33610ba9565b6107c5576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61070e82610807836040805173ffffffffffffffffffffffffffffffffffffffff83166020820152606091016040516020818303038152906040529050919050565b611303565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060610675610883836040805173ffffffffffffffffffffffffffffffffffffffff83166020820152606091016040516020818303038152906040529050919050565b6113fe565b60606000825167ffffffffffffffff8111156108a6576108a6611ee1565b6040519080825280602002602001820160405280156108d957816020015b60608152602001906001900390816108c45790505b50905060005b83518110156109cd57600160008583815181106108fe576108fe612524565b60200260200101518152602001908152602001600020805461091f90612553565b80601f016020809104026020016040519081016040528092919081815260200182805461094b90612553565b80156109985780601f1061096d57610100808354040283529160200191610998565b820191906000526020600020905b81548152906001019060200180831161097b57829003601f168201915b50505050508282815181106109af576109af612524565b602002602001018190525080806109c5906125d5565b9150506108df565b5092915050565b6109dd33610ba9565b610a13576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a1c81611422565b50565b610a276114f5565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b81516020808401919091206000908152600390915260408120610af4908361152b565b9392505050565b610b036114f5565b610b0d6000611537565b565b610b1833610ba9565b610b4e576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a1c8161159d565b6000610b6233610ba9565b610b98576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610675610ba4836116a5565b6116c5565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806106755750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275473ffffffffffffffffffffffffffffffffffffffff91821691161490565b610c4133610ba9565b610c77576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61070e8282611303565b6000610675610ba4836116db565b610c976114f5565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610d3557600080fd5b505af1158015610d49573d6000803e3d6000fd5b5050505050565b6060610675826113fe565b610d636114f5565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b610dd733610ba9565b610e0d576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61070e82610e1a8361177d565b611165565b60008181526001602052604081208054610e3890612553565b15159392505050565b6060610e4c33610ba9565b610e82576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106756106708361114d565b6060610675826116db565b6060610ea433610ba9565b610eda576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610675826116a5565b610eeb6114f5565b63389a75e1600c52806000526020600c208054421115610f1357636f5e88186000526004601cfd5b60009055610a1c81611537565b610f286114f5565b8060601b610f3e57637448fbae6000526004601cfd5b610a1c81611537565b60606000825167ffffffffffffffff811115610f6557610f65611ee1565b604051908082528060200260200182016040528015610f9857816020015b6060815260200190600190039081610f835790505b50905060005b83518110156109cd5760016000858381518110610fbd57610fbd612524565b602002602001015181526020019081526020016000208054610fde90612553565b80601f016020809104026020016040519081016040528092919081815260200182805461100a90612553565b80156110575780601f1061102c57610100808354040283529160200191611057565b820191906000526020600020905b81548152906001019060200180831161103a57829003601f168201915b505050505082828151811061106e5761106e612524565b60200260200101819052508080611084906125d5565b915050610f9e565b60606000825167ffffffffffffffff8111156110aa576110aa611ee1565b6040519080825280602002602001820160405280156110d3578160200160208202803683370190505b50905060005b83518110156109cd576111048482815181106110f7576110f7612524565b60200260200101516116c5565b82828151811061111657611116612524565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280611145816125d5565b9150506110d9565b6060600061115a83610f47565b90506106758361159d565b60005b82518110156112ee5760006001600085848151811061118957611189612524565b6020026020010151815260200190815260200160002080546111aa90612553565b80601f01602080910402602001604051908101604052809291908181526020018280546111d690612553565b80156112235780601f106111f857610100808354040283529160200191611223565b820191906000526020600020905b81548152906001019060200180831161120657829003601f168201915b5050505050905060008151111561127b5761127984838151811061124957611249612524565b6020026020010151600360008480519060200120815260200190815260200160002061186490919063ffffffff16565b505b6112d984838151811061129057611290612524565b6020026020010151600360008686815181106112ae576112ae612524565b602002602001015180519060200120815260200190815260200160002061187090919063ffffffff16565b505080806112e6906125d5565b915050611168565b5061070e828261187c565b6000610675825490565b6000828152600160205260408120805461131c90612553565b80601f016020809104026020016040519081016040528092919081815260200182805461134890612553565b80156113955780601f1061136a57610100808354040283529160200191611395565b820191906000526020600020905b81548152906001019060200180831161137857829003601f168201915b505050505090506000815111156113cb57805160208083019190912060009081526003909152604090206113c99084611864565b505b815160208084019190912060009081526003909152604090206113ee9084611870565b506113f98383611a5a565b505050565b60606106756003600084805190602001208152602001908152602001600020611b3c565b6000818152600160205260408120805461143b90612553565b80601f016020809104026020016040519081016040528092919081815260200182805461146790612553565b80156114b45780601f10611489576101008083540402835291602001916114b4565b820191906000526020600020905b81548152906001019060200180831161149757829003601f168201915b5050505050905080516000036114c8575050565b805160208083019190912060009081526003909152604090206114eb9083611864565b5061070e82611b49565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927543314610b0d576382b429006000526004601cfd5b6000610af48383611bb7565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927805473ffffffffffffffffffffffffffffffffffffffff9092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b60005b815181101561169b576000600160008484815181106115c1576115c1612524565b6020026020010151815260200190815260200160002080546115e290612553565b80601f016020809104026020016040519081016040528092919081815260200182805461160e90612553565b801561165b5780601f106116305761010080835404028352916020019161165b565b820191906000526020600020905b81548152906001019060200180831161163e57829003601f168201915b5050505050905080516000036116715750611689565b61168683838151811061124957611249612524565b50505b80611693816125d5565b9150506115a0565b50610a1c81611be1565b606060006116b2836116db565b8051909150156106755761067583611422565b600081806020019051810190610675919061260d565b60008181526001602052604090208054606091906116f890612553565b80601f016020809104026020016040519081016040528092919081815260200182805461172490612553565b80156117715780601f1061174657610100808354040283529160200191611771565b820191906000526020600020905b81548152906001019060200180831161175457829003601f168201915b50505050509050919050565b60606000825167ffffffffffffffff81111561179b5761179b611ee1565b6040519080825280602002602001820160405280156117ce57816020015b60608152602001906001900390816117b95790505b50905060005b83518110156109cd576118348482815181106117f2576117f2612524565b60200260200101516040805173ffffffffffffffffffffffffffffffffffffffff83166020820152606091016040516020818303038152906040529050919050565b82828151811061184657611846612524565b6020026020010181905250808061185c906125d5565b9150506117d4565b6000610af48383611cf6565b6000610af48383611de9565b80518251146118b7576040517fc291f68400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b825181101561197c578181815181106118d5576118d5612524565b602002602001015151600003611917576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81818151811061192957611929612524565b60200260200101516001600085848151811061194757611947612524565b6020026020010151815260200190815260200160002090816119699190612670565b5080611974816125d5565b9150506118ba565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b8351811015611a54578173ffffffffffffffffffffffffffffffffffffffff1663cfd3c57f8583815181106119d0576119d0612524565b60200260200101518584815181106119ea576119ea612524565b60200260200101516040518363ffffffff1660e01b8152600401611a0f92919061278a565b600060405180830381600087803b158015611a2957600080fd5b505af1158015611a3d573d6000803e3d6000fd5b505050508080611a4c906125d5565b915050611999565b50505050565b8051600003611a95576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000828152600160205260409020611aad8282612670565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90611b06908590859060040161278a565b600060405180830381600087803b158015611b2057600080fd5b505af1158015611b34573d6000803e3d6000fd5b505050505050565b60606000610af483611e38565b6000818152600160205260408120611b6091611e93565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610d1b565b6000826000018281548110611bce57611bce612524565b9060005260206000200154905092915050565b60005b8151811015611c375760016000838381518110611c0357611c03612524565b602002602001015181526020019081526020016000206000611c259190611e93565b80611c2f816125d5565b915050611be4565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b82518110156113f9578173ffffffffffffffffffffffffffffffffffffffff16630de3b7b5848381518110611c8b57611c8b612524565b60200260200101516040518263ffffffff1660e01b8152600401611cb191815260200190565b600060405180830381600087803b158015611ccb57600080fd5b505af1158015611cdf573d6000803e3d6000fd5b505050508080611cee906125d5565b915050611c54565b60008181526001830160205260408120548015611ddf576000611d1a6001836127a3565b8554909150600090611d2e906001906127a3565b9050818114611d93576000866000018281548110611d4e57611d4e612524565b9060005260206000200154905080876000018481548110611d7157611d71612524565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611da457611da46127b6565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610675565b6000915050610675565b6000818152600183016020526040812054611e3057508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610675565b506000610675565b60608160000180548060200260200160405190810160405280929190818152602001828054801561177157602002820191906000526020600020905b815481526020019060010190808311611e745750505050509050919050565b508054611e9f90612553565b6000825580601f10611eaf575050565b601f016020900490600052602060002090810190610a1c91905b80821115611edd5760008155600101611ec9565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611f5757611f57611ee1565b604052919050565b600067ffffffffffffffff821115611f7957611f79611ee1565b5060051b60200190565b600082601f830112611f9457600080fd5b81356020611fa9611fa483611f5f565b611f10565b82815260059290921b84018101918181019086841115611fc857600080fd5b8286015b84811015611fe35780358352918301918301611fcc565b509695505050505050565b60006020828403121561200057600080fd5b813567ffffffffffffffff81111561201757600080fd5b61202384828501611f83565b949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561207957835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101612047565b50909695505050505050565b6000815180845260005b818110156120ab5760208185018101518683018201520161208f565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561215c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261214a858351612085565b94509285019290850190600101612110565b5092979650505050505050565b600082601f83011261217a57600080fd5b813567ffffffffffffffff81111561219457612194611ee1565b6121c560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611f10565b8181528460208386010111156121da57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561220a57600080fd5b823567ffffffffffffffff8082111561222257600080fd5b61222e86838701611f83565b935060209150818501358181111561224557600080fd5b8501601f8101871361225657600080fd5b8035612264611fa482611f5f565b81815260059190911b8201840190848101908983111561228357600080fd5b8584015b838110156122bb5780358681111561229f5760008081fd5b6122ad8c8983890101612169565b845250918601918601612287565b508096505050505050509250929050565b6000602082840312156122de57600080fd5b813567ffffffffffffffff8111156122f557600080fd5b61202384828501612169565b73ffffffffffffffffffffffffffffffffffffffff81168114610a1c57600080fd5b6000806040838503121561233657600080fd5b82359150602083013561234881612301565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b818110156120795783518352928401929184019160010161236f565b60006020828403121561239d57600080fd5b8135610af481612301565b6000602082840312156123ba57600080fd5b5035919050565b600080604083850312156123d457600080fd5b823567ffffffffffffffff8111156123eb57600080fd5b6123f785828601612169565b95602094909401359450505050565b6000806040838503121561241957600080fd5b82359150602083013567ffffffffffffffff81111561243757600080fd5b61244385828601612169565b9150509250929050565b6000806040838503121561246057600080fd5b823567ffffffffffffffff8082111561247857600080fd5b61248486838701611f83565b935060209150818501358181111561249b57600080fd5b85019050601f810186136124ae57600080fd5b80356124bc611fa482611f5f565b81815260059190911b820183019083810190888311156124db57600080fd5b928401925b828410156125025783356124f381612301565b825292840192908401906124e0565b80955050505050509250929050565b602081526000610af46020830184612085565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061256757607f821691505b6020821081036125a0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612606576126066125a6565b5060010190565b60006020828403121561261f57600080fd5b8151610af481612301565b601f8211156113f957600081815260208120601f850160051c810160208610156126515750805b601f850160051c820191505b81811015611b345782815560010161265d565b815167ffffffffffffffff81111561268a5761268a611ee1565b61269e816126988454612553565b8461262a565b602080601f8311600181146126f157600084156126bb5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611b34565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561273e5788860151825594840194600190910190840161271f565b508582101561277a57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b8281526040602082015260006120236040830184612085565b81810381811115610675576106756125a6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220e939c663c28255063a1e59ad026cea6d8a1971a50fb64a432bdb87c158b96db564736f6c63430008110033";

type AddressComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressComponent__factory extends ContractFactory {
  constructor(...args: AddressComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AddressComponent> {
    return super.deploy(
      world,
      id,
      overrides || {}
    ) as Promise<AddressComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, id, overrides || {});
  }
  override attach(address: string): AddressComponent {
    return super.attach(address) as AddressComponent;
  }
  override connect(signer: Signer): AddressComponent__factory {
    return super.connect(signer) as AddressComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressComponentInterface {
    return new utils.Interface(_abi) as AddressComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressComponent {
    return new Contract(address, _abi, signerOrProvider) as AddressComponent;
  }
}
