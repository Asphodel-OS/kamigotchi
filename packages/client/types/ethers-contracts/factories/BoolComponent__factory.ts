/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BoolComponent, BoolComponentInterface } from "../BoolComponent";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "world",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "authorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "extract",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool[]",
        internalType: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "get",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAt",
    inputs: [
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool[]",
        internalType: "bool[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntities",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitiesWithValue",
    inputs: [
      {
        name: "value",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitiesWithValue",
    inputs: [
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "has",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "id",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "result",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerWorld",
    inputs: [
      {
        name: "_world",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "remove",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "values",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "size",
    inputs: [
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "unauthorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "world",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "writeAccess",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "BareComponent__NotImplemented",
    inputs: [],
  },
  {
    type: "error",
    name: "BatchOp_UnexpectedLength",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerIsZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NoHandoverRequest",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableWritable__NotWriter",
    inputs: [],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroValueNotAllowed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200284d3803806200284d83398101604081905262000034916200014f565b8181818162000043336200006f565b60028190556001600160a01b0382161562000063576200006382620000ab565b5050505050506200018b565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a350565b620000b562000131565b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200011557600080fd5b505af11580156200012a573d6000803e3d6000fd5b5050505050565b638b78c6d8195433146200014d576382b429006000526004601cfd5b565b600080604083850312156200016357600080fd5b82516001600160a01b03811681146200017b57600080fd5b6020939093015192949293505050565b6126b2806200019b6000396000f3fe6080604052600436106101fd5760003560e01c806385b397821161011d578063bf4fe57e116100b0578063e6e601621161007f578063f04e283e11610064578063f04e283e14610608578063f2fde38b1461061b578063fee81cf41461062e57600080fd5b8063e6e60162146105c8578063e9ff6c76146105e857600080fd5b8063bf4fe57e1461053b578063cccf7a8e1461055b578063dc5c22cd1461057b578063dd98e3c91461059b57600080fd5b80639507d39a116100ec5780639507d39a146104c55780639d2c76b4146104e5578063af640d0f14610505578063b361be461461051b57600080fd5b806385b3978214610421578063861eb905146104515780638b282947146104715780638da5cb5b1461049157600080fd5b80634323c4ef1161019557806360fe47b11161016457806360fe47b1146103b95780636f9aa155146103d9578063715018a6146103f95780638482643e1461040157600080fd5b80634323c4ef146103515780634cc82215146103715780634fef6a381461039157806354d1f13d146103b157600080fd5b80631c5ee10c116101d15780631c5ee10c146102b457806325692962146102e257806330b67baa146102ea57806331b933b91461033c57600080fd5b80621326ab14610202578063088dd0b91461023857806312b111551461026557806313ca8b6a14610292575b600080fd5b34801561020e57600080fd5b5061022261021d366004611e6c565b610661565b60405161022f9190611e89565b60405180910390f35b34801561024457600080fd5b50610258610253366004611fda565b61069b565b60405161022f9190612017565b34801561027157600080fd5b50610285610280366004611fda565b6106ae565b60405161022f91906120b5565b34801561029e57600080fd5b506102b26102ad3660046121c3565b6106f8565b005b3480156102c057600080fd5b506102d46102cf366004612298565b610745565b60405190815260200161022f565b6102b2610769565b3480156102f657600080fd5b506000546103179073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161022f565b34801561034857600080fd5b506102226107b9565b34801561035d57600080fd5b5061028561036c366004611fda565b6107ed565b34801561037d57600080fd5b506102b261038c3660046122cd565b610939565b34801561039d57600080fd5b506102b26103ac3660046122e6565b610984565b6102b26109fa565b3480156103c557600080fd5b506102b26103d43660046122cd565b610a36565b3480156103e557600080fd5b506102d46103f436600461231c565b610a9f565b6102b2610ac9565b34801561040d57600080fd5b506102b261041c366004611fda565b610add565b34801561042d57600080fd5b5061044161043c3660046122cd565b610b25565b604051901515815260200161022f565b34801561045d57600080fd5b5061044161046c3660046122e6565b610b77565b34801561047d57600080fd5b506102b261048c366004612361565b610c06565b34801561049d57600080fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff7487392754610317565b3480156104d157600080fd5b506104416104e03660046122cd565b610c4f565b3480156104f157600080fd5b506102b26105003660046122e6565b610c5a565b34801561051157600080fd5b506102d460025481565b34801561052757600080fd5b50610222610536366004612298565b610d1b565b34801561054757600080fd5b506102b26105563660046122e6565b610d26565b34801561056757600080fd5b506104416105763660046122cd565b610d99565b34801561058757600080fd5b50610258610596366004611fda565b610dbb565b3480156105a757600080fd5b506105bb6105b63660046122cd565b610e08565b60405161022f91906123a8565b3480156105d457600080fd5b506102b26105e3366004611fda565b610e13565b3480156105f457600080fd5b506105bb6106033660046122cd565b610e65565b6102b26106163660046122e6565b610eaf565b6102b26106293660046122e6565b610eec565b34801561063a57600080fd5b506102d46106493660046122e6565b63389a75e1600c908152600091909152602090205490565b606061069561069083604080518215156020820152606091016040516020818303038152906040529050919050565b610f13565b92915050565b60606106956106a983610f37565b61107c565b60606106b933610b77565b6106ef576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61069582611128565b61070133610b77565b610737576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107418282611140565b5050565b600061069560036000848051906020012081526020019081526020016000206112d4565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60606000825167ffffffffffffffff81111561080b5761080b611ecd565b60405190808252806020026020018201604052801561083e57816020015b60608152602001906001900390816108295790505b50905060005b83518110156109325760016000858381518110610863576108636123bb565b602002602001015181526020019081526020016000208054610884906123ea565b80601f01602080910402602001604051908101604052809291908181526020018280546108b0906123ea565b80156108fd5780601f106108d2576101008083540402835291602001916108fd565b820191906000526020600020905b8154815290600101906020018083116108e057829003601f168201915b5050505050828281518110610914576109146123bb565b6020026020010181905250808061092a9061246c565b915050610844565b5092915050565b61094233610b77565b610978576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610981816112de565b50565b61098c6113b1565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b610a3f33610b77565b610a75576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080516001602080830191909152825180830390910181529082019091526109819082906113e7565b81516020808401919091206000908152600390915260408120610ac290836114e2565b9392505050565b610ad16113b1565b610adb60006114ee565b565b610ae633610b77565b610b1c576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61098181611554565b6000610b3033610b77565b610b66576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610695610b728361165c565b61167c565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806106955750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275473ffffffffffffffffffffffffffffffffffffffff91821691161490565b610c0f33610b77565b610c45576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61074182826113e7565b600061069582610d99565b610c626113b1565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610d0057600080fd5b505af1158015610d14573d6000803e3d6000fd5b5050505050565b606061069582610f13565b610d2e6113b1565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610db2906123ea565b15159392505050565b6060610dc633610b77565b610dfc576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106956106a983611128565b606061069582611692565b610e1c33610b77565b610e52576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61098181610e608351611734565b611140565b6060610e7033610b77565b610ea6576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106958261165c565b610eb76113b1565b63389a75e1600c52806000526020600c208054421115610edf57636f5e88186000526004601cfd5b60009055610981816114ee565b610ef46113b1565b8060601b610f0a57637448fbae6000526004601cfd5b610981816114ee565b606061069560036000848051906020012081526020019081526020016000206117e1565b60606000825167ffffffffffffffff811115610f5557610f55611ecd565b604051908082528060200260200182016040528015610f8857816020015b6060815260200190600190039081610f735790505b50905060005b83518110156109325760016000858381518110610fad57610fad6123bb565b602002602001015181526020019081526020016000208054610fce906123ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610ffa906123ea565b80156110475780601f1061101c57610100808354040283529160200191611047565b820191906000526020600020905b81548152906001019060200180831161102a57829003601f168201915b505050505082828151811061105e5761105e6123bb565b602002602001018190525080806110749061246c565b915050610f8e565b60606000825167ffffffffffffffff81111561109a5761109a611ecd565b6040519080825280602002602001820160405280156110c3578160200160208202803683370190505b50905060005b8351811015610932576110f48482815181106110e7576110e76123bb565b602002602001015161167c565b828281518110611106576111066123bb565b91151560209283029190910190910152806111208161246c565b9150506110c9565b6060600061113583610f37565b905061069583611554565b60005b82518110156112c957600060016000858481518110611164576111646123bb565b602002602001015181526020019081526020016000208054611185906123ea565b80601f01602080910402602001604051908101604052809291908181526020018280546111b1906123ea565b80156111fe5780601f106111d3576101008083540402835291602001916111fe565b820191906000526020600020905b8154815290600101906020018083116111e157829003601f168201915b5050505050905060008151111561125657611254848381518110611224576112246123bb565b602002602001015160036000848051906020012081526020019081526020016000206117ee90919063ffffffff16565b505b6112b484838151811061126b5761126b6123bb565b602002602001015160036000868681518110611289576112896123bb565b60200260200101518051906020012081526020019081526020016000206117fa90919063ffffffff16565b505080806112c19061246c565b915050611143565b506107418282611806565b6000610695825490565b600081815260016020526040812080546112f7906123ea565b80601f0160208091040260200160405190810160405280929190818152602001828054611323906123ea565b80156113705780601f1061134557610100808354040283529160200191611370565b820191906000526020600020905b81548152906001019060200180831161135357829003601f168201915b505050505090508051600003611384575050565b805160208083019190912060009081526003909152604090206113a790836117ee565b50610741826119e4565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927543314610adb576382b429006000526004601cfd5b60008281526001602052604081208054611400906123ea565b80601f016020809104026020016040519081016040528092919081815260200182805461142c906123ea565b80156114795780601f1061144e57610100808354040283529160200191611479565b820191906000526020600020905b81548152906001019060200180831161145c57829003601f168201915b505050505090506000815111156114af57805160208083019190912060009081526003909152604090206114ad90846117ee565b505b815160208084019190912060009081526003909152604090206114d290846117fa565b506114dd8383611a52565b505050565b6000610ac28383611b34565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927805473ffffffffffffffffffffffffffffffffffffffff9092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b60005b815181101561165257600060016000848481518110611578576115786123bb565b602002602001015181526020019081526020016000208054611599906123ea565b80601f01602080910402602001604051908101604052809291908181526020018280546115c5906123ea565b80156116125780601f106115e757610100808354040283529160200191611612565b820191906000526020600020905b8154815290600101906020018083116115f557829003601f168201915b5050505050905080516000036116285750611640565b61163d838381518110611224576112246123bb565b50505b8061164a8161246c565b915050611557565b5061098181611b5e565b6060600061166983611692565b80519091501561069557610695836112de565b60008180602001905181019061069591906124a4565b60008181526001602052604090208054606091906116af906123ea565b80601f01602080910402602001604051908101604052809291908181526020018280546116db906123ea565b80156117285780601f106116fd57610100808354040283529160200191611728565b820191906000526020600020905b81548152906001019060200180831161170b57829003601f168201915b50505050509050919050565b606060008267ffffffffffffffff81111561175157611751611ecd565b60405190808252806020026020018201604052801561178457816020015b606081526020019060019003908161176f5790505b50905060005b8381101561093257604080516001602080830191909152825180830390910181529082019091528282815181106117c3576117c36123bb565b602002602001018190525080806117d99061246c565b91505061178a565b60606000610ac283611c73565b6000610ac28383611cce565b6000610ac28383611dc1565b8051825114611841576040517fc291f68400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82518110156119065781818151811061185f5761185f6123bb565b6020026020010151516000036118a1576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181815181106118b3576118b36123bb565b6020026020010151600160008584815181106118d1576118d16123bb565b6020026020010151815260200190815260200160002090816118f39190612507565b50806118fe8161246c565b915050611844565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b83518110156119de578173ffffffffffffffffffffffffffffffffffffffff1663cfd3c57f85838151811061195a5761195a6123bb565b6020026020010151858481518110611974576119746123bb565b60200260200101516040518363ffffffff1660e01b8152600401611999929190612621565b600060405180830381600087803b1580156119b357600080fd5b505af11580156119c7573d6000803e3d6000fd5b5050505080806119d69061246c565b915050611923565b50505050565b60008181526001602052604081206119fb91611e10565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610ce6565b8051600003611a8d576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000828152600160205260409020611aa58282612507565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90611afe9085908590600401612621565b600060405180830381600087803b158015611b1857600080fd5b505af1158015611b2c573d6000803e3d6000fd5b505050505050565b6000826000018281548110611b4b57611b4b6123bb565b9060005260206000200154905092915050565b60005b8151811015611bb45760016000838381518110611b8057611b806123bb565b602002602001015181526020019081526020016000206000611ba29190611e10565b80611bac8161246c565b915050611b61565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b82518110156114dd578173ffffffffffffffffffffffffffffffffffffffff16630de3b7b5848381518110611c0857611c086123bb565b60200260200101516040518263ffffffff1660e01b8152600401611c2e91815260200190565b600060405180830381600087803b158015611c4857600080fd5b505af1158015611c5c573d6000803e3d6000fd5b505050508080611c6b9061246c565b915050611bd1565b60608160000180548060200260200160405190810160405280929190818152602001828054801561172857602002820191906000526020600020905b815481526020019060010190808311611caf5750505050509050919050565b60008181526001830160205260408120548015611db7576000611cf260018361263a565b8554909150600090611d069060019061263a565b9050818114611d6b576000866000018281548110611d2657611d266123bb565b9060005260206000200154905080876000018481548110611d4957611d496123bb565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611d7c57611d7c61264d565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610695565b6000915050610695565b6000818152600183016020526040812054611e0857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610695565b506000610695565b508054611e1c906123ea565b6000825580601f10611e2c575050565b601f01602090049060005260206000209081019061098191905b80821115611e5a5760008155600101611e46565b5090565b801515811461098157600080fd5b600060208284031215611e7e57600080fd5b8135610ac281611e5e565b6020808252825182820181905260009190848201906040850190845b81811015611ec157835183529284019291840191600101611ea5565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611f4357611f43611ecd565b604052919050565b600067ffffffffffffffff821115611f6557611f65611ecd565b5060051b60200190565b600082601f830112611f8057600080fd5b81356020611f95611f9083611f4b565b611efc565b82815260059290921b84018101918181019086841115611fb457600080fd5b8286015b84811015611fcf5780358352918301918301611fb8565b509695505050505050565b600060208284031215611fec57600080fd5b813567ffffffffffffffff81111561200357600080fd5b61200f84828501611f6f565b949350505050565b6020808252825182820181905260009190848201906040850190845b81811015611ec1578351151583529284019291840191600101612033565b6000815180845260005b818110156120775760208185018101518683018201520161205b565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612128577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612116858351612051565b945092850192908501906001016120dc565b5092979650505050505050565b600082601f83011261214657600080fd5b813567ffffffffffffffff81111561216057612160611ecd565b61219160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611efc565b8181528460208386010111156121a657600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156121d657600080fd5b823567ffffffffffffffff808211156121ee57600080fd5b6121fa86838701611f6f565b935060209150818501358181111561221157600080fd5b8501601f8101871361222257600080fd5b8035612230611f9082611f4b565b81815260059190911b8201840190848101908983111561224f57600080fd5b8584015b838110156122875780358681111561226b5760008081fd5b6122798c8983890101612135565b845250918601918601612253565b508096505050505050509250929050565b6000602082840312156122aa57600080fd5b813567ffffffffffffffff8111156122c157600080fd5b61200f84828501612135565b6000602082840312156122df57600080fd5b5035919050565b6000602082840312156122f857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610ac257600080fd5b6000806040838503121561232f57600080fd5b823567ffffffffffffffff81111561234657600080fd5b61235285828601612135565b95602094909401359450505050565b6000806040838503121561237457600080fd5b82359150602083013567ffffffffffffffff81111561239257600080fd5b61239e85828601612135565b9150509250929050565b602081526000610ac26020830184612051565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c908216806123fe57607f821691505b602082108103612437577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361249d5761249d61243d565b5060010190565b6000602082840312156124b657600080fd5b8151610ac281611e5e565b601f8211156114dd57600081815260208120601f850160051c810160208610156124e85750805b601f850160051c820191505b81811015611b2c578281556001016124f4565b815167ffffffffffffffff81111561252157612521611ecd565b6125358161252f84546123ea565b846124c1565b602080601f83116001811461258857600084156125525750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611b2c565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156125d5578886015182559484019460019091019084016125b6565b508582101561261157878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b82815260406020820152600061200f6040830184612051565b818103818111156106955761069561243d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220ed60ba8c4c7d9668025e511928fdce975acb0d268d86c9fc7fa1c011128d080564736f6c63430008110033";

type BoolComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BoolComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BoolComponent__factory extends ContractFactory {
  constructor(...args: BoolComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BoolComponent> {
    return super.deploy(world, id, overrides || {}) as Promise<BoolComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, id, overrides || {});
  }
  override attach(address: string): BoolComponent {
    return super.attach(address) as BoolComponent;
  }
  override connect(signer: Signer): BoolComponent__factory {
    return super.connect(signer) as BoolComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BoolComponentInterface {
    return new utils.Interface(_abi) as BoolComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BoolComponent {
    return new Contract(address, _abi, signerOrProvider) as BoolComponent;
  }
}
