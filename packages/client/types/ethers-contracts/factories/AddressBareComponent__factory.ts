/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AddressBareComponent,
  AddressBareComponentInterface,
} from "../AddressBareComponent";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "world",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "authorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "extract",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "get",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntities",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitiesWithValue",
    inputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "has",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "id",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "result",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerWorld",
    inputs: [
      {
        name: "_world",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "remove",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "value",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "values",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "values",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "unauthorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "world",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "writeAccess",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "BareComponent__NotImplemented",
    inputs: [],
  },
  {
    type: "error",
    name: "BatchOp_UnexpectedLength",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerIsZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NoHandoverRequest",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableWritable__NotWriter",
    inputs: [],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroValueNotAllowed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200216d3803806200216d83398101604081905262000034916200014b565b818162000041336200006b565b60028190556001600160a01b0382161562000061576200006182620000a7565b5050505062000187565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a350565b620000b16200012d565b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200011157600080fd5b505af115801562000126573d6000803e3d6000fd5b5050505050565b638b78c6d81954331462000149576382b429006000526004601cfd5b565b600080604083850312156200015f57600080fd5b82516001600160a01b03811681146200017757600080fd5b6020939093015192949293505050565b611fd680620001976000396000f3fe6080604052600436106101cd5760003560e01c80638b282947116100f7578063c4c7ad0b11610095578063e9ff6c7611610064578063e9ff6c7614610558578063f04e283e14610578578063f2fde38b1461058b578063fee81cf41461059e57600080fd5b8063c4c7ad0b146104cb578063cccf7a8e146104eb578063dc5c22cd1461050b578063dd98e3c91461052b57600080fd5b80639d2c76b4116100d15780639d2c76b414610447578063af640d0f14610467578063b361be461461048b578063bf4fe57e146104ab57600080fd5b80638b282947146103d35780638da5cb5b146103f35780639507d39a1461042757600080fd5b80634323c4ef1161016f578063715018a61161013e578063715018a61461035b5780638482643e1461036357806385b3978214610383578063861eb905146103a357600080fd5b80634323c4ef146102f35780634cc82215146103135780634fef6a381461033357806354d1f13d1461035357600080fd5b806325692962116101ab57806325692962146102575780632f30c6f61461025f57806330b67baa1461027f57806331b933b9146102d157600080fd5b8063088dd0b9146101d257806312b111551461020857806313ca8b6a14610235575b600080fd5b3480156101de57600080fd5b506101f26101ed366004611831565b6105d1565b6040516101ff919061186e565b60405180910390f35b34801561021457600080fd5b50610228610223366004611831565b6105ea565b6040516101ff919061192c565b34801561024157600080fd5b50610255610250366004611a3a565b610634565b005b610255610681565b34801561026b57600080fd5b5061025561027a366004611b31565b6106d1565b34801561028b57600080fd5b506000546102ac9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101ff565b3480156102dd57600080fd5b506102e6610757565b6040516101ff9190611b61565b3480156102ff57600080fd5b5061022861030e366004611831565b61078b565b34801561031f57600080fd5b5061025561032e366004611b99565b6108d7565b34801561033f57600080fd5b5061025561034e366004611bb2565b610922565b610255610998565b6102556109d4565b34801561036f57600080fd5b5061025561037e366004611831565b6109e8565b34801561038f57600080fd5b506102ac61039e366004611b99565b610a30565b3480156103af57600080fd5b506103c36103be366004611bb2565b610a82565b60405190151581526020016101ff565b3480156103df57600080fd5b506102556103ee366004611bd6565b610b11565b3480156103ff57600080fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927546102ac565b34801561043357600080fd5b506102ac610442366004611b99565b610b5a565b34801561045357600080fd5b50610255610462366004611bb2565b610b68565b34801561047357600080fd5b5061047d60025481565b6040519081526020016101ff565b34801561049757600080fd5b506102e66104a6366004611c1d565b610757565b3480156104b757600080fd5b506102556104c6366004611bb2565b610c29565b3480156104d757600080fd5b506102556104e6366004611c52565b610c9c565b3480156104f757600080fd5b506103c3610506366004611b99565b610ced565b34801561051757600080fd5b506101f2610526366004611831565b610d0f565b34801561053757600080fd5b5061054b610546366004611b99565b610d5c565b6040516101ff9190611d16565b34801561056457600080fd5b5061054b610573366004611b99565b610d67565b610255610586366004611bb2565b610db1565b610255610599366004611bb2565b610dee565b3480156105aa57600080fd5b5061047d6105b9366004611bb2565b63389a75e1600c908152600091909152602090205490565b60606105e46105df83610e15565b610f5a565b92915050565b60606105f533610a82565b61062b576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105e48261101b565b61063d33610a82565b610673576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61067d8282611033565b5050565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b6106da33610a82565b610710576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61067d82610752836040805173ffffffffffffffffffffffffffffffffffffffff83166020820152606091016040516020818303038152906040529050919050565b611211565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60606000825167ffffffffffffffff8111156107a9576107a9611724565b6040519080825280602002602001820160405280156107dc57816020015b60608152602001906001900390816107c75790505b50905060005b83518110156108d0576001600085838151811061080157610801611d29565b60200260200101518152602001908152602001600020805461082290611d58565b80601f016020809104026020016040519081016040528092919081815260200182805461084e90611d58565b801561089b5780601f106108705761010080835404028352916020019161089b565b820191906000526020600020905b81548152906001019060200180831161087e57829003601f168201915b50505050508282815181106108b2576108b2611d29565b602002602001018190525080806108c890611dab565b9150506107e2565b5092915050565b6108e033610a82565b610916576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61091f816112f3565b50565b61092a611361565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b6109dc611361565b6109e66000611397565b565b6109f133610a82565b610a27576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61091f816113fd565b6000610a3b33610a82565b610a71576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105e4610a7d83611517565b611537565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806105e45750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275473ffffffffffffffffffffffffffffffffffffffff91821691161490565b610b1a33610a82565b610b50576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61067d8282611211565b60006105e4610a7d8361154d565b610b70611361565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610c0e57600080fd5b505af1158015610c22573d6000803e3d6000fd5b5050505050565b610c31611361565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b610ca533610a82565b610cdb576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61067d82610ce8836115ef565b611033565b60008181526001602052604081208054610d0690611d58565b15159392505050565b6060610d1a33610a82565b610d50576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105e46105df8361101b565b60606105e48261154d565b6060610d7233610a82565b610da8576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105e482611517565b610db9611361565b63389a75e1600c52806000526020600c208054421115610de157636f5e88186000526004601cfd5b6000905561091f81611397565b610df6611361565b8060601b610e0c57637448fbae6000526004601cfd5b61091f81611397565b60606000825167ffffffffffffffff811115610e3357610e33611724565b604051908082528060200260200182016040528015610e6657816020015b6060815260200190600190039081610e515790505b50905060005b83518110156108d05760016000858381518110610e8b57610e8b611d29565b602002602001015181526020019081526020016000208054610eac90611d58565b80601f0160208091040260200160405190810160405280929190818152602001828054610ed890611d58565b8015610f255780601f10610efa57610100808354040283529160200191610f25565b820191906000526020600020905b815481529060010190602001808311610f0857829003601f168201915b5050505050828281518110610f3c57610f3c611d29565b60200260200101819052508080610f5290611dab565b915050610e6c565b60606000825167ffffffffffffffff811115610f7857610f78611724565b604051908082528060200260200182016040528015610fa1578160200160208202803683370190505b50905060005b83518110156108d057610fd2848281518110610fc557610fc5611d29565b6020026020010151611537565b828281518110610fe457610fe4611d29565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101528061101381611dab565b915050610fa7565b6060600061102883610e15565b90506105e4836113fd565b805182511461106e576040517fc291f68400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82518110156111335781818151811061108c5761108c611d29565b6020026020010151516000036110ce576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181815181106110e0576110e0611d29565b6020026020010151600160008584815181106110fe576110fe611d29565b6020026020010151815260200190815260200160002090816111209190611e50565b508061112b81611dab565b915050611071565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b835181101561120b578173ffffffffffffffffffffffffffffffffffffffff1663cfd3c57f85838151811061118757611187611d29565b60200260200101518584815181106111a1576111a1611d29565b60200260200101516040518363ffffffff1660e01b81526004016111c6929190611f6a565b600060405180830381600087803b1580156111e057600080fd5b505af11580156111f4573d6000803e3d6000fd5b50505050808061120390611dab565b915050611150565b50505050565b805160000361124c576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526001602052604090206112648282611e50565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906112bd9085908590600401611f6a565b600060405180830381600087803b1580156112d757600080fd5b505af11580156112eb573d6000803e3d6000fd5b505050505050565b600081815260016020526040812061130a916116d6565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610bf4565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275433146109e6576382b429006000526004601cfd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927805473ffffffffffffffffffffffffffffffffffffffff9092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b60005b8151811015611453576001600083838151811061141f5761141f611d29565b60200260200101518152602001908152602001600020600061144191906116d6565b8061144b81611dab565b915050611400565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b8251811015611512578173ffffffffffffffffffffffffffffffffffffffff16630de3b7b58483815181106114a7576114a7611d29565b60200260200101516040518263ffffffff1660e01b81526004016114cd91815260200190565b600060405180830381600087803b1580156114e757600080fd5b505af11580156114fb573d6000803e3d6000fd5b50505050808061150a90611dab565b915050611470565b505050565b606060006115248361154d565b8051909150156105e4576105e4836112f3565b6000818060200190518101906105e49190611f83565b600081815260016020526040902080546060919061156a90611d58565b80601f016020809104026020016040519081016040528092919081815260200182805461159690611d58565b80156115e35780601f106115b8576101008083540402835291602001916115e3565b820191906000526020600020905b8154815290600101906020018083116115c657829003601f168201915b50505050509050919050565b60606000825167ffffffffffffffff81111561160d5761160d611724565b60405190808252806020026020018201604052801561164057816020015b606081526020019060019003908161162b5790505b50905060005b83518110156108d0576116a684828151811061166457611664611d29565b60200260200101516040805173ffffffffffffffffffffffffffffffffffffffff83166020820152606091016040516020818303038152906040529050919050565b8282815181106116b8576116b8611d29565b602002602001018190525080806116ce90611dab565b915050611646565b5080546116e290611d58565b6000825580601f106116f2575050565b601f01602090049060005260206000209081019061091f91905b80821115611720576000815560010161170c565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561179a5761179a611724565b604052919050565b600067ffffffffffffffff8211156117bc576117bc611724565b5060051b60200190565b600082601f8301126117d757600080fd5b813560206117ec6117e7836117a2565b611753565b82815260059290921b8401810191818101908684111561180b57600080fd5b8286015b84811015611826578035835291830191830161180f565b509695505050505050565b60006020828403121561184357600080fd5b813567ffffffffffffffff81111561185a57600080fd5b611866848285016117c6565b949350505050565b6020808252825182820181905260009190848201906040850190845b818110156118bc57835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010161188a565b50909695505050505050565b6000815180845260005b818110156118ee576020818501810151868301820152016118d2565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561199f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261198d8583516118c8565b94509285019290850190600101611953565b5092979650505050505050565b600082601f8301126119bd57600080fd5b813567ffffffffffffffff8111156119d7576119d7611724565b611a0860207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611753565b818152846020838601011115611a1d57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611a4d57600080fd5b823567ffffffffffffffff80821115611a6557600080fd5b611a71868387016117c6565b9350602091508185013581811115611a8857600080fd5b8501601f81018713611a9957600080fd5b8035611aa76117e7826117a2565b81815260059190911b82018401908481019089831115611ac657600080fd5b8584015b83811015611afe57803586811115611ae25760008081fd5b611af08c89838901016119ac565b845250918601918601611aca565b508096505050505050509250929050565b73ffffffffffffffffffffffffffffffffffffffff8116811461091f57600080fd5b60008060408385031215611b4457600080fd5b823591506020830135611b5681611b0f565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b818110156118bc57835183529284019291840191600101611b7d565b600060208284031215611bab57600080fd5b5035919050565b600060208284031215611bc457600080fd5b8135611bcf81611b0f565b9392505050565b60008060408385031215611be957600080fd5b82359150602083013567ffffffffffffffff811115611c0757600080fd5b611c13858286016119ac565b9150509250929050565b600060208284031215611c2f57600080fd5b813567ffffffffffffffff811115611c4657600080fd5b611866848285016119ac565b60008060408385031215611c6557600080fd5b823567ffffffffffffffff80821115611c7d57600080fd5b611c89868387016117c6565b9350602091508185013581811115611ca057600080fd5b85019050601f81018613611cb357600080fd5b8035611cc16117e7826117a2565b81815260059190911b82018301908381019088831115611ce057600080fd5b928401925b82841015611d07578335611cf881611b0f565b82529284019290840190611ce5565b80955050505050509250929050565b602081526000611bcf60208301846118c8565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680611d6c57607f821691505b602082108103611da5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e03577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b601f82111561151257600081815260208120601f850160051c81016020861015611e315750805b601f850160051c820191505b818110156112eb57828155600101611e3d565b815167ffffffffffffffff811115611e6a57611e6a611724565b611e7e81611e788454611d58565b84611e0a565b602080601f831160018114611ed15760008415611e9b5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556112eb565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015611f1e57888601518255948401946001909101908401611eff565b5085821015611f5a57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b82815260406020820152600061186660408301846118c8565b600060208284031215611f9557600080fd5b8151611bcf81611b0f56fea26469706673582212207a4c00e33a6ea1118a30bc3f9c25c173b5a40010d8198f34542b91f083783a7c64736f6c63430008110033";

type AddressBareComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressBareComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressBareComponent__factory extends ContractFactory {
  constructor(...args: AddressBareComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AddressBareComponent> {
    return super.deploy(
      world,
      id,
      overrides || {}
    ) as Promise<AddressBareComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, id, overrides || {});
  }
  override attach(address: string): AddressBareComponent {
    return super.attach(address) as AddressBareComponent;
  }
  override connect(signer: Signer): AddressBareComponent__factory {
    return super.connect(signer) as AddressBareComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressBareComponentInterface {
    return new utils.Interface(_abi) as AddressBareComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressBareComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AddressBareComponent;
  }
}
