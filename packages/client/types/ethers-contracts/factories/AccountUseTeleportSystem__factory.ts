/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AccountUseTeleportSystem,
  AccountUseTeleportSystemInterface,
} from "../AccountUseTeleportSystem";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_world",
        type: "address",
        internalType: "contract IWorld",
      },
      {
        name: "_components",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "deprecate",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "execute",
    inputs: [
      {
        name: "arguments",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeTyped",
    inputs: [
      {
        name: "itemIndex",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "result",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SystemDeprecated",
    inputs: [],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerIsZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NoHandoverRequest",
    inputs: [],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001d3338038062001d3383398101604081905262000034916200012f565b81816200004133620000dc565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200016e565b6001600160a01b039081166080529190911660a0525062000195915050565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a35b50565b6001600160a01b03811681146200011657600080fd5b600080604083850312156200014357600080fd5b8251620001508162000119565b6020840151909250620001638162000119565b809150509250929050565b6000602082840312156200018157600080fd5b81516200018e8162000119565b9392505050565b60805160a051611b51620001e26000396000505060008181610217015281816102430152818161030e0152818161039e015281816103cb015281816103f601526104230152611b516000f3fe6080604052600436106100b15760003560e01c8063715018a611610069578063f04e283e1161004e578063f04e283e1461018f578063f2fde38b146101a2578063fee81cf4146101b557600080fd5b8063715018a6146101335780638da5cb5b1461013b57600080fd5b80630fcc0c281161009a5780630fcc0c281461010c578063256929621461012357806354d1f13d1461012b57600080fd5b806309c5eabe146100b657806309c90324146100ec575b600080fd5b3480156100c257600080fd5b506100d66100d1366004611729565b6101f6565b6040516100e39190611817565b60405180910390f35b3480156100f857600080fd5b506100d661010736600461183c565b61045f565b34801561011857600080fd5b50610121610491565b005b6101216104c4565b610121610514565b610121610550565b34801561014757600080fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e3565b61012161019d366004611859565b610564565b6101216101b0366004611859565b6105a4565b3480156101c157600080fd5b506101e86101d0366004611859565b63389a75e1600c908152600091909152602090205490565b6040519081526020016100e3565b606060008280602001905181019061020e919061188f565b9050600061023c7f0000000000000000000000000000000000000000000000000000000000000000336105cb565b905061029e7f0000000000000000000000000000000000000000000000000000000000000000836040518060400160405280600881526020017f54454c45504f525400000000000000000000000000000000000000000000000081525061078b565b610309576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746861742773206e6f7420612074656c65706f7274000000000000000000000060448201526064015b60405180910390fd5b6103337f00000000000000000000000000000000000000000000000000000000000000008361089c565b610399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f746861742773206e6f7420666f72206163636f756e74730000000000000000006044820152606401610300565b6103c67f000000000000000000000000000000000000000000000000000000000000000082846001610942565b6103f17f000000000000000000000000000000000000000000000000000000000000000083836109a5565b61041e7f000000000000000000000000000000000000000000000000000000000000000082846001610b59565b6104487f000000000000000000000000000000000000000000000000000000000000000082610ba1565b505060408051602081019091526000815292915050565b6040805163ffffffff8316602082015260609161048b91016040516020818303038152906040526101f6565b92915050565b610499610bb0565b6040517f56f33501ffd77f9fe44d81e7db7e66a66bdf52ab3e11267cdc6462763604c4c790600090a1565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b610558610bb0565b6105626000610be6565b565b61056c610bb0565b63389a75e1600c52806000526020600c20805442111561059457636f5e88186000526004601cfd5b600090556105a181610be6565b50565b6105ac610bb0565b8060601b6105c257637448fbae6000526004601cfd5b6105a181610be6565b6000806105f8847ff9b94d2a933222e58f90359e8ec33041c5f08d7bc4304958d1c52c21991da575610c4c565b6040517fcccf7a8e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830181905292935083169063cccf7a8e90602401602060405180830381865afa158015610669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d91906118ac565b6106f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4163636f756e743a204f70657261746f72206e6f7420666f756e6400000000006044820152606401610300565b6040517f9507d39a0000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff831690639507d39a90602401602060405180830381865afa15801561075e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078291906118ce565b95945050505050565b604080517f72656769737472792e6974656d0000000000000000000000000000000000000060208083019190915260e085901b7fffffffff0000000000000000000000000000000000000000000000000000000016602d830152825160118184030181526031909201909252805191012060009061083f85826040518060400160405280600481526020017f4954454d00000000000000000000000000000000000000000000000000000000815250610d98565b8061089157506108918184610874887f024accd0d273ef6123273b21662f5cc055a7d58adf98cc1b060edd029af93f7f610dc9565b73ffffffffffffffffffffffffffffffffffffffff169190610dd5565b9150505b9392505050565b60006108958361093d846040517f72656769737472792e6974656d0000000000000000000000000000000000000060208201527fffffffff0000000000000000000000000000000000000000000000000000000060e083901b16602d820152600090603101604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012092915050565b610df8565b600061094f858585610e25565b905061099d8183610980887fb25ea67b55901db62e4b14311a8c1ab178fec3948b4b493a711970a50aa2a2e1610c4c565b73ffffffffffffffffffffffffffffffffffffffff16919061105e565b505050505050565b604080517f72656769737472792e6974656d0000000000000000000000000000000000000060208083019190915260e085901b7fffffffff0000000000000000000000000000000000000000000000000000000016602d83015282516011818403018152603190920190925280519101206000610a42857f3be9611062b8582cf4b9a4eafe577dbde7dcd7779a1efb46d73e212026c4b0cc610c4c565b6040517f9507d39a0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063d923c3c49085908390639507d39a90602401602060405180830381865afa158015610aba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ade919061188f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b158015610b3a57600080fd5b505af1158015610b4e573d6000803e3d6000fd5b505050505050505050565b610b9b8484846040518060400160405280600881526020017f4954454d5f55534500000000000000000000000000000000000000000000000081525085611106565b50505050565b610bac828242611120565b5050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927543314610562576382b429006000526004601cfd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927805473ffffffffffffffffffffffffffffffffffffffff9092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610cbc573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d0291908101906118e7565b90508051600003610d6f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610300565b610d9081600081518110610d8557610d8561198d565b602002602001015190565b949350505050565b6000610d908383610874877f5d88ced8d8e079072bf73f49fc87661b519c50d79482941abb852ba2b10909cd610c4c565b60006108958383610c4c565b6000610d9082610de586866111d8565b8151602092830120815191909201201490565b600061089583837f37c6543901df832fa6900c3db9b6a34ac3cf572b453474ea23c65fb22dee54426112c4565b604080517f696e76656e746f72792e696e7374616e63650000000000000000000000000000602080830191909152603282018590527fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16605283015282518083036036018152605690920190925280519101206000610edf85836040518060400160405280600981526020017f494e56454e544f52590000000000000000000000000000000000000000000000815250611425565b90508061105657610f10857fd3da495fedd385ac62763d969054ffb19f1777e687374cceb91f1237ddd6bfb3610c4c565b6040517fd923c3c40000000000000000000000000000000000000000000000000000000081526004810184905263ffffffff8516602482015273ffffffffffffffffffffffffffffffffffffffff919091169063d923c3c490604401600060405180830381600087803b158015610f8657600080fd5b505af1158015610f9a573d6000803e3d6000fd5b50505050610fcb857f1ee9964c9c16bbb74f9e401f1ab450f99b2343a602036525f23f0da350bc74d060001c610c4c565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018490526024810186905273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee5906044015b600060405180830381600087803b15801561103d57600080fd5b505af1158015611051573d6000803e3d6000fd5b505050505b509392505050565b60008161106b85856114d3565b61107591906119eb565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018590526024810182905290915073ffffffffffffffffffffffffffffffffffffffff851690631ab06ee590604401600060405180830381600087803b1580156110e757600080fd5b505af11580156110fb573d6000803e3d6000fd5b505050509392505050565b60006111138585856115b2565b905061099d868284611607565b61114a837f342adee7430e96bca6f5d4fe57ba5155dc7271000494e77110c292d51ae887fa610c4c565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018490526024810183905273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee590604401600060405180830381600087803b1580156111bb57600080fd5b505af11580156111cf573d6000803e3d6000fd5b50505050505050565b6040517fdd98e3c90000000000000000000000000000000000000000000000000000000081526004810182905260609060009073ffffffffffffffffffffffffffffffffffffffff85169063dd98e3c990602401600060405180830381865afa158015611249573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261128f9190810190611a2e565b905080516000036112b057505060408051602081019091526000815261048b565b80806020019051810190610d909190611a2e565b6000806112f1857f0e980fab8730829e1930c8cdc024ae35650d9eec12d20425b19fc4ade883178c610c4c565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810186905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa15801561135f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138391906118ac565b801561089157506040517f9507d39a00000000000000000000000000000000000000000000000000000000815260048101859052839073ffffffffffffffffffffffffffffffffffffffff831690639507d39a90602401602060405180830381865afa1580156113f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141b91906118ce565b1495945050505050565b600080611452857f5d88ced8d8e079072bf73f49fc87661b519c50d79482941abb852ba2b10909cd610c4c565b905061147883610de573ffffffffffffffffffffffffffffffffffffffff8416876111d8565b915081611056576040517f6437197700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216906364371977906110239087908790600401611a77565b6040517fdd98e3c900000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063dd98e3c990602401600060405180830381865afa158015611543573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526115899190810190611a2e565b9050805160000361159e57600091505061048b565b80806020019051810190610d9091906118ce565b60008383836040516020016115c993929190611a90565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120949350505050565b610b9b8282611636867fb25ea67b55901db62e4b14311a8c1ab178fec3948b4b493a711970a50aa2a2e1610c4c565b73ffffffffffffffffffffffffffffffffffffffff16919060008161165b85856114d3565b6110759190611b08565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156116db576116db611665565b604052919050565b600067ffffffffffffffff8211156116fd576116fd611665565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006020828403121561173b57600080fd5b813567ffffffffffffffff81111561175257600080fd5b8201601f8101841361176357600080fd5b8035611776611771826116e3565b611694565b81815285602083850101111561178b57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156117c45781810151838201526020016117ac565b50506000910152565b600081518084526117e58160208601602086016117a9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061089560208301846117cd565b63ffffffff811681146105a157600080fd5b60006020828403121561184e57600080fd5b81356108958161182a565b60006020828403121561186b57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461089557600080fd5b6000602082840312156118a157600080fd5b81516108958161182a565b6000602082840312156118be57600080fd5b8151801515811461089557600080fd5b6000602082840312156118e057600080fd5b5051919050565b600060208083850312156118fa57600080fd5b825167ffffffffffffffff8082111561191257600080fd5b818501915085601f83011261192657600080fd5b81518181111561193857611938611665565b8060051b9150611949848301611694565b818152918301840191848101908884111561196357600080fd5b938501935b8385101561198157845182529385019390850190611968565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561048b5761048b6119bc565b6000611a0c611771846116e3565b9050828152838383011115611a2057600080fd5b6108958360208301846117a9565b600060208284031215611a4057600080fd5b815167ffffffffffffffff811115611a5757600080fd5b8201601f81018413611a6857600080fd5b610d90848251602084016119fe565b828152604060208201526000610d9060408301846117cd565b7f69732e646174610000000000000000000000000000000000000000000000000081528360078201527fffffffff000000000000000000000000000000000000000000000000000000008360e01b16602782015260008251611af981602b8501602087016117a9565b91909101602b01949350505050565b8082018082111561048b5761048b6119bc56fea2646970667358221220f03b3cd58e9bdddf9aa402d606f9d53838f2d3b13eb47690173512f210ad692b64736f6c63430008110033";

type AccountUseTeleportSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountUseTeleportSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountUseTeleportSystem__factory extends ContractFactory {
  constructor(...args: AccountUseTeleportSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccountUseTeleportSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<AccountUseTeleportSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): AccountUseTeleportSystem {
    return super.attach(address) as AccountUseTeleportSystem;
  }
  override connect(signer: Signer): AccountUseTeleportSystem__factory {
    return super.connect(signer) as AccountUseTeleportSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountUseTeleportSystemInterface {
    return new utils.Interface(_abi) as AccountUseTeleportSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountUseTeleportSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccountUseTeleportSystem;
  }
}
