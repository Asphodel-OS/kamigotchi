/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  HarmonyComponent,
  HarmonyComponentInterface,
} from "../HarmonyComponent";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "world",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "authorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "boost",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amt",
        type: "int32",
        internalType: "int32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int32",
        internalType: "int32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "calcTotal",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int32",
        internalType: "int32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "extract",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Stat",
        components: [
          {
            name: "base",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "shift",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "boost",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "sync",
            type: "int32",
            internalType: "int32",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct Stat[]",
        components: [
          {
            name: "base",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "shift",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "boost",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "sync",
            type: "int32",
            internalType: "int32",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "get",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Stat",
        components: [
          {
            name: "base",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "shift",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "boost",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "sync",
            type: "int32",
            internalType: "int32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct Stat[]",
        components: [
          {
            name: "base",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "shift",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "boost",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "sync",
            type: "int32",
            internalType: "int32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntities",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitiesWithValue",
    inputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "has",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "id",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "result",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerWorld",
    inputs: [
      {
        name: "_world",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "remove",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "value",
        type: "tuple",
        internalType: "struct Stat",
        components: [
          {
            name: "base",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "shift",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "boost",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "sync",
            type: "int32",
            internalType: "int32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "values",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "values",
        type: "tuple[]",
        internalType: "struct Stat[]",
        components: [
          {
            name: "base",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "shift",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "boost",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "sync",
            type: "int32",
            internalType: "int32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "shift",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amt",
        type: "int32",
        internalType: "int32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int32",
        internalType: "int32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "sync",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amt",
        type: "int32",
        internalType: "int32",
      },
      {
        name: "max",
        type: "int32",
        internalType: "int32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int32",
        internalType: "int32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "sync",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amt",
        type: "int32",
        internalType: "int32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int32",
        internalType: "int32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "unauthorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "world",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "writeAccess",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "BareComponent__NotImplemented",
    inputs: [],
  },
  {
    type: "error",
    name: "BatchOp_UnexpectedLength",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerIsZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NoHandoverRequest",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableWritable__NotWriter",
    inputs: [],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroValueNotAllowed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200291d3803806200291d83398101604081905262000034916200016e565b807f5b5054d7f0fe411d96cb1c9605f65b42805d28ce5bb4ce216455e888cdc5373c818162000063336200008e565b60028190556001600160a01b0382161562000083576200008382620000ca565b5050505050620001a0565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a350565b620000d462000150565b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200013457600080fd5b505af115801562000149573d6000803e3d6000fd5b5050505050565b638b78c6d8195433146200016c576382b429006000526004601cfd5b565b6000602082840312156200018157600080fd5b81516001600160a01b03811681146200019957600080fd5b9392505050565b61276d80620001b06000396000f3fe6080604052600436106102345760003560e01c8063861eb90511610138578063b361be46116100b0578063dd98e3c91161007f578063f04e283e11610064578063f04e283e1461069b578063f2fde38b146106ae578063fee81cf4146106c157600080fd5b8063dd98e3c91461064e578063e9ff6c761461067b57600080fd5b8063b361be46146105ce578063bf4fe57e146105ee578063cccf7a8e1461060e578063dc5c22cd1461062e57600080fd5b80639ad3095611610107578063a8ed7591116100ec578063a8ed75911461056a578063af6128c21461058a578063af640d0f146105aa57600080fd5b80639ad309561461052a5780639d2c76b41461054a57600080fd5b8063861eb905146104865780638b282947146104b65780638da5cb5b146104d65780639507d39a1461050a57600080fd5b80634323c4ef116101cb5780635c067cce1161019a578063715018a61161017f578063715018a6146104315780638482643e1461043957806385b397821461045957600080fd5b80635c067cce146103f15780636ef23a3d1461041157600080fd5b80634323c4ef146103895780634cc82215146103a95780634fef6a38146103c957806354d1f13d146103e957600080fd5b8063256929621161020757806325692962146102ed57806330b67baa146102f557806331b933b91461034757806332e5cc301461036957600080fd5b806306e7645614610239578063088dd0b91461027157806312b111551461029e57806313ca8b6a146102cb575b600080fd5b34801561024557600080fd5b50610259610254366004611c90565b6106f4565b60405160039190910b81526020015b60405180910390f35b34801561027d57600080fd5b5061029161028c366004611dd9565b61076b565b6040516102689190611e16565b3480156102aa57600080fd5b506102be6102b9366004611dd9565b610784565b6040516102689190611ef5565b3480156102d757600080fd5b506102eb6102e6366004612003565b6107d3565b005b6102eb610820565b34801561030157600080fd5b506000546103229073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610268565b34801561035357600080fd5b5061035c610870565b60405161026891906120d8565b34801561037557600080fd5b506102eb610384366004612190565b6108a4565b34801561039557600080fd5b506102be6103a4366004611dd9565b6108ed565b3480156103b557600080fd5b506102eb6103c43660046121bd565b610a39565b3480156103d557600080fd5b506102eb6103e43660046121d6565b610a84565b6102eb610afa565b3480156103fd57600080fd5b506102eb61040c36600461220c565b610b36565b34801561041d57600080fd5b5061025961042c3660046122d2565b610b87565b6102eb610c05565b34801561044557600080fd5b506102eb610454366004611dd9565b610c19565b34801561046557600080fd5b506104796104743660046121bd565b610c61565b60405161026891906122f5565b34801561049257600080fd5b506104a66104a13660046121d6565b610cd5565b6040519015158152602001610268565b3480156104c257600080fd5b506102eb6104d1366004612330565b610d64565b3480156104e257600080fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff7487392754610322565b34801561051657600080fd5b506104796105253660046121bd565b610dad565b34801561053657600080fd5b506102596105453660046122d2565b610dda565b34801561055657600080fd5b506102eb6105653660046121d6565b610e4f565b34801561057657600080fd5b506102596105853660046122d2565b610f10565b34801561059657600080fd5b506102596105a53660046121bd565b610f85565b3480156105b657600080fd5b506105c060025481565b604051908152602001610268565b3480156105da57600080fd5b5061035c6105e9366004612377565b610870565b3480156105fa57600080fd5b506102eb6106093660046121d6565b610fa3565b34801561061a57600080fd5b506104a66106293660046121bd565b611016565b34801561063a57600080fd5b50610291610649366004611dd9565b611038565b34801561065a57600080fd5b5061066e6106693660046121bd565b611085565b60405161026891906123ac565b34801561068757600080fd5b5061066e6106963660046121bd565b611090565b6102eb6106a93660046121d6565b6110da565b6102eb6106bc3660046121d6565b611117565b3480156106cd57600080fd5b506105c06106dc3660046121d6565b63389a75e1600c908152600091909152602090205490565b60006106ff33610cd5565b610735576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006107408561113e565b905061074d81858561116e565b60030b606082015261075f85826111ca565b60600151949350505050565b606061077e610779836111dc565b611321565b92915050565b606061078f33610cd5565b6107c5576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61077e82611410565b919050565b6107dc33610cd5565b610812576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61081c8282611428565b5050565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108ad33610cd5565b6108e3576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61081c82826111ca565b60606000825167ffffffffffffffff81111561090b5761090b611ccc565b60405190808252806020026020018201604052801561093e57816020015b60608152602001906001900390816109295790505b50905060005b8351811015610a325760016000858381518110610963576109636123bf565b602002602001015181526020019081526020016000208054610984906123ee565b80601f01602080910402602001604051908101604052809291908181526020018280546109b0906123ee565b80156109fd5780601f106109d2576101008083540402835291602001916109fd565b820191906000526020600020905b8154815290600101906020018083116109e057829003601f168201915b5050505050828281518110610a1457610a146123bf565b60200260200101819052508080610a2a90612470565b915050610944565b5092915050565b610a4233610cd5565b610a78576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a8181611606565b50565b610a8c611674565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b610b3f33610cd5565b610b75576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61081c82610b82836116aa565b611428565b6000610b9233610cd5565b610bc8576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610bd38461113e565b9050610be88184610be38461175c565b61116e565b60030b6060820152610bfa84826111ca565b606001519392505050565b610c0d611674565b610c1760006117af565b565b610c2233610cd5565b610c58576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a8181611815565b604080516080810182526000808252602082018190529181018290526060810191909152610c8e33610cd5565b610cc4576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61077e610cd08361192f565b61194f565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061077e5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275473ffffffffffffffffffffffffffffffffffffffff91821691161490565b610d6d33610cd5565b610da3576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61081c8282611a16565b60408051608081018252600080825260208201819052918101829052606081019190915261077e8261113e565b6000610de533610cd5565b610e1b576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610e268461113e565b9050610e328184611af8565b60030b6020820152610e4484826111ca565b602001519392505050565b610e57611674565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610ef557600080fd5b505af1158015610f09573d6000803e3d6000fd5b5050505050565b6000610f1b33610cd5565b610f51576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610f5c8461113e565b9050610f688184611b0a565b60030b6040820152610f7a84826111ca565b604001519392505050565b600080610f918361113e565b9050610f9c8161175c565b9392505050565b610fab611674565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6000818152600160205260408120805461102f906123ee565b15159392505050565b606061104333610cd5565b611079576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61077e61077983611410565b606061077e82611b1c565b606061109b33610cd5565b6110d1576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61077e8261192f565b6110e2611674565b63389a75e1600c52806000526020600c20805442111561110a57636f5e88186000526004601cfd5b60009055610a81816117af565b61111f611674565b8060601b61113557637448fbae6000526004601cfd5b610a81816117af565b60408051608081018252600080825260208201819052918101829052606081019190915261077e610cd083611b1c565b6000828460600181815161118291906124a8565b600390810b90915260608601516000910b121590506111a357600060608501525b8160030b846060015160030b13156111c057600382900b60608501525b5050506060015190565b61081c826111d783611bbe565b611a16565b60606000825167ffffffffffffffff8111156111fa576111fa611ccc565b60405190808252806020026020018201604052801561122d57816020015b60608152602001906001900390816112185790505b50905060005b8351811015610a325760016000858381518110611252576112526123bf565b602002602001015181526020019081526020016000208054611273906123ee565b80601f016020809104026020016040519081016040528092919081815260200182805461129f906123ee565b80156112ec5780601f106112c1576101008083540402835291602001916112ec565b820191906000526020600020905b8154815290600101906020018083116112cf57829003601f168201915b5050505050828281518110611303576113036123bf565b6020026020010181905250808061131990612470565b915050611233565b60606000825167ffffffffffffffff81111561133f5761133f611ccc565b6040519080825280602002602001820160405280156113af57816020015b6040805160808101825260008082526020808301829052928201819052606082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161135d5790505b50905060005b8351811015610a32576113e08482815181106113d3576113d36123bf565b602002602001015161194f565b8282815181106113f2576113f26123bf565b6020026020010181905250808061140890612470565b9150506113b5565b6060600061141d836111dc565b905061077e83611815565b8051825114611463576040517fc291f68400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b825181101561152857818181518110611481576114816123bf565b6020026020010151516000036114c3576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181815181106114d5576114d56123bf565b6020026020010151600160008584815181106114f3576114f36123bf565b6020026020010151815260200190815260200160002090816115159190612530565b508061152081612470565b915050611466565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b8351811015611600578173ffffffffffffffffffffffffffffffffffffffff1663cfd3c57f85838151811061157c5761157c6123bf565b6020026020010151858481518110611596576115966123bf565b60200260200101516040518363ffffffff1660e01b81526004016115bb92919061264a565b600060405180830381600087803b1580156115d557600080fd5b505af11580156115e9573d6000803e3d6000fd5b5050505080806115f890612470565b915050611545565b50505050565b600081815260016020526040812061161d91611c30565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610edb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927543314610c17576382b429006000526004601cfd5b60606000825167ffffffffffffffff8111156116c8576116c8611ccc565b6040519080825280602002602001820160405280156116fb57816020015b60608152602001906001900390816116e65790505b50905060005b8351811015610a325761172c84828151811061171f5761171f6123bf565b6020026020010151611bbe565b82828151811061173e5761173e6123bf565b6020026020010181905250808061175490612470565b915050611701565b6000806103e88360200151846000015161177691906124a8565b6040850151611787906103e86124a8565b6117919190612663565b61179b9190612683565b905060008160030b1361077e576000610f9c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927805473ffffffffffffffffffffffffffffffffffffffff9092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b60005b815181101561186b5760016000838381518110611837576118376123bf565b6020026020010151815260200190815260200160002060006118599190611c30565b8061186381612470565b915050611818565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b825181101561192a578173ffffffffffffffffffffffffffffffffffffffff16630de3b7b58483815181106118bf576118bf6123bf565b60200260200101516040518263ffffffff1660e01b81526004016118e591815260200190565b600060405180830381600087803b1580156118ff57600080fd5b505af1158015611913573d6000803e3d6000fd5b50505050808061192290612470565b915050611888565b505050565b6060600061193c83611b1c565b80519091501561077e5761077e83611606565b60408051608081018252600080825260208201819052918101829052606081019190915261077e8280602001905181019061198a919061271e565b604080516080810182526000808252602082018190529181018290526060810191909152604051806080016040528060c084901c67ffffffffffffffff1660030b8152602001608084901c67ffffffffffffffff1660030b8152602001604084901c67ffffffffffffffff1660030b81526020018367ffffffffffffffff1660030b8152509050919050565b8051600003611a51576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000828152600160205260409020611a698282612530565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90611ac2908590859060040161264a565b600060405180830381600087803b158015611adc57600080fd5b505af1158015611af0573d6000803e3d6000fd5b505050505050565b6000818360200151610f9c91906124a8565b6000818360400151610f9c91906124a8565b6000818152600160205260409020805460609190611b39906123ee565b80601f0160208091040260200160405190810160405280929190818152602001828054611b65906123ee565b8015611bb25780601f10611b8757610100808354040283529160200191611bb2565b820191906000526020600020905b815481529060010190602001808311611b9557829003601f168201915b50505050509050919050565b6060611c08826000816060015163ffffffff166040836040015163ffffffff16901b6080846020015163ffffffff16901b60c0856000015163ffffffff16901b1717179050919050565b604051602001611c1a91815260200190565b6040516020818303038152906040529050919050565b508054611c3c906123ee565b6000825580601f10611c4c575050565b601f016020900490600052602060002090810190610a8191905b80821115611c7a5760008155600101611c66565b5090565b8035600381900b81146107ce57600080fd5b600080600060608486031215611ca557600080fd5b83359250611cb560208501611c7e565b9150611cc360408501611c7e565b90509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611d4257611d42611ccc565b604052919050565b600067ffffffffffffffff821115611d6457611d64611ccc565b5060051b60200190565b600082601f830112611d7f57600080fd5b81356020611d94611d8f83611d4a565b611cfb565b82815260059290921b84018101918181019086841115611db357600080fd5b8286015b84811015611dce5780358352918301918301611db7565b509695505050505050565b600060208284031215611deb57600080fd5b813567ffffffffffffffff811115611e0257600080fd5b611e0e84828501611d6e565b949350505050565b6020808252825182820181905260009190848201906040850190845b81811015611e8557611e72838551805160030b8252602081015160030b6020830152604081015160030b6040830152606081015160030b60608301525050565b9284019260809290920191600101611e32565b50909695505050505050565b6000815180845260005b81811015611eb757602081850181015186830182015201611e9b565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611f68577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611f56858351611e91565b94509285019290850190600101611f1c565b5092979650505050505050565b600082601f830112611f8657600080fd5b813567ffffffffffffffff811115611fa057611fa0611ccc565b611fd160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611cfb565b818152846020838601011115611fe657600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561201657600080fd5b823567ffffffffffffffff8082111561202e57600080fd5b61203a86838701611d6e565b935060209150818501358181111561205157600080fd5b8501601f8101871361206257600080fd5b8035612070611d8f82611d4a565b81815260059190911b8201840190848101908983111561208f57600080fd5b8584015b838110156120c7578035868111156120ab5760008081fd5b6120b98c8983890101611f75565b845250918601918601612093565b508096505050505050509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611e85578351835292840192918401916001016120f4565b60006080828403121561212257600080fd5b6040516080810181811067ffffffffffffffff8211171561214557612145611ccc565b60405290508061215483611c7e565b815261216260208401611c7e565b602082015261217360408401611c7e565b604082015261218460608401611c7e565b60608201525092915050565b60008060a083850312156121a357600080fd5b823591506121b48460208501612110565b90509250929050565b6000602082840312156121cf57600080fd5b5035919050565b6000602082840312156121e857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610f9c57600080fd5b6000806040838503121561221f57600080fd5b823567ffffffffffffffff8082111561223757600080fd5b61224386838701611d6e565b935060209150818501358181111561225a57600080fd5b85019050601f8101861361226d57600080fd5b803561227b611d8f82611d4a565b81815260079190911b8201830190838101908883111561229a57600080fd5b928401925b828410156122c3576122b18985612110565b8252848201915060808401935061229f565b80955050505050509250929050565b600080604083850312156122e557600080fd5b823591506121b460208401611c7e565b6080810161077e8284805160030b8252602081015160030b6020830152604081015160030b6040830152606081015160030b60608301525050565b6000806040838503121561234357600080fd5b82359150602083013567ffffffffffffffff81111561236157600080fd5b61236d85828601611f75565b9150509250929050565b60006020828403121561238957600080fd5b813567ffffffffffffffff8111156123a057600080fd5b611e0e84828501611f75565b602081526000610f9c6020830184611e91565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061240257607f821691505b60208210810361243b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036124a1576124a1612441565b5060010190565b600381810b9083900b01637fffffff81137fffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000008212171561077e5761077e612441565b601f82111561192a57600081815260208120601f850160051c810160208610156125115750805b601f850160051c820191505b81811015611af05782815560010161251d565b815167ffffffffffffffff81111561254a5761254a611ccc565b61255e8161255884546123ee565b846124ea565b602080601f8311600181146125b1576000841561257b5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611af0565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156125fe578886015182559484019460019091019084016125df565b508582101561263a57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b828152604060208201526000611e0e6040830184611e91565b60008260030b8260030b028060030b9150808214610a3257610a32612441565b60008160030b8360030b806126c1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81147fffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000008314161561271557612715612441565b90059392505050565b60006020828403121561273057600080fd5b505191905056fea264697066735822122029dc1b4b9aceae018be47e0e7043bcf72094b10bd7c57a070f11b45e6a0b47ef64736f6c63430008110033";

type HarmonyComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HarmonyComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HarmonyComponent__factory extends ContractFactory {
  constructor(...args: HarmonyComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HarmonyComponent> {
    return super.deploy(world, overrides || {}) as Promise<HarmonyComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): HarmonyComponent {
    return super.attach(address) as HarmonyComponent;
  }
  override connect(signer: Signer): HarmonyComponent__factory {
    return super.connect(signer) as HarmonyComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HarmonyComponentInterface {
    return new utils.Interface(_abi) as HarmonyComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HarmonyComponent {
    return new Contract(address, _abi, signerOrProvider) as HarmonyComponent;
  }
}
