/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AccountSetFarcasterDataSystem,
  AccountSetFarcasterDataSystemInterface,
} from "../AccountSetFarcasterDataSystem";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_world",
        type: "address",
        internalType: "contract IWorld",
      },
      {
        name: "_components",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "deprecate",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "execute",
    inputs: [
      {
        name: "arguments",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeTyped",
    inputs: [
      {
        name: "fid",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "pfpURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "result",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SystemDeprecated",
    inputs: [],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerIsZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NoHandoverRequest",
    inputs: [],
  },
  {
    type: "error",
    name: "QueryOrderNotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200181e3803806200181e83398101604081905262000034916200012f565b81816200004133620000dc565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200016e565b6001600160a01b039081166080529190911660a0525062000195915050565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a35b50565b6001600160a01b03811681146200011657600080fd5b600080604083850312156200014357600080fd5b8251620001508162000119565b6020840151909250620001638162000119565b809150509250929050565b6000602082840312156200018157600080fd5b81516200018e8162000119565b9392505050565b60805160a05161164a620001d4600039600050506000818161021a015281816102b30152818161034901528181610374015261039f015261164a6000f3fe6080604052600436106100b15760003560e01c80638da5cb5b11610069578063f04e283e1161004e578063f04e283e1461018f578063f2fde38b146101a2578063fee81cf4146101b557600080fd5b80638da5cb5b1461011b578063b1dc5aa61461016f57600080fd5b8063256929621161009a578063256929621461010357806354d1f13d1461010b578063715018a61461011357600080fd5b806309c5eabe146100b65780630fcc0c28146100ec575b600080fd5b3480156100c257600080fd5b506100d66100d1366004611158565b6101f6565b6040516100e3919061120f565b60405180910390f35b3480156100f857600080fd5b506101016103e9565b005b61010161041c565b61010161046c565b6101016104a8565b34801561012757600080fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e3565b34801561017b57600080fd5b506100d661018a366004611234565b6104bc565b61010161019d366004611298565b6104f1565b6101016101b0366004611298565b610531565b3480156101c157600080fd5b506101e86101d0366004611298565b63389a75e1600c908152600091909152602090205490565b6040519081526020016100e3565b60606000808380602001905181019061020f9190611305565b91509150600061023f7f000000000000000000000000000000000000000000000000000000000000000084610558565b905080156102ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4163636f756e743a2066696420616c726561647920636c61696d65640000000060448201526064015b60405180910390fd5b6102d87f00000000000000000000000000000000000000000000000000000000000000003361061e565b905080600003610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4163636f756e743a20646f6573206e6f7420657869737400000000000000000060448201526064016102a5565b61036f7f000000000000000000000000000000000000000000000000000000000000000082856106ae565b61039a7f0000000000000000000000000000000000000000000000000000000000000000828461076c565b6103c47f0000000000000000000000000000000000000000000000000000000000000000826107d0565b6040805160208101839052016040516020818303038152906040529350505050919050565b6103f16107df565b6040517f56f33501ffd77f9fe44d81e7db7e66a66bdf52ab3e11267cdc6462763604c4c790600090a1565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b6104b06107df565b6104ba6000610815565b565b60606104e883836040516020016104d4929190611360565b6040516020818303038152906040526101f6565b90505b92915050565b6104f96107df565b63389a75e1600c52806000526020600c20805442111561052157636f5e88186000526004601cfd5b6000905561052e81610815565b50565b6105396107df565b8060601b61054f57637448fbae6000526004601cfd5b61052e81610815565b6000806105e8846040518060400160405280600781526020017f4143434f554e54000000000000000000000000000000000000000000000000008152506105c2877fe52fb4f348048b28b8ab655215c3747cbe8c2c4570c9602cc837a3238178049660001c61087b565b6040805163ffffffff89166020820152015b604051602081830303815290604052610887565b905060008151116105fa576000610616565b8060008151811061060d5761060d61137f565b60200260200101515b949350505050565b6000806105e8846040518060400160405280600781526020017f4143434f554e5400000000000000000000000000000000000000000000000000815250610688877f6caa0553213b46b61cbf982ee3246d8a2a4e5b4936a7594770d391463046f22e60001c61087b565b6040805173ffffffffffffffffffffffffffffffffffffffff89166020820152016105d4565b6106d8837fe52fb4f348048b28b8ab655215c3747cbe8c2c4570c9602cc837a323817804966109d0565b6040517fd923c3c40000000000000000000000000000000000000000000000000000000081526004810184905263ffffffff8316602482015273ffffffffffffffffffffffffffffffffffffffff919091169063d923c3c4906044015b600060405180830381600087803b15801561074f57600080fd5b505af1158015610763573d6000803e3d6000fd5b50505050505050565b610796837f4683ab681c8fb08ca17959d67c914890fbdf5a6fce1f72e885b7a2ebe6856afd6109d0565b73ffffffffffffffffffffffffffffffffffffffff16636437197783836040518363ffffffff1660e01b81526004016107359291906113ae565b6107db828242610b14565b5050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275433146104ba576382b429006000526004601cfd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927805473ffffffffffffffffffffffffffffffffffffffff9092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b60006104e883836109d0565b604080516002808252606082810190935260009190816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816108a157905050604080516060810190915290915080600281526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815250816000815181106109195761091961137f565b602090810291909101015260408051606081019091528060028152602001610961887f5d88ced8d8e079072bf73f49fc87661b519c50d79482941abb852ba2b10909cd61087b565b73ffffffffffffffffffffffffffffffffffffffff1681526020018660405160200161098d919061120f565b604051602081830303815290604052815250816001815181106109b2576109b261137f565b60200260200101819052506109c681610b9a565b9695505050505050565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610a40573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a86919081019061141a565b90508051600003610af3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016102a5565b61061681600081518110610b0957610b0961137f565b602002602001015190565b610b3e837f342adee7430e96bca6f5d4fe57ba5155dc7271000494e77110c292d51ae887fa6109d0565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018490526024810183905273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee590604401610735565b60608151600003610bbe5760408051600080825260208201909252905b5092915050565b600282600081518110610bd357610bd361137f565b6020026020010151600001516003811115610bf057610bf06113c7565b14610c27576040517feec45f3600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082600081518110610c3c57610c3c61137f565b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff1663b361be4684600081518110610c7657610c7661137f565b6020026020010151604001516040518263ffffffff1660e01b8152600401610c9e919061120f565b600060405180830381865afa158015610cbb573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d01919081019061141a565b905060015b8351811015610bb757610d32848281518110610d2457610d2461137f565b602002602001015183610d46565b915080610d3e816114ab565b915050610d06565b60606000836020015173ffffffffffffffffffffffffffffffffffffffff16634323c4ef846040518263ffffffff1660e01b8152600401610d87919061150a565b600060405180830381865afa158015610da4573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610dea919081019061154e565b90506000805b8251811015610e6657610e1c86848381518110610e0f57610e0f61137f565b6020026020010151610e7a565b15610e335781610e2b816114ab565b925050610e54565b6000858281518110610e4757610e4761137f565b6020026020010181815250505b80610e5e816114ab565b915050610df0565b50610e718482610f61565b95945050505050565b60008083516003811115610e9057610e906113c7565b03610e9f5750805115156104eb565b600283516003811115610eb457610eb46113c7565b03610ed55781805190602001208360400151805190602001201490506104eb565b600183516003811115610eea57610eea6113c7565b03610ef857508051156104eb565b600383516003811115610f0d57610f0d6113c7565b03610f2f578180519060200120836040015180519060200120141590506104eb565b6040517feec45f3600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606081600003610f8057506040805160008152602081019091526104eb565b60008267ffffffffffffffff811115610f9b57610f9b611056565b604051908082528060200260200182016040528015610fc4578160200160208202803683370190505b5090506000805b855181101561104c57858181518110610fe657610fe661137f565b602002602001015160001461103a578581815181106110075761100761137f565b602002602001015183838061101b906114ab565b94508151811061102d5761102d61137f565b6020026020010181815250505b80611044816114ab565b915050610fcb565b5090949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156110cc576110cc611056565b604052919050565b600067ffffffffffffffff8211156110ee576110ee611056565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600061112d611128846110d4565b611085565b905082815283838301111561114157600080fd5b828260208301376000602084830101529392505050565b60006020828403121561116a57600080fd5b813567ffffffffffffffff81111561118157600080fd5b8201601f8101841361119257600080fd5b6106168482356020840161111a565b60005b838110156111bc5781810151838201526020016111a4565b50506000910152565b600081518084526111dd8160208601602086016111a1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006104e860208301846111c5565b63ffffffff8116811461052e57600080fd5b6000806040838503121561124757600080fd5b823561125281611222565b9150602083013567ffffffffffffffff81111561126e57600080fd5b8301601f8101851361127f57600080fd5b61128e8582356020840161111a565b9150509250929050565b6000602082840312156112aa57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146112ce57600080fd5b9392505050565b60006112e3611128846110d4565b90508281528383830111156112f757600080fd5b6112ce8360208301846111a1565b6000806040838503121561131857600080fd5b825161132381611222565b602084015190925067ffffffffffffffff81111561134057600080fd5b8301601f8101851361135157600080fd5b61128e858251602084016112d5565b63ffffffff8316815260406020820152600061061660408301846111c5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b82815260406020820152600061061660408301846111c5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600067ffffffffffffffff82111561141057611410611056565b5060051b60200190565b6000602080838503121561142d57600080fd5b825167ffffffffffffffff81111561144457600080fd5b8301601f8101851361145557600080fd5b8051611463611128826113f6565b81815260059190911b8201830190838101908783111561148257600080fd5b928401925b828410156114a057835182529284019290840190611487565b979650505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611503577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6020808252825182820181905260009190848201906040850190845b8181101561154257835183529284019291840191600101611526565b50909695505050505050565b6000602080838503121561156157600080fd5b825167ffffffffffffffff8082111561157957600080fd5b818501915085601f83011261158d57600080fd5b815161159b611128826113f6565b81815260059190911b830184019084810190888311156115ba57600080fd5b8585015b83811015611607578051858111156115d65760008081fd5b8601603f81018b136115e85760008081fd5b6115f98b89830151604084016112d5565b8452509186019186016115be565b509897505050505050505056fea2646970667358221220de324c392281ed112a8f539dacff6ff4cb4e402d4df36b82b64cbf7f71fa582d64736f6c63430008110033";

type AccountSetFarcasterDataSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountSetFarcasterDataSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountSetFarcasterDataSystem__factory extends ContractFactory {
  constructor(...args: AccountSetFarcasterDataSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccountSetFarcasterDataSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<AccountSetFarcasterDataSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): AccountSetFarcasterDataSystem {
    return super.attach(address) as AccountSetFarcasterDataSystem;
  }
  override connect(signer: Signer): AccountSetFarcasterDataSystem__factory {
    return super.connect(signer) as AccountSetFarcasterDataSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountSetFarcasterDataSystemInterface {
    return new utils.Interface(_abi) as AccountSetFarcasterDataSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountSetFarcasterDataSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccountSetFarcasterDataSystem;
  }
}
