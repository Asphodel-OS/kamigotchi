/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  Int32BareComponent,
  Int32BareComponentInterface,
} from "../Int32BareComponent";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "world",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "authorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "extract",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int32",
        internalType: "int32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int32[]",
        internalType: "int32[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "get",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int32",
        internalType: "int32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int32[]",
        internalType: "int32[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntities",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitiesWithValue",
    inputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "has",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "id",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "result",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerWorld",
    inputs: [
      {
        name: "_world",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "remove",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "value",
        type: "int32",
        internalType: "int32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "values",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "values",
        type: "int32[]",
        internalType: "int32[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "unauthorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "world",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "writeAccess",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "BareComponent__NotImplemented",
    inputs: [],
  },
  {
    type: "error",
    name: "BatchOp_UnexpectedLength",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerIsZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NoHandoverRequest",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableWritable__NotWriter",
    inputs: [],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroValueNotAllowed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200213f3803806200213f83398101604081905262000034916200014b565b818162000041336200006b565b60028190556001600160a01b0382161562000061576200006182620000a7565b5050505062000187565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a350565b620000b16200012d565b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200011157600080fd5b505af115801562000126573d6000803e3d6000fd5b5050505050565b638b78c6d81954331462000149576382b429006000526004601cfd5b565b600080604083850312156200015f57600080fd5b82516001600160a01b03811681146200017757600080fd5b6020939093015192949293505050565b611fa880620001976000396000f3fe6080604052600436106101cd5760003560e01c80638b282947116100f7578063cccf7a8e11610095578063e9ff6c7611610064578063e9ff6c761461056b578063f04e283e1461058b578063f2fde38b1461059e578063fee81cf4146105b157600080fd5b8063cccf7a8e146104de578063d93c413f146104fe578063dc5c22cd1461051e578063dd98e3c91461053e57600080fd5b80639d2c76b4116100d15780639d2c76b41461045a578063af640d0f1461047a578063b361be461461049e578063bf4fe57e146104be57600080fd5b80638b282947146103e65780638da5cb5b146104065780639507d39a1461043a57600080fd5b80634323c4ef1161016f578063715018a61161013e578063715018a61461035b5780638482643e1461036357806385b3978214610383578063861eb905146103b657600080fd5b80634323c4ef146102f35780634cc82215146103135780634fef6a381461033357806354d1f13d1461035357600080fd5b806325692962116101ab578063256929621461025757806327e901261461025f57806330b67baa1461027f57806331b933b9146102d157600080fd5b8063088dd0b9146101d257806312b111551461020857806313ca8b6a14610235575b600080fd5b3480156101de57600080fd5b506101f26101ed366004611810565b6105e4565b6040516101ff919061184d565b60405180910390f35b34801561021457600080fd5b50610228610223366004611810565b6105fd565b6040516101ff91906118f8565b34801561024157600080fd5b50610255610250366004611a06565b610647565b005b610255610694565b34801561026b57600080fd5b5061025561027a366004611aea565b6106e4565b34801561028b57600080fd5b506000546102ac9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101ff565b3480156102dd57600080fd5b506102e6610735565b6040516101ff9190611bae565b3480156102ff57600080fd5b5061022861030e366004611810565b610769565b34801561031f57600080fd5b5061025561032e366004611be6565b6108b5565b34801561033f57600080fd5b5061025561034e366004611bff565b610900565b610255610976565b6102556109b2565b34801561036f57600080fd5b5061025561037e366004611810565b6109c6565b34801561038f57600080fd5b506103a361039e366004611be6565b610a0e565b60405160039190910b81526020016101ff565b3480156103c257600080fd5b506103d66103d1366004611bff565b610a60565b60405190151581526020016101ff565b3480156103f257600080fd5b50610255610401366004611c3c565b610aef565b34801561041257600080fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927546102ac565b34801561044657600080fd5b506103a3610455366004611be6565b610b38565b34801561046657600080fd5b50610255610475366004611bff565b610b46565b34801561048657600080fd5b5061049060025481565b6040519081526020016101ff565b3480156104aa57600080fd5b506102e66104b9366004611c83565b610735565b3480156104ca57600080fd5b506102556104d9366004611bff565b610c07565b3480156104ea57600080fd5b506103d66104f9366004611be6565b610c7a565b34801561050a57600080fd5b50610255610519366004611cb8565b610c9c565b34801561052a57600080fd5b506101f2610539366004611810565b610d10565b34801561054a57600080fd5b5061055e610559366004611be6565b610d5d565b6040516101ff9190611ce8565b34801561057757600080fd5b5061055e610586366004611be6565b610d68565b610255610599366004611bff565b610db2565b6102556105ac366004611bff565b610def565b3480156105bd57600080fd5b506104906105cc366004611bff565b63389a75e1600c908152600091909152602090205490565b60606105f76105f283610e16565b610f5b565b92915050565b606061060833610a60565b61063e576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105f78261100c565b61065033610a60565b610686576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106908282611024565b5050565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b6106ed33610a60565b610723576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106908261073083611202565b611024565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60606000825167ffffffffffffffff81111561078757610787611703565b6040519080825280602002602001820160405280156107ba57816020015b60608152602001906001900390816107a55790505b50905060005b83518110156108ae57600160008583815181106107df576107df611cfb565b60200260200101518152602001908152602001600020805461080090611d2a565b80601f016020809104026020016040519081016040528092919081815260200182805461082c90611d2a565b80156108795780601f1061084e57610100808354040283529160200191610879565b820191906000526020600020905b81548152906001019060200180831161085c57829003601f168201915b505050505082828151811061089057610890611cfb565b602002602001018190525080806108a690611d7d565b9150506107c0565b5092915050565b6108be33610a60565b6108f4576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108fd816112d7565b50565b610908611345565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b6109ba611345565b6109c4600061137b565b565b6109cf33610a60565b610a05576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108fd816113e1565b6000610a1933610a60565b610a4f576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105f7610a5b836114fb565b61151b565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806105f75750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275473ffffffffffffffffffffffffffffffffffffffff91821691161490565b610af833610a60565b610b2e576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106908282611531565b60006105f7610a5b83611613565b610b4e611345565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610bec57600080fd5b505af1158015610c00573d6000803e3d6000fd5b5050505050565b610c0f611345565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610c9390611d2a565b15159392505050565b610ca533610a60565b610cdb576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61069082610d0b8360408051600383900b6020820152606091016040516020818303038152906040529050919050565b611531565b6060610d1b33610a60565b610d51576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105f76105f28361100c565b60606105f782611613565b6060610d7333610a60565b610da9576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105f7826114fb565b610dba611345565b63389a75e1600c52806000526020600c208054421115610de257636f5e88186000526004601cfd5b600090556108fd8161137b565b610df7611345565b8060601b610e0d57637448fbae6000526004601cfd5b6108fd8161137b565b60606000825167ffffffffffffffff811115610e3457610e34611703565b604051908082528060200260200182016040528015610e6757816020015b6060815260200190600190039081610e525790505b50905060005b83518110156108ae5760016000858381518110610e8c57610e8c611cfb565b602002602001015181526020019081526020016000208054610ead90611d2a565b80601f0160208091040260200160405190810160405280929190818152602001828054610ed990611d2a565b8015610f265780601f10610efb57610100808354040283529160200191610f26565b820191906000526020600020905b815481529060010190602001808311610f0957829003601f168201915b5050505050828281518110610f3d57610f3d611cfb565b60200260200101819052508080610f5390611d7d565b915050610e6d565b60606000825167ffffffffffffffff811115610f7957610f79611703565b604051908082528060200260200182016040528015610fa2578160200160208202803683370190505b50905060005b83518110156108ae57610fd3848281518110610fc657610fc6611cfb565b602002602001015161151b565b828281518110610fe557610fe5611cfb565b602002602001019060030b908160030b81525050808061100490611d7d565b915050610fa8565b6060600061101983610e16565b90506105f7836113e1565b805182511461105f576040517fc291f68400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82518110156111245781818151811061107d5761107d611cfb565b6020026020010151516000036110bf576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181815181106110d1576110d1611cfb565b6020026020010151600160008584815181106110ef576110ef611cfb565b6020026020010151815260200190815260200160002090816111119190611e22565b508061111c81611d7d565b915050611062565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b83518110156111fc578173ffffffffffffffffffffffffffffffffffffffff1663cfd3c57f85838151811061117857611178611cfb565b602002602001015185848151811061119257611192611cfb565b60200260200101516040518363ffffffff1660e01b81526004016111b7929190611f3c565b600060405180830381600087803b1580156111d157600080fd5b505af11580156111e5573d6000803e3d6000fd5b5050505080806111f490611d7d565b915050611141565b50505050565b60606000825167ffffffffffffffff81111561122057611220611703565b60405190808252806020026020018201604052801561125357816020015b606081526020019060019003908161123e5790505b50905060005b83518110156108ae576112a784828151811061127757611277611cfb565b602002602001015160408051600383900b6020820152606091016040516020818303038152906040529050919050565b8282815181106112b9576112b9611cfb565b602002602001018190525080806112cf90611d7d565b915050611259565b60008181526001602052604081206112ee916116b5565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610bd2565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275433146109c4576382b429006000526004601cfd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927805473ffffffffffffffffffffffffffffffffffffffff9092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b60005b8151811015611437576001600083838151811061140357611403611cfb565b60200260200101518152602001908152602001600020600061142591906116b5565b8061142f81611d7d565b9150506113e4565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b82518110156114f6578173ffffffffffffffffffffffffffffffffffffffff16630de3b7b584838151811061148b5761148b611cfb565b60200260200101516040518263ffffffff1660e01b81526004016114b191815260200190565b600060405180830381600087803b1580156114cb57600080fd5b505af11580156114df573d6000803e3d6000fd5b5050505080806114ee90611d7d565b915050611454565b505050565b6060600061150883611613565b8051909150156105f7576105f7836112d7565b6000818060200190518101906105f79190611f55565b805160000361156c576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526001602052604090206115848282611e22565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906115dd9085908590600401611f3c565b600060405180830381600087803b1580156115f757600080fd5b505af115801561160b573d6000803e3d6000fd5b505050505050565b600081815260016020526040902080546060919061163090611d2a565b80601f016020809104026020016040519081016040528092919081815260200182805461165c90611d2a565b80156116a95780601f1061167e576101008083540402835291602001916116a9565b820191906000526020600020905b81548152906001019060200180831161168c57829003601f168201915b50505050509050919050565b5080546116c190611d2a565b6000825580601f106116d1575050565b601f0160209004906000526020600020908101906108fd91905b808211156116ff57600081556001016116eb565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561177957611779611703565b604052919050565b600067ffffffffffffffff82111561179b5761179b611703565b5060051b60200190565b600082601f8301126117b657600080fd5b813560206117cb6117c683611781565b611732565b82815260059290921b840181019181810190868411156117ea57600080fd5b8286015b8481101561180557803583529183019183016117ee565b509695505050505050565b60006020828403121561182257600080fd5b813567ffffffffffffffff81111561183957600080fd5b611845848285016117a5565b949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561188857835160030b83529284019291840191600101611869565b50909695505050505050565b6000815180845260005b818110156118ba5760208185018101518683018201520161189e565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561196b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611959858351611894565b9450928501929085019060010161191f565b5092979650505050505050565b600082601f83011261198957600080fd5b813567ffffffffffffffff8111156119a3576119a3611703565b6119d460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611732565b8181528460208386010111156119e957600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611a1957600080fd5b823567ffffffffffffffff80821115611a3157600080fd5b611a3d868387016117a5565b9350602091508185013581811115611a5457600080fd5b8501601f81018713611a6557600080fd5b8035611a736117c682611781565b81815260059190911b82018401908481019089831115611a9257600080fd5b8584015b83811015611aca57803586811115611aae5760008081fd5b611abc8c8983890101611978565b845250918601918601611a96565b508096505050505050509250929050565b8060030b81146108fd57600080fd5b60008060408385031215611afd57600080fd5b823567ffffffffffffffff80821115611b1557600080fd5b611b21868387016117a5565b9350602091508185013581811115611b3857600080fd5b85019050601f81018613611b4b57600080fd5b8035611b596117c682611781565b81815260059190911b82018301908381019088831115611b7857600080fd5b928401925b82841015611b9f578335611b9081611adb565b82529284019290840190611b7d565b80955050505050509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561188857835183529284019291840191600101611bca565b600060208284031215611bf857600080fd5b5035919050565b600060208284031215611c1157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114611c3557600080fd5b9392505050565b60008060408385031215611c4f57600080fd5b82359150602083013567ffffffffffffffff811115611c6d57600080fd5b611c7985828601611978565b9150509250929050565b600060208284031215611c9557600080fd5b813567ffffffffffffffff811115611cac57600080fd5b61184584828501611978565b60008060408385031215611ccb57600080fd5b823591506020830135611cdd81611adb565b809150509250929050565b602081526000611c356020830184611894565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680611d3e57607f821691505b602082108103611d77577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611dd5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b601f8211156114f657600081815260208120601f850160051c81016020861015611e035750805b601f850160051c820191505b8181101561160b57828155600101611e0f565b815167ffffffffffffffff811115611e3c57611e3c611703565b611e5081611e4a8454611d2a565b84611ddc565b602080601f831160018114611ea35760008415611e6d5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b17855561160b565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015611ef057888601518255948401946001909101908401611ed1565b5085821015611f2c57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b8281526040602082015260006118456040830184611894565b600060208284031215611f6757600080fd5b8151611c3581611adb56fea26469706673582212202f3c9666d7b162751236a09f59bde480ea578689c233ff981996aaf64919721764736f6c63430008110033";

type Int32BareComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Int32BareComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Int32BareComponent__factory extends ContractFactory {
  constructor(...args: Int32BareComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Int32BareComponent> {
    return super.deploy(
      world,
      id,
      overrides || {}
    ) as Promise<Int32BareComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, id, overrides || {});
  }
  override attach(address: string): Int32BareComponent {
    return super.attach(address) as Int32BareComponent;
  }
  override connect(signer: Signer): Int32BareComponent__factory {
    return super.connect(signer) as Int32BareComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Int32BareComponentInterface {
    return new utils.Interface(_abi) as Int32BareComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Int32BareComponent {
    return new Contract(address, _abi, signerOrProvider) as Int32BareComponent;
  }
}
