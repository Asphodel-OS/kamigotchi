/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  FromPrototypeComponent,
  FromPrototypeComponentInterface,
} from "../FromPrototypeComponent";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "world",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "ID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "authorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "extractRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAt",
    inputs: [
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntities",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitiesWithValue",
    inputs: [
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitiesWithValue",
    inputs: [
      {
        name: "prototypeEntity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getValue",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "has",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "id",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "result",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerWorld",
    inputs: [
      {
        name: "_world",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "remove",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "prototypeEntity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "values",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "size",
    inputs: [
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "unauthorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "world",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "writeAccess",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "BareComponent__NotImplemented",
    inputs: [],
  },
  {
    type: "error",
    name: "BatchOp_UnexpectedLength",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerIsZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NoHandoverRequest",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableWritable__NotWriter",
    inputs: [],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroValueNotAllowed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620024e8380380620024e883398101604081905262000034916200016e565b807fbb8760861d1bae8fab93c7264c9dc7254813117322850c08a2d318497f16d339818162000063336200008e565b60028190556001600160a01b0382161562000083576200008382620000ca565b5050505050620001a0565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a350565b620000d462000150565b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200013457600080fd5b505af115801562000149573d6000803e3d6000fd5b5050505050565b638b78c6d8195433146200016c576382b429006000526004601cfd5b565b6000602082840312156200018157600080fd5b81516001600160a01b03811681146200019957600080fd5b9392505050565b61233880620001b06000396000f3fe6080604052600436106101cd5760003560e01c8063861eb905116100f7578063bf4fe57e11610095578063f04e283e11610064578063f04e283e1461055b578063f2fde38b1461056e578063fbdfa1ea14610581578063fee81cf4146105a157600080fd5b8063bf4fe57e146104ce578063cccf7a8e146104ee578063dd98e3c91461050e578063e9ff6c761461053b57600080fd5b80639d2c76b4116100d15780639d2c76b414610444578063af640d0f14610464578063b361be461461047a578063b3cea2171461049a57600080fd5b8063861eb905146103c05780638b282947146103f05780638da5cb5b1461041057600080fd5b806331b933b91161016f57806354d1f13d1161013e57806354d1f13d146103705780636f9aa15514610378578063715018a6146103985780638482643e146103a057600080fd5b806331b933b9146102ee5780634323c4ef146103105780634cc82215146103305780634fef6a381461035057600080fd5b80631ab06ee5116101ab5780631ab06ee5146102545780631c5ee10c14610274578063256929621461029457806330b67baa1461029c57600080fd5b80630ff4c916146101d257806312b111551461020557806313ca8b6a14610232575b600080fd5b3480156101de57600080fd5b506101f26101ed366004611b2b565b6105d4565b6040519081526020015b60405180910390f35b34801561021157600080fd5b50610225610220366004611c51565b6105f8565b6040516101fc9190611cf2565b34801561023e57600080fd5b5061025261024d366004611e00565b610642565b005b34801561026057600080fd5b5061025261026f366004611ed5565b61068f565b34801561028057600080fd5b506101f261028f366004611ef7565b6106ba565b6102526106de565b3480156102a857600080fd5b506000546102c99073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101fc565b3480156102fa57600080fd5b5061030361072e565b6040516101fc9190611f2c565b34801561031c57600080fd5b5061022561032b366004611c51565b610762565b34801561033c57600080fd5b5061025261034b366004611b2b565b6108ae565b34801561035c57600080fd5b5061025261036b366004611f70565b6108f9565b61025261096f565b34801561038457600080fd5b506101f2610393366004611fa6565b6109ab565b6102526109d5565b3480156103ac57600080fd5b506102526103bb366004611c51565b6109e9565b3480156103cc57600080fd5b506103e06103db366004611f70565b610a31565b60405190151581526020016101fc565b3480156103fc57600080fd5b5061025261040b366004611feb565b610ac0565b34801561041c57600080fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927546102c9565b34801561045057600080fd5b5061025261045f366004611f70565b610b09565b34801561047057600080fd5b506101f260025481565b34801561048657600080fd5b50610303610495366004611ef7565b610bca565b3480156104a657600080fd5b506101f27fbb8760861d1bae8fab93c7264c9dc7254813117322850c08a2d318497f16d33981565b3480156104da57600080fd5b506102526104e9366004611f70565b610bd5565b3480156104fa57600080fd5b506103e0610509366004611b2b565b610c48565b34801561051a57600080fd5b5061052e610529366004611b2b565b610c6a565b6040516101fc9190612032565b34801561054757600080fd5b5061052e610556366004611b2b565b610c75565b610252610569366004611f70565b610cbf565b61025261057c366004611f70565b610cfc565b34801561058d57600080fd5b5061030361059c366004611b2b565b610d23565b3480156105ad57600080fd5b506101f26105bc366004611f70565b63389a75e1600c908152600091909152602090205490565b60006105df82610c6a565b8060200190518101906105f29190612045565b92915050565b606061060333610a31565b610639576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105f282610d4f565b61064b33610a31565b610681576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61068b8282610d67565b5050565b61068b82826040516020016106a691815260200190565b604051602081830303815290604052610ac0565b60006105f26003600084805190602001208152602001908152602001600020610efb565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60606000825167ffffffffffffffff81111561078057610780611b44565b6040519080825280602002602001820160405280156107b357816020015b606081526020019060019003908161079e5790505b50905060005b83518110156108a757600160008583815181106107d8576107d861205e565b6020026020010151815260200190815260200160002080546107f99061208d565b80601f01602080910402602001604051908101604052809291908181526020018280546108259061208d565b80156108725780601f1061084757610100808354040283529160200191610872565b820191906000526020600020905b81548152906001019060200180831161085557829003601f168201915b50505050508282815181106108895761088961205e565b6020026020010181905250808061089f9061210f565b9150506107b9565b5092915050565b6108b733610a31565b6108ed576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108f681610f05565b50565b610901610fd8565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b815160208084019190912060009081526003909152604081206109ce908361100e565b9392505050565b6109dd610fd8565b6109e7600061101a565b565b6109f233610a31565b610a28576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108f681611080565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806105f25750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275473ffffffffffffffffffffffffffffffffffffffff91821691161490565b610ac933610a31565b610aff576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61068b8282611188565b610b11610fd8565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610baf57600080fd5b505af1158015610bc3573d6000803e3d6000fd5b5050505050565b60606105f282611283565b610bdd610fd8565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610c619061208d565b15159392505050565b60606105f2826112a7565b6060610c8033610a31565b610cb6576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105f282611349565b610cc7610fd8565b63389a75e1600c52806000526020600c208054421115610cef57636f5e88186000526004601cfd5b600090556108f68161101a565b610d04610fd8565b8060601b610d1a57637448fbae6000526004601cfd5b6108f68161101a565b60606105f282604051602001610d3b91815260200190565b604051602081830303815290604052610bca565b60606000610d5c83611369565b90506105f283611080565b60005b8251811015610ef057600060016000858481518110610d8b57610d8b61205e565b602002602001015181526020019081526020016000208054610dac9061208d565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd89061208d565b8015610e255780601f10610dfa57610100808354040283529160200191610e25565b820191906000526020600020905b815481529060010190602001808311610e0857829003601f168201915b50505050509050600081511115610e7d57610e7b848381518110610e4b57610e4b61205e565b602002602001015160036000848051906020012081526020019081526020016000206114ae90919063ffffffff16565b505b610edb848381518110610e9257610e9261205e565b602002602001015160036000868681518110610eb057610eb061205e565b60200260200101518051906020012081526020019081526020016000206114ba90919063ffffffff16565b50508080610ee89061210f565b915050610d6a565b5061068b82826114c6565b60006105f2825490565b60008181526001602052604081208054610f1e9061208d565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4a9061208d565b8015610f975780601f10610f6c57610100808354040283529160200191610f97565b820191906000526020600020905b815481529060010190602001808311610f7a57829003601f168201915b505050505090508051600003610fab575050565b80516020808301919091206000908152600390915260409020610fce90836114ae565b5061068b826116a4565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275433146109e7576382b429006000526004601cfd5b60006109ce8383611712565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927805473ffffffffffffffffffffffffffffffffffffffff9092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b60005b815181101561117e576000600160008484815181106110a4576110a461205e565b6020026020010151815260200190815260200160002080546110c59061208d565b80601f01602080910402602001604051908101604052809291908181526020018280546110f19061208d565b801561113e5780601f106111135761010080835404028352916020019161113e565b820191906000526020600020905b81548152906001019060200180831161112157829003601f168201915b505050505090508051600003611154575061116c565b611169838381518110610e4b57610e4b61205e565b50505b806111768161210f565b915050611083565b506108f68161173c565b600082815260016020526040812080546111a19061208d565b80601f01602080910402602001604051908101604052809291908181526020018280546111cd9061208d565b801561121a5780601f106111ef5761010080835404028352916020019161121a565b820191906000526020600020905b8154815290600101906020018083116111fd57829003601f168201915b50505050509050600081511115611250578051602080830191909120600090815260039091526040902061124e90846114ae565b505b8151602080840191909120600090815260039091526040902061127390846114ba565b5061127e8383611851565b505050565b60606105f26003600084805190602001208152602001908152602001600020611933565b60008181526001602052604090208054606091906112c49061208d565b80601f01602080910402602001604051908101604052809291908181526020018280546112f09061208d565b801561133d5780601f106113125761010080835404028352916020019161133d565b820191906000526020600020905b81548152906001019060200180831161132057829003601f168201915b50505050509050919050565b60606000611356836112a7565b8051909150156105f2576105f283610f05565b60606000825167ffffffffffffffff81111561138757611387611b44565b6040519080825280602002602001820160405280156113ba57816020015b60608152602001906001900390816113a55790505b50905060005b83518110156108a757600160008583815181106113df576113df61205e565b6020026020010151815260200190815260200160002080546114009061208d565b80601f016020809104026020016040519081016040528092919081815260200182805461142c9061208d565b80156114795780601f1061144e57610100808354040283529160200191611479565b820191906000526020600020905b81548152906001019060200180831161145c57829003601f168201915b50505050508282815181106114905761149061205e565b602002602001018190525080806114a69061210f565b9150506113c0565b60006109ce8383611940565b60006109ce8383611a33565b8051825114611501576040517fc291f68400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82518110156115c65781818151811061151f5761151f61205e565b602002602001015151600003611561576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181815181106115735761157361205e565b6020026020010151600160008584815181106115915761159161205e565b6020026020010151815260200190815260200160002090816115b3919061218d565b50806115be8161210f565b915050611504565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b835181101561169e578173ffffffffffffffffffffffffffffffffffffffff1663cfd3c57f85838151811061161a5761161a61205e565b60200260200101518584815181106116345761163461205e565b60200260200101516040518363ffffffff1660e01b81526004016116599291906122a7565b600060405180830381600087803b15801561167357600080fd5b505af1158015611687573d6000803e3d6000fd5b5050505080806116969061210f565b9150506115e3565b50505050565b60008181526001602052604081206116bb91611add565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610b95565b60008260000182815481106117295761172961205e565b9060005260206000200154905092915050565b60005b8151811015611792576001600083838151811061175e5761175e61205e565b6020026020010151815260200190815260200160002060006117809190611add565b8061178a8161210f565b91505061173f565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b825181101561127e578173ffffffffffffffffffffffffffffffffffffffff16630de3b7b58483815181106117e6576117e661205e565b60200260200101516040518263ffffffff1660e01b815260040161180c91815260200190565b600060405180830381600087803b15801561182657600080fd5b505af115801561183a573d6000803e3d6000fd5b5050505080806118499061210f565b9150506117af565b805160000361188c576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526001602052604090206118a4828261218d565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906118fd90859085906004016122a7565b600060405180830381600087803b15801561191757600080fd5b505af115801561192b573d6000803e3d6000fd5b505050505050565b606060006109ce83611a82565b60008181526001830160205260408120548015611a295760006119646001836122c0565b8554909150600090611978906001906122c0565b90508181146119dd5760008660000182815481106119985761199861205e565b90600052602060002001549050808760000184815481106119bb576119bb61205e565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806119ee576119ee6122d3565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506105f2565b60009150506105f2565b6000818152600183016020526040812054611a7a575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105f2565b5060006105f2565b60608160000180548060200260200160405190810160405280929190818152602001828054801561133d57602002820191906000526020600020905b815481526020019060010190808311611abe5750505050509050919050565b508054611ae99061208d565b6000825580601f10611af9575050565b601f0160209004906000526020600020908101906108f691905b80821115611b275760008155600101611b13565b5090565b600060208284031215611b3d57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611bba57611bba611b44565b604052919050565b600067ffffffffffffffff821115611bdc57611bdc611b44565b5060051b60200190565b600082601f830112611bf757600080fd5b81356020611c0c611c0783611bc2565b611b73565b82815260059290921b84018101918181019086841115611c2b57600080fd5b8286015b84811015611c465780358352918301918301611c2f565b509695505050505050565b600060208284031215611c6357600080fd5b813567ffffffffffffffff811115611c7a57600080fd5b611c8684828501611be6565b949350505050565b6000815180845260005b81811015611cb457602081850181015186830182015201611c98565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611d65577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611d53858351611c8e565b94509285019290850190600101611d19565b5092979650505050505050565b600082601f830112611d8357600080fd5b813567ffffffffffffffff811115611d9d57611d9d611b44565b611dce60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611b73565b818152846020838601011115611de357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611e1357600080fd5b823567ffffffffffffffff80821115611e2b57600080fd5b611e3786838701611be6565b9350602091508185013581811115611e4e57600080fd5b8501601f81018713611e5f57600080fd5b8035611e6d611c0782611bc2565b81815260059190911b82018401908481019089831115611e8c57600080fd5b8584015b83811015611ec457803586811115611ea85760008081fd5b611eb68c8983890101611d72565b845250918601918601611e90565b508096505050505050509250929050565b60008060408385031215611ee857600080fd5b50508035926020909101359150565b600060208284031215611f0957600080fd5b813567ffffffffffffffff811115611f2057600080fd5b611c8684828501611d72565b6020808252825182820181905260009190848201906040850190845b81811015611f6457835183529284019291840191600101611f48565b50909695505050505050565b600060208284031215611f8257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146109ce57600080fd5b60008060408385031215611fb957600080fd5b823567ffffffffffffffff811115611fd057600080fd5b611fdc85828601611d72565b95602094909401359450505050565b60008060408385031215611ffe57600080fd5b82359150602083013567ffffffffffffffff81111561201c57600080fd5b61202885828601611d72565b9150509250929050565b6020815260006109ce6020830184611c8e565b60006020828403121561205757600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c908216806120a157607f821691505b6020821081036120da577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612140576121406120e0565b5060010190565b601f82111561127e57600081815260208120601f850160051c8101602086101561216e5750805b601f850160051c820191505b8181101561192b5782815560010161217a565b815167ffffffffffffffff8111156121a7576121a7611b44565b6121bb816121b5845461208d565b84612147565b602080601f83116001811461220e57600084156121d85750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b17855561192b565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561225b5788860151825594840194600190910190840161223c565b508582101561229757878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b828152604060208201526000611c866040830184611c8e565b818103818111156105f2576105f26120e0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220842fe7501c0f5da95f1a4830b71b7d9f385c7a2d4b1fea03e88c69014e085d3364736f6c63430008110033";

type FromPrototypeComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FromPrototypeComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FromPrototypeComponent__factory extends ContractFactory {
  constructor(...args: FromPrototypeComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FromPrototypeComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<FromPrototypeComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): FromPrototypeComponent {
    return super.attach(address) as FromPrototypeComponent;
  }
  override connect(signer: Signer): FromPrototypeComponent__factory {
    return super.connect(signer) as FromPrototypeComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FromPrototypeComponentInterface {
    return new utils.Interface(_abi) as FromPrototypeComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FromPrototypeComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FromPrototypeComponent;
  }
}
