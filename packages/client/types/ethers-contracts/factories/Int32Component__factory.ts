/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  Int32Component,
  Int32ComponentInterface,
} from "../Int32Component";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "world",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "authorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "extract",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int32",
        internalType: "int32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int32[]",
        internalType: "int32[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "get",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int32",
        internalType: "int32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAt",
    inputs: [
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int32[]",
        internalType: "int32[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntities",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitiesWithValue",
    inputs: [
      {
        name: "value",
        type: "int32",
        internalType: "int32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitiesWithValue",
    inputs: [
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "has",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "id",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "result",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerWorld",
    inputs: [
      {
        name: "_world",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "remove",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "value",
        type: "int32",
        internalType: "int32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "values",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "values",
        type: "int32[]",
        internalType: "int32[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "size",
    inputs: [
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "unauthorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "world",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "writeAccess",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "BareComponent__NotImplemented",
    inputs: [],
  },
  {
    type: "error",
    name: "BatchOp_UnexpectedLength",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerIsZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NoHandoverRequest",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableWritable__NotWriter",
    inputs: [],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroValueNotAllowed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620029933803806200299383398101604081905262000034916200014f565b8181818162000043336200006f565b60028190556001600160a01b0382161562000063576200006382620000ab565b5050505050506200018b565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a350565b620000b562000131565b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200011557600080fd5b505af11580156200012a573d6000803e3d6000fd5b5050505050565b638b78c6d8195433146200014d576382b429006000526004601cfd5b565b600080604083850312156200016357600080fd5b82516001600160a01b03811681146200017b57600080fd5b6020939093015192949293505050565b6127f8806200019b6000396000f3fe6080604052600436106101fe5760003560e01c8063861eb9051161011d578063bf4fe57e116100b0578063dd98e3c91161007f578063f04e283e11610064578063f04e283e1461061c578063f2fde38b1461062f578063fee81cf41461064257600080fd5b8063dd98e3c9146105cf578063e9ff6c76146105fc57600080fd5b8063bf4fe57e1461054f578063cccf7a8e1461056f578063d93c413f1461058f578063dc5c22cd146105af57600080fd5b80639507d39a116100ec5780639507d39a146104d95780639d2c76b4146104f9578063af640d0f14610519578063b361be461461052f57600080fd5b8063861eb905146104355780638b282947146104655780638da5cb5b14610485578063926cbc9f146104b957600080fd5b80634323c4ef116101955780636f9aa155116101645780636f9aa155146103ba578063715018a6146103da5780638482643e146103e257806385b397821461040257600080fd5b80634323c4ef146103525780634cc82215146103725780634fef6a381461039257806354d1f13d146103b257600080fd5b806325692962116101d157806325692962146102b657806327e90126146102be57806330b67baa146102de57806331b933b91461033057600080fd5b8063088dd0b91461020357806312b111551461023957806313ca8b6a146102665780631c5ee10c14610288575b600080fd5b34801561020f57600080fd5b5061022361021e366004611fbb565b610675565b6040516102309190611ff8565b60405180910390f35b34801561024557600080fd5b50610259610254366004611fbb565b61068e565b60405161023091906120a3565b34801561027257600080fd5b506102866102813660046121b1565b6106d8565b005b34801561029457600080fd5b506102a86102a3366004612286565b610725565b604051908152602001610230565b610286610749565b3480156102ca57600080fd5b506102866102d93660046122ca565b610799565b3480156102ea57600080fd5b5060005461030b9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610230565b34801561033c57600080fd5b506103456107ea565b604051610230919061238e565b34801561035e57600080fd5b5061025961036d366004611fbb565b61081e565b34801561037e57600080fd5b5061028661038d3660046123c6565b61096a565b34801561039e57600080fd5b506102866103ad3660046123df565b6109b5565b610286610a2b565b3480156103c657600080fd5b506102a86103d5366004612415565b610a67565b610286610a91565b3480156103ee57600080fd5b506102866103fd366004611fbb565b610aa5565b34801561040e57600080fd5b5061042261041d3660046123c6565b610aed565b60405160039190910b8152602001610230565b34801561044157600080fd5b506104556104503660046123df565b610b3f565b6040519015158152602001610230565b34801561047157600080fd5b5061028661048036600461245a565b610bce565b34801561049157600080fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275461030b565b3480156104c557600080fd5b506103456104d43660046124a1565b610c17565b3480156104e557600080fd5b506104226104f43660046123c6565b610c4d565b34801561050557600080fd5b506102866105143660046123df565b610c5b565b34801561052557600080fd5b506102a860025481565b34801561053b57600080fd5b5061034561054a366004612286565b610d1c565b34801561055b57600080fd5b5061028661056a3660046123df565b610d27565b34801561057b57600080fd5b5061045561058a3660046123c6565b610d9a565b34801561059b57600080fd5b506102866105aa3660046124be565b610dbc565b3480156105bb57600080fd5b506102236105ca366004611fbb565b610e30565b3480156105db57600080fd5b506105ef6105ea3660046123c6565b610e7d565b60405161023091906124ee565b34801561060857600080fd5b506105ef6106173660046123c6565b610e88565b61028661062a3660046123df565b610ed2565b61028661063d3660046123df565b610f0f565b34801561064e57600080fd5b506102a861065d3660046123df565b63389a75e1600c908152600091909152602090205490565b606061068861068383610f36565b61107b565b92915050565b606061069933610b3f565b6106cf576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106888261112c565b6106e133610b3f565b610717576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107218282611144565b5050565b600061068860036000848051906020012081526020019081526020016000206112d8565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b6107a233610b3f565b6107d8576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610721826107e5836112e2565b611144565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60606000825167ffffffffffffffff81111561083c5761083c611eae565b60405190808252806020026020018201604052801561086f57816020015b606081526020019060019003908161085a5790505b50905060005b8351811015610963576001600085838151811061089457610894612501565b6020026020010151815260200190815260200160002080546108b590612530565b80601f01602080910402602001604051908101604052809291908181526020018280546108e190612530565b801561092e5780601f106109035761010080835404028352916020019161092e565b820191906000526020600020905b81548152906001019060200180831161091157829003601f168201915b505050505082828151811061094557610945612501565b6020026020010181905250808061095b906125b2565b915050610875565b5092915050565b61097333610b3f565b6109a9576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109b2816113b7565b50565b6109bd61148a565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b81516020808401919091206000908152600390915260408120610a8a90836114c0565b9392505050565b610a9961148a565b610aa360006114cc565b565b610aae33610b3f565b610ae4576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109b281611532565b6000610af833610b3f565b610b2e576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610688610b3a8361163a565b61165a565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806106885750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275473ffffffffffffffffffffffffffffffffffffffff91821691161490565b610bd733610b3f565b610c0d576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107218282611670565b6060610688610c488360408051600383900b6020820152606091016040516020818303038152906040529050919050565b61176b565b6000610688610b3a8361178f565b610c6361148a565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610d0157600080fd5b505af1158015610d15573d6000803e3d6000fd5b5050505050565b60606106888261176b565b610d2f61148a565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610db390612530565b15159392505050565b610dc533610b3f565b610dfb576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61072182610e2b8360408051600383900b6020820152606091016040516020818303038152906040529050919050565b611670565b6060610e3b33610b3f565b610e71576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106886106838361112c565b60606106888261178f565b6060610e9333610b3f565b610ec9576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106888261163a565b610eda61148a565b63389a75e1600c52806000526020600c208054421115610f0257636f5e88186000526004601cfd5b600090556109b2816114cc565b610f1761148a565b8060601b610f2d57637448fbae6000526004601cfd5b6109b2816114cc565b60606000825167ffffffffffffffff811115610f5457610f54611eae565b604051908082528060200260200182016040528015610f8757816020015b6060815260200190600190039081610f725790505b50905060005b83518110156109635760016000858381518110610fac57610fac612501565b602002602001015181526020019081526020016000208054610fcd90612530565b80601f0160208091040260200160405190810160405280929190818152602001828054610ff990612530565b80156110465780601f1061101b57610100808354040283529160200191611046565b820191906000526020600020905b81548152906001019060200180831161102957829003601f168201915b505050505082828151811061105d5761105d612501565b60200260200101819052508080611073906125b2565b915050610f8d565b60606000825167ffffffffffffffff81111561109957611099611eae565b6040519080825280602002602001820160405280156110c2578160200160208202803683370190505b50905060005b8351811015610963576110f38482815181106110e6576110e6612501565b602002602001015161165a565b82828151811061110557611105612501565b602002602001019060030b908160030b815250508080611124906125b2565b9150506110c8565b6060600061113983610f36565b905061068883611532565b60005b82518110156112cd5760006001600085848151811061116857611168612501565b60200260200101518152602001908152602001600020805461118990612530565b80601f01602080910402602001604051908101604052809291908181526020018280546111b590612530565b80156112025780601f106111d757610100808354040283529160200191611202565b820191906000526020600020905b8154815290600101906020018083116111e557829003601f168201915b5050505050905060008151111561125a5761125884838151811061122857611228612501565b6020026020010151600360008480519060200120815260200190815260200160002061183190919063ffffffff16565b505b6112b884838151811061126f5761126f612501565b60200260200101516003600086868151811061128d5761128d612501565b602002602001015180519060200120815260200190815260200160002061183d90919063ffffffff16565b505080806112c5906125b2565b915050611147565b506107218282611849565b6000610688825490565b60606000825167ffffffffffffffff81111561130057611300611eae565b60405190808252806020026020018201604052801561133357816020015b606081526020019060019003908161131e5790505b50905060005b83518110156109635761138784828151811061135757611357612501565b602002602001015160408051600383900b6020820152606091016040516020818303038152906040529050919050565b82828151811061139957611399612501565b602002602001018190525080806113af906125b2565b915050611339565b600081815260016020526040812080546113d090612530565b80601f01602080910402602001604051908101604052809291908181526020018280546113fc90612530565b80156114495780601f1061141e57610100808354040283529160200191611449565b820191906000526020600020905b81548152906001019060200180831161142c57829003601f168201915b50505050509050805160000361145d575050565b805160208083019190912060009081526003909152604090206114809083611831565b5061072182611a27565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927543314610aa3576382b429006000526004601cfd5b6000610a8a8383611a95565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927805473ffffffffffffffffffffffffffffffffffffffff9092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b60005b81518110156116305760006001600084848151811061155657611556612501565b60200260200101518152602001908152602001600020805461157790612530565b80601f01602080910402602001604051908101604052809291908181526020018280546115a390612530565b80156115f05780601f106115c5576101008083540402835291602001916115f0565b820191906000526020600020905b8154815290600101906020018083116115d357829003601f168201915b505050505090508051600003611606575061161e565b61161b83838151811061122857611228612501565b50505b80611628816125b2565b915050611535565b506109b281611abf565b606060006116478361178f565b80519091501561068857610688836113b7565b60008180602001905181019061068891906125ea565b6000828152600160205260408120805461168990612530565b80601f01602080910402602001604051908101604052809291908181526020018280546116b590612530565b80156117025780601f106116d757610100808354040283529160200191611702565b820191906000526020600020905b8154815290600101906020018083116116e557829003601f168201915b5050505050905060008151111561173857805160208083019190912060009081526003909152604090206117369084611831565b505b8151602080840191909120600090815260039091526040902061175b908461183d565b506117668383611bd4565b505050565b60606106886003600084805190602001208152602001908152602001600020611cb6565b60008181526001602052604090208054606091906117ac90612530565b80601f01602080910402602001604051908101604052809291908181526020018280546117d890612530565b80156118255780601f106117fa57610100808354040283529160200191611825565b820191906000526020600020905b81548152906001019060200180831161180857829003601f168201915b50505050509050919050565b6000610a8a8383611cc3565b6000610a8a8383611db6565b8051825114611884576040517fc291f68400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8251811015611949578181815181106118a2576118a2612501565b6020026020010151516000036118e4576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181815181106118f6576118f6612501565b60200260200101516001600085848151811061191457611914612501565b602002602001015181526020019081526020016000209081611936919061264d565b5080611941816125b2565b915050611887565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b8351811015611a21578173ffffffffffffffffffffffffffffffffffffffff1663cfd3c57f85838151811061199d5761199d612501565b60200260200101518584815181106119b7576119b7612501565b60200260200101516040518363ffffffff1660e01b81526004016119dc929190612767565b600060405180830381600087803b1580156119f657600080fd5b505af1158015611a0a573d6000803e3d6000fd5b505050508080611a19906125b2565b915050611966565b50505050565b6000818152600160205260408120611a3e91611e60565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610ce7565b6000826000018281548110611aac57611aac612501565b9060005260206000200154905092915050565b60005b8151811015611b155760016000838381518110611ae157611ae1612501565b602002602001015181526020019081526020016000206000611b039190611e60565b80611b0d816125b2565b915050611ac2565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b8251811015611766578173ffffffffffffffffffffffffffffffffffffffff16630de3b7b5848381518110611b6957611b69612501565b60200260200101516040518263ffffffff1660e01b8152600401611b8f91815260200190565b600060405180830381600087803b158015611ba957600080fd5b505af1158015611bbd573d6000803e3d6000fd5b505050508080611bcc906125b2565b915050611b32565b8051600003611c0f576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000828152600160205260409020611c27828261264d565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90611c809085908590600401612767565b600060405180830381600087803b158015611c9a57600080fd5b505af1158015611cae573d6000803e3d6000fd5b505050505050565b60606000610a8a83611e05565b60008181526001830160205260408120548015611dac576000611ce7600183612780565b8554909150600090611cfb90600190612780565b9050818114611d60576000866000018281548110611d1b57611d1b612501565b9060005260206000200154905080876000018481548110611d3e57611d3e612501565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611d7157611d71612793565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610688565b6000915050610688565b6000818152600183016020526040812054611dfd57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610688565b506000610688565b60608160000180548060200260200160405190810160405280929190818152602001828054801561182557602002820191906000526020600020905b815481526020019060010190808311611e415750505050509050919050565b508054611e6c90612530565b6000825580601f10611e7c575050565b601f0160209004906000526020600020908101906109b291905b80821115611eaa5760008155600101611e96565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611f2457611f24611eae565b604052919050565b600067ffffffffffffffff821115611f4657611f46611eae565b5060051b60200190565b600082601f830112611f6157600080fd5b81356020611f76611f7183611f2c565b611edd565b82815260059290921b84018101918181019086841115611f9557600080fd5b8286015b84811015611fb05780358352918301918301611f99565b509695505050505050565b600060208284031215611fcd57600080fd5b813567ffffffffffffffff811115611fe457600080fd5b611ff084828501611f50565b949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561203357835160030b83529284019291840191600101612014565b50909695505050505050565b6000815180845260005b8181101561206557602081850181015186830182015201612049565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612116577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261210485835161203f565b945092850192908501906001016120ca565b5092979650505050505050565b600082601f83011261213457600080fd5b813567ffffffffffffffff81111561214e5761214e611eae565b61217f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611edd565b81815284602083860101111561219457600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156121c457600080fd5b823567ffffffffffffffff808211156121dc57600080fd5b6121e886838701611f50565b93506020915081850135818111156121ff57600080fd5b8501601f8101871361221057600080fd5b803561221e611f7182611f2c565b81815260059190911b8201840190848101908983111561223d57600080fd5b8584015b83811015612275578035868111156122595760008081fd5b6122678c8983890101612123565b845250918601918601612241565b508096505050505050509250929050565b60006020828403121561229857600080fd5b813567ffffffffffffffff8111156122af57600080fd5b611ff084828501612123565b8060030b81146109b257600080fd5b600080604083850312156122dd57600080fd5b823567ffffffffffffffff808211156122f557600080fd5b61230186838701611f50565b935060209150818501358181111561231857600080fd5b85019050601f8101861361232b57600080fd5b8035612339611f7182611f2c565b81815260059190911b8201830190838101908883111561235857600080fd5b928401925b8284101561237f578335612370816122bb565b8252928401929084019061235d565b80955050505050509250929050565b6020808252825182820181905260009190848201906040850190845b81811015612033578351835292840192918401916001016123aa565b6000602082840312156123d857600080fd5b5035919050565b6000602082840312156123f157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610a8a57600080fd5b6000806040838503121561242857600080fd5b823567ffffffffffffffff81111561243f57600080fd5b61244b85828601612123565b95602094909401359450505050565b6000806040838503121561246d57600080fd5b82359150602083013567ffffffffffffffff81111561248b57600080fd5b61249785828601612123565b9150509250929050565b6000602082840312156124b357600080fd5b8135610a8a816122bb565b600080604083850312156124d157600080fd5b8235915060208301356124e3816122bb565b809150509250929050565b602081526000610a8a602083018461203f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061254457607f821691505b60208210810361257d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036125e3576125e3612583565b5060010190565b6000602082840312156125fc57600080fd5b8151610a8a816122bb565b601f82111561176657600081815260208120601f850160051c8101602086101561262e5750805b601f850160051c820191505b81811015611cae5782815560010161263a565b815167ffffffffffffffff81111561266757612667611eae565b61267b816126758454612530565b84612607565b602080601f8311600181146126ce57600084156126985750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611cae565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561271b578886015182559484019460019091019084016126fc565b508582101561275757878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b828152604060208201526000611ff0604083018461203f565b8181038181111561068857610688612583565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212209d3423672e4783870167ef691f14506037696759ab635d9dde9cfe6825afc2f264736f6c63430008110033";

type Int32ComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Int32ComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Int32Component__factory extends ContractFactory {
  constructor(...args: Int32ComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Int32Component> {
    return super.deploy(world, id, overrides || {}) as Promise<Int32Component>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, id, overrides || {});
  }
  override attach(address: string): Int32Component {
    return super.attach(address) as Int32Component;
  }
  override connect(signer: Signer): Int32Component__factory {
    return super.connect(signer) as Int32Component__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Int32ComponentInterface {
    return new utils.Interface(_abi) as Int32ComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Int32Component {
    return new Contract(address, _abi, signerOrProvider) as Int32Component;
  }
}
