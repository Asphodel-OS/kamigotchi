/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AccountSetOperatorSystem,
  AccountSetOperatorSystemInterface,
} from "../AccountSetOperatorSystem";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_world",
        type: "address",
        internalType: "contract IWorld",
      },
      {
        name: "_components",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "deprecate",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "execute",
    inputs: [
      {
        name: "arguments",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeTyped",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "result",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SystemDeprecated",
    inputs: [],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerIsZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NoHandoverRequest",
    inputs: [],
  },
  {
    type: "error",
    name: "QueryOrderNotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620019433803806200194383398101604081905262000034916200012f565b81816200004133620000dc565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200016e565b6001600160a01b039081166080529190911660a0525062000195915050565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a35b50565b6001600160a01b03811681146200011657600080fd5b600080604083850312156200014357600080fd5b8251620001508162000119565b6020840151909250620001638162000119565b809150509250929050565b6000602082840312156200018157600080fd5b81516200018e8162000119565b9392505050565b60805160a05161176f620001d46000396000505060008181610215015281816102ad0152818161034501528181610371015261039d015261176f6000f3fe6080604052600436106100b15760003560e01c8063715018a611610069578063f04e283e1161004e578063f04e283e1461018f578063f2fde38b146101a2578063fee81cf4146101b557600080fd5b8063715018a6146101335780638da5cb5b1461013b57600080fd5b8063240b27e61161009a578063240b27e614610103578063256929621461012357806354d1f13d1461012b57600080fd5b806309c5eabe146100b65780630fcc0c28146100ec575b600080fd5b3480156100c257600080fd5b506100d66100d1366004611317565b6101f6565b6040516100e39190611405565b60405180910390f35b3480156100f857600080fd5b506101016103e7565b005b34801561010f57600080fd5b506100d661011e36600461143a565b61041a565b61010161045c565b6101016104ac565b6101016104e8565b34801561014757600080fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e3565b61010161019d36600461143a565b6104fc565b6101016101b036600461143a565b61053c565b3480156101c157600080fd5b506101e86101d036600461143a565b63389a75e1600c908152600091909152602090205490565b6040519081526020016100e3565b606060008280602001905181019061020e9190611457565b905061023a7f000000000000000000000000000000000000000000000000000000000000000082610563565b156102a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4163636f756e743a204f70657261746f7220616c726561647920696e2075736560448201526064015b60405180910390fd5b60006102d27f000000000000000000000000000000000000000000000000000000000000000033610628565b90508060000361033e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4163636f756e743a20646f6573206e6f74206578697374000000000000000000604482015260640161029d565b600061036a7f0000000000000000000000000000000000000000000000000000000000000000836106fd565b90506103987f00000000000000000000000000000000000000000000000000000000000000008385846107a4565b6103c27f00000000000000000000000000000000000000000000000000000000000000008361099b565b6040805160208101849052016040516020818303038152906040529350505050919050565b6103ef6109aa565b6040517f56f33501ffd77f9fe44d81e7db7e66a66bdf52ab3e11267cdc6462763604c4c790600090a1565b6040805173ffffffffffffffffffffffffffffffffffffffff8316602082015260609161045691016040516020818303038152906040526101f6565b92915050565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b6104f06109aa565b6104fa60006109e0565b565b6105046109aa565b63389a75e1600c52806000526020600c20805442111561052c57636f5e88186000526004601cfd5b60009055610539816109e0565b50565b6105446109aa565b8060601b61055a57637448fbae6000526004601cfd5b610539816109e0565b600061058f837ff9b94d2a933222e58f90359e8ec33041c5f08d7bc4304958d1c52c21991da575610a46565b6040517fcccf7a8e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152919091169063cccf7a8e90602401602060405180830381865afa1580156105fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106219190611474565b9392505050565b6000806106c7846040518060400160405280600781526020017f4143434f554e5400000000000000000000000000000000000000000000000000815250610692877f6caa0553213b46b61cbf982ee3246d8a2a4e5b4936a7594770d391463046f22e60001c610b8a565b6040805173ffffffffffffffffffffffffffffffffffffffff8916602082015201604051602081830303815290604052610b96565b905060008151116106d95760006106f5565b806000815181106106ec576106ec611496565b60200260200101515b949350505050565b6000610729837f8a1264e7094de803414cccf0c32d2bd50f25c909fa2415b38f065f320e4eabe6610a46565b73ffffffffffffffffffffffffffffffffffffffff16639507d39a836040518263ffffffff1660e01b815260040161076391815260200190565b602060405180830381865afa158015610780573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106219190611457565b60006107d0857ff9b94d2a933222e58f90359e8ec33041c5f08d7bc4304958d1c52c21991da575610a46565b6040517f4cc8221500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015291925090821690634cc8221590602401600060405180830381600087803b15801561083d57600080fd5b505af1158015610851573d6000803e3d6000fd5b50506040517f1ab06ee500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301526024820188905284169250631ab06ee59150604401600060405180830381600087803b1580156108c557600080fd5b505af11580156108d9573d6000803e3d6000fd5b5050505061090a857f8a1264e7094de803414cccf0c32d2bd50f25c909fa2415b38f065f320e4eabe660001c610a46565b6040517f2f30c6f60000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff85811660248301529190911690632f30c6f690604401600060405180830381600087803b15801561097c57600080fd5b505af1158015610990573d6000803e3d6000fd5b505050505050505050565b6109a6828242610cdf565b5050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275433146104fa576382b429006000526004601cfd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927805473ffffffffffffffffffffffffffffffffffffffff9092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610ab6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610afc91908101906114e9565b90508051600003610b69576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161029d565b6106f581600081518110610b7f57610b7f611496565b602002602001015190565b60006106218383610a46565b604080516002808252606082810190935260009190816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081610bb057905050604080516060810190915290915080600281526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481525081600081518110610c2857610c28611496565b602090810291909101015260408051606081019091528060028152602001610c70887f5d88ced8d8e079072bf73f49fc87661b519c50d79482941abb852ba2b10909cd610b8a565b73ffffffffffffffffffffffffffffffffffffffff16815260200186604051602001610c9c9190611405565b60405160208183030381529060405281525081600181518110610cc157610cc1611496565b6020026020010181905250610cd581610d97565b9695505050505050565b610d09837f342adee7430e96bca6f5d4fe57ba5155dc7271000494e77110c292d51ae887fa610a46565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018490526024810183905273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee590604401600060405180830381600087803b158015610d7a57600080fd5b505af1158015610d8e573d6000803e3d6000fd5b50505050505050565b60608151600003610dbb5760408051600080825260208201909252905b5092915050565b600282600081518110610dd057610dd0611496565b6020026020010151600001516003811115610ded57610ded61157a565b14610e24576040517feec45f3600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082600081518110610e3957610e39611496565b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff1663b361be4684600081518110610e7357610e73611496565b6020026020010151604001516040518263ffffffff1660e01b8152600401610e9b9190611405565b600060405180830381865afa158015610eb8573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610efe91908101906114e9565b905060015b8351811015610db457610f2f848281518110610f2157610f21611496565b602002602001015183610f43565b915080610f3b816115a9565b915050610f03565b60606000836020015173ffffffffffffffffffffffffffffffffffffffff16634323c4ef846040518263ffffffff1660e01b8152600401610f849190611608565b600060405180830381865afa158015610fa1573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610fe7919081019061164c565b90506000805b8251811015611063576110198684838151811061100c5761100c611496565b6020026020010151611077565b156110305781611028816115a9565b925050611051565b600085828151811061104457611044611496565b6020026020010181815250505b8061105b816115a9565b915050610fed565b5061106e848261115e565b95945050505050565b6000808351600381111561108d5761108d61157a565b0361109c575080511515610456565b6002835160038111156110b1576110b161157a565b036110d2578180519060200120836040015180519060200120149050610456565b6001835160038111156110e7576110e761157a565b036110f55750805115610456565b60038351600381111561110a5761110a61157a565b0361112c57818051906020012083604001518051906020012014159050610456565b6040517feec45f3600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608160000361117d5750604080516000815260208101909152610456565b60008267ffffffffffffffff81111561119857611198611253565b6040519080825280602002602001820160405280156111c1578160200160208202803683370190505b5090506000805b8551811015611249578581815181106111e3576111e3611496565b60200260200101516000146112375785818151811061120457611204611496565b6020026020010151838380611218906115a9565b94508151811061122a5761122a611496565b6020026020010181815250505b80611241816115a9565b9150506111c8565b5090949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156112c9576112c9611253565b604052919050565b600067ffffffffffffffff8211156112eb576112eb611253565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006020828403121561132957600080fd5b813567ffffffffffffffff81111561134057600080fd5b8201601f8101841361135157600080fd5b803561136461135f826112d1565b611282565b81815285602083850101111561137957600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156113b257818101518382015260200161139a565b50506000910152565b600081518084526113d3816020860160208601611397565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061062160208301846113bb565b73ffffffffffffffffffffffffffffffffffffffff8116811461053957600080fd5b60006020828403121561144c57600080fd5b813561062181611418565b60006020828403121561146957600080fd5b815161062181611418565b60006020828403121561148657600080fd5b8151801515811461062157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600067ffffffffffffffff8211156114df576114df611253565b5060051b60200190565b600060208083850312156114fc57600080fd5b825167ffffffffffffffff81111561151357600080fd5b8301601f8101851361152457600080fd5b805161153261135f826114c5565b81815260059190911b8201830190838101908783111561155157600080fd5b928401925b8284101561156f57835182529284019290840190611556565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611601577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6020808252825182820181905260009190848201906040850190845b8181101561164057835183529284019291840191600101611624565b50909695505050505050565b6000602080838503121561165f57600080fd5b825167ffffffffffffffff8082111561167757600080fd5b818501915085601f83011261168b57600080fd5b815161169961135f826114c5565b81815260059190911b830184019084810190888311156116b857600080fd5b8585015b8381101561172c578051858111156116d45760008081fd5b8601603f81018b136116e65760008081fd5b8781015160406116f861135f836112d1565b8281528d8284860101111561170d5760008081fd5b61171c838c8301848701611397565b86525050509186019186016116bc565b509897505050505050505056fea2646970667358221220a05934f1cbc727d54875b346b360c553c07d53471c72a11ac96c7ac2ff89091264736f6c63430008110033";

type AccountSetOperatorSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountSetOperatorSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountSetOperatorSystem__factory extends ContractFactory {
  constructor(...args: AccountSetOperatorSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccountSetOperatorSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<AccountSetOperatorSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): AccountSetOperatorSystem {
    return super.attach(address) as AccountSetOperatorSystem;
  }
  override connect(signer: Signer): AccountSetOperatorSystem__factory {
    return super.connect(signer) as AccountSetOperatorSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountSetOperatorSystemInterface {
    return new utils.Interface(_abi) as AccountSetOperatorSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountSetOperatorSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccountSetOperatorSystem;
  }
}
