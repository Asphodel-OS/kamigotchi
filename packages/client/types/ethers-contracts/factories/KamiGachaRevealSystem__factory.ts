/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  KamiGachaRevealSystem,
  KamiGachaRevealSystemInterface,
} from "../KamiGachaRevealSystem";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_world",
        type: "address",
        internalType: "contract IWorld",
      },
      {
        name: "_components",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "deprecate",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "execute",
    inputs: [
      {
        name: "arguments",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "forceReveal",
    inputs: [
      {
        name: "commitIDs",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "result",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "reveal",
    inputs: [
      {
        name: "rawCommitIDs",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SystemDeprecated",
    inputs: [],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerIsZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NoHandoverRequest",
    inputs: [],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620024223803806200242283398101604081905262000034916200012f565b81816200004133620000dc565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200016e565b6001600160a01b039081166080529190911660a0525062000195915050565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a35b50565b6001600160a01b03811681146200011657600080fd5b600080604083850312156200014357600080fd5b8251620001508162000119565b6020840151909250620001638162000119565b809150509250929050565b6000602082840312156200018157600080fd5b81516200018e8162000119565b9392505050565b60805160a05161222b620001f760003960005050600081816102320152818161038201528181610412015281816104a3015281816104cf015281816104fb015281816106d2015281816107640152818161079201526107be015261222b6000f3fe6080604052600436106100bc5760003560e01c8063715018a611610074578063f04e283e1161004e578063f04e283e146101c7578063f2fde38b146101da578063fee81cf4146101ed57600080fd5b8063715018a61461014b5780638da5cb5b14610153578063b93f208a146101a757600080fd5b80630fcc0c28116100a55780630fcc0c2814610124578063256929621461013b57806354d1f13d1461014357600080fd5b806302d9e4af146100c157806309c5eabe146100f7575b600080fd5b3480156100cd57600080fd5b506100e16100dc366004611ada565b61022e565b6040516100ee9190611bab565b60405180910390f35b34801561010357600080fd5b50610117610112366004611c04565b610528565b6040516100ee9190611ced565b34801561013057600080fd5b5061013961058d565b005b6101396105c0565b610139610610565b61013961064c565b34801561015f57600080fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ee565b3480156101b357600080fd5b506100e16101c2366004611ada565b610660565b6101396101d5366004611d00565b6107e4565b6101396101e8366004611d00565b610824565b3480156101f957600080fd5b50610220610208366004611d00565b63389a75e1600c908152600091909152602090205490565b6040519081526020016100ee565b60607f00000000000000000000000000000000000000000000000000000000000000006102a7813373ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601681526020017f524f4c455f434f4d4d554e4954595f4d414e414745520000000000000000000081525061084b565b610312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f417574683a206e6f74206120636f6d6d756e697479206d616e6167657200000060448201526064015b60405180910390fd5b600083511161037d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6e65656420636f6d6d69747320746f2072657665616c000000000000000000006044820152606401610309565b6103a77f000000000000000000000000000000000000000000000000000000000000000084610908565b61040d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6e6f7420676163686120636f6d6d6974000000000000000000000000000000006044820152606401610309565b6104377f0000000000000000000000000000000000000000000000000000000000000000846109cf565b1561049e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6e6f206e65656420666f7220666f7263652072657665616c00000000000000006044820152606401610309565b6104c87f000000000000000000000000000000000000000000000000000000000000000084610ae8565b60006104f47f000000000000000000000000000000000000000000000000000000000000000085610b42565b90506105217f00000000000000000000000000000000000000000000000000000000000000008286610b82565b9392505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f6e6f7420696d706c656d656e74656400000000000000000000000000000000006044820152606090606401610309565b610595610d36565b6040517f56f33501ffd77f9fe44d81e7db7e66a66bdf52ab3e11267cdc6462763604c4c790600090a1565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b610654610d36565b61065e6000610d6c565b565b606060008251116106cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6e65656420636f6d6d69747320746f2072657665616c000000000000000000006044820152606401610309565b6106f77f000000000000000000000000000000000000000000000000000000000000000083610908565b61075d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6e6f7420676163686120636f6d6d6974000000000000000000000000000000006044820152606401610309565b60006107897f000000000000000000000000000000000000000000000000000000000000000084610dd2565b905060006107b77f000000000000000000000000000000000000000000000000000000000000000083610b42565b90506105217f00000000000000000000000000000000000000000000000000000000000000008284610b82565b6107ec610d36565b63389a75e1600c52806000526020600c20805442111561081457636f5e88186000526004601cfd5b6000905561082181610d6c565b50565b61082c610d36565b8060601b61084257637448fbae6000526004601cfd5b61082181610d6c565b6000806108588484610de3565b9050610884857fd426585847552196ce5fddb7f2e37e8aa38f62676728e7518835f8440cf91958610e35565b73ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e826040518263ffffffff1660e01b81526004016108be91815260200190565b602060405180830381865afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff9190611d36565b95945050505050565b6000806109158484610f81565b905060005b83518110156109c2576109a182828151811061093857610938611d58565b60209081029190910181015160408051808201909152600c81527f47414348415f434f4d4d495400000000000000000000000000000000000000009083015280519101207f71d1f7335626cd2deeaabf8d4f1cb032c601e09edd904c8a8476190931e114ef1490565b6109b0576000925050506109c9565b806109ba81611db6565b91505061091a565b5060019150505b92915050565b6000806109fc847feb96d6a560bda13fa9b1f5e6458550803932abff9fe730fa1f8c3a6ddcb67e6b610e35565b73ffffffffffffffffffffffffffffffffffffffff1663088dd0b9846040518263ffffffff1660e01b8152600401610a349190611bab565b600060405180830381865afa158015610a51573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a979190810190611dee565b905060005b83518110156109c257610ac7828281518110610aba57610aba611d58565b602002602001015161104a565b610ad6576000925050506109c9565b80610ae081611db6565b915050610a9c565b610b3e81610af7600143611e74565b610b21857feb96d6a560bda13fa9b1f5e6458550803932abff9fe730fa1f8c3a6ddcb67e6b611061565b73ffffffffffffffffffffffffffffffffffffffff16919061106d565b5050565b60606000610b5084846111a3565b90506000610b5d856112ec565b90506000610b6b83836113d1565b9050610b78868284611493565b9695505050505050565b6000610bae847fd3d6110f8c07a5a54442b3c3ae6c6c55da5e123d17d83305858b216fc0078e83610e35565b90506000610bbc82846116b9565b905060005b8451811015610c0657818181518110610bdc57610bdc611d58565b602002602001018051809190610bf190611db6565b90525080610bfe81611db6565b915050610bc1565b506040517f1820645300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831690631820645390610c5b9087908590600401611e87565b600060405180830381600087803b158015610c7557600080fd5b505af1158015610c89573d6000803e3d6000fd5b50505050610cba857fdb1228220c36234210e3f04b6ac039f5d81c4d6d81f43d9b4a9d70c4d5bcfac160001c610e35565b73ffffffffffffffffffffffffffffffffffffffff16631820645385610ce08887611836565b6040518363ffffffff1660e01b8152600401610cfd929190611e87565b600060405180830381600087803b158015610d1757600080fd5b505af1158015610d2b573d6000803e3d6000fd5b505050505050505050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff7487392754331461065e576382b429006000526004601cfd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927805473ffffffffffffffffffffffffffffffffffffffff9092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b6060610ddd826118ff565b50919050565b60008282604051602001610df8929190611eac565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209392505050565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610ea5573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610eeb9190810190611dee565b90508051600003610f58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610309565b610f7981600081518110610f6e57610f6e611d58565b602002602001015190565b949350505050565b6060610fad837f024accd0d273ef6123273b21662f5cc055a7d58adf98cc1b060edd029af93f7f610e35565b73ffffffffffffffffffffffffffffffffffffffff1663dc5c22cd836040518263ffffffff1660e01b8152600401610fe59190611bab565b6000604051808303816000875af1158015611004573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526105219190810190611f28565b60004361105983610100611fee565b101592915050565b60006105218383610e35565b6000825167ffffffffffffffff81111561108957611089611a38565b6040519080825280602002602001820160405280156110bc57816020015b60608152602001906001900390816110a75790505b50905060005b8351811015611116576040805160208101859052016040516020818303038152906040528282815181106110f8576110f8611d58565b6020026020010181905250808061110e90611db6565b9150506110c2565b506040517f13ca8b6a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516906313ca8b6a9061116b9086908590600401612001565b600060405180830381600087803b15801561118557600080fd5b505af1158015611199573d6000803e3d6000fd5b5050505050505050565b60606111cf837feb96d6a560bda13fa9b1f5e6458550803932abff9fe730fa1f8c3a6ddcb67e6b610e35565b73ffffffffffffffffffffffffffffffffffffffff1663dc5c22cd836040518263ffffffff1660e01b81526004016112079190611bab565b6000604051808303816000875af1158015611226573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261126c9190810190611dee565b905060005b82518110156112e5576112b682828151811061128f5761128f611d58565b60200260200101518483815181106112a9576112a9611d58565b6020026020010151611954565b8282815181106112c8576112c8611d58565b6020908102919091010152806112dd81611db6565b915050611271565b5092915050565b600080611319837fdb1228220c36234210e3f04b6ac039f5d81c4d6d81f43d9b4a9d70c4d5bcfac1610e35565b604080517f18ac393894b04bf0dc7b9ae83e6c1c711470d561c5c6854886ce180de65e1c1c602082015291925073ffffffffffffffffffffffffffffffffffffffff831691631c5ee10c91016040516020818303038152906040526040518263ffffffff1660e01b81526004016113909190611ced565b602060405180830381865afa1580156113ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105219190612091565b815160609060008167ffffffffffffffff8111156113f1576113f1611a38565b60405190808252806020026020018201604052801561141a578160200160208202803683370190505b50905060005b8281101561148a578486828151811061143b5761143b611d58565b602002602001015161144d91906120aa565b82828151811061145f5761145f611d58565b602090810291909101015284611474816120e5565b955050808061148290611db6565b915050611420565b50949350505050565b815160609060008167ffffffffffffffff8111156114b3576114b3611a38565b6040519080825280602002602001820160405280156114dc578160200160208202803683370190505b509050600061150b877fdb1228220c36234210e3f04b6ac039f5d81c4d6d81f43d9b4a9d70c4d5bcfac1610e35565b905060005b838110156116ad57604080517f18ac393894b04bf0dc7b9ae83e6c1c711470d561c5c6854886ce180de65e1c1c602082015260009173ffffffffffffffffffffffffffffffffffffffff851691636f9aa15591016040516020818303038152906040528a858151811061158557611585611d58565b60200260200101516040518363ffffffff1660e01b81526004016115aa92919061211a565b602060405180830381865afa1580156115c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115eb9190612091565b6040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810182905290915073ffffffffffffffffffffffffffffffffffffffff841690634cc8221590602401600060405180830381600087803b15801561165657600080fd5b505af115801561166a573d6000803e3d6000fd5b505050508084838151811061168157611681611d58565b602090810291909101015286611696816120e5565b9750505080806116a590611db6565b915050611510565b50909695505050505050565b606060008373ffffffffffffffffffffffffffffffffffffffff166312b11155846040518263ffffffff1660e01b81526004016116f69190611bab565b6000604051808303816000875af1158015611715573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261175b919081019061213c565b90506000815167ffffffffffffffff81111561177957611779611a38565b6040519080825280602002602001820160405280156117a2578160200160208202803683370190505b50905060005b825181101561148a5760008382815181106117c5576117c5611d58565b602002602001015151116117da576000611807565b8281815181106117ec576117ec611d58565b60200260200101518060200190518101906118079190612091565b82828151811061181957611819611d58565b60209081029190910101528061182e81611db6565b9150506117a8565b6060611862837f5bc28889d745caef68975e56a733199d93efb3f5ae8e4606262ab97c83f72648610e35565b73ffffffffffffffffffffffffffffffffffffffff1663dc5c22cd836040518263ffffffff1660e01b815260040161189a9190611bab565b6000604051808303816000875af11580156118b9573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526105219190810190611dee565b8051600082528060051b82016020601f198185015b820183811161194c578051828201805182811161193357505050611914565b5b81860152830180518281116119345750840152611914565b505050915250565b600082408082036119e6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f426c6f636b6861736820756e617661696c61626c652e20436f6e74616374206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152608401610309565b6040805160208101839052908101849052606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611aae57611aae611a38565b604052919050565b600067ffffffffffffffff821115611ad057611ad0611a38565b5060051b60200190565b60006020808385031215611aed57600080fd5b823567ffffffffffffffff811115611b0457600080fd5b8301601f81018513611b1557600080fd5b8035611b28611b2382611ab6565b611a67565b81815260059190911b82018301908381019087831115611b4757600080fd5b928401925b82841015611b6557833582529284019290840190611b4c565b979650505050505050565b600081518084526020808501945080840160005b83811015611ba057815187529582019590820190600101611b84565b509495945050505050565b6020815260006105216020830184611b70565b600067ffffffffffffffff821115611bd857611bd8611a38565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060208284031215611c1657600080fd5b813567ffffffffffffffff811115611c2d57600080fd5b8201601f81018413611c3e57600080fd5b8035611c4c611b2382611bbe565b818152856020838501011115611c6157600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b83811015611c9a578181015183820152602001611c82565b50506000910152565b60008151808452611cbb816020860160208601611c7f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006105216020830184611ca3565b600060208284031215611d1257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461052157600080fd5b600060208284031215611d4857600080fd5b8151801515811461052157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611de757611de7611d87565b5060010190565b60006020808385031215611e0157600080fd5b825167ffffffffffffffff811115611e1857600080fd5b8301601f81018513611e2957600080fd5b8051611e37611b2382611ab6565b81815260059190911b82018301908381019087831115611e5657600080fd5b928401925b82841015611b6557835182529284019290840190611e5b565b818103818111156109c9576109c9611d87565b604081526000611e9a6040830185611b70565b82810360208401526108ff8185611b70565b7f6861732e666c6167000000000000000000000000000000000000000000000000815282600882015260008251611eea816028850160208701611c7f565b919091016028019392505050565b6000611f06611b2384611bbe565b9050828152838383011115611f1a57600080fd5b610521836020830184611c7f565b60006020808385031215611f3b57600080fd5b825167ffffffffffffffff80821115611f5357600080fd5b818501915085601f830112611f6757600080fd5b8151611f75611b2382611ab6565b81815260059190911b83018401908481019088831115611f9457600080fd5b8585015b83811015611fe157805185811115611fb05760008081fd5b8601603f81018b13611fc25760008081fd5b611fd38b8983015160408401611ef8565b845250918601918601611f98565b5098975050505050505050565b808201808211156109c9576109c9611d87565b6040815260006120146040830185611b70565b6020838203818501528185518084528284019150828160051b85010183880160005b83811015612082577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0878403018552612070838351611ca3565b94860194925090850190600101612036565b50909998505050505050505050565b6000602082840312156120a357600080fd5b5051919050565b6000826120e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b6000816120f4576120f4611d87565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b60408152600061212d6040830185611ca3565b90508260208301529392505050565b6000602080838503121561214f57600080fd5b825167ffffffffffffffff8082111561216757600080fd5b818501915085601f83011261217b57600080fd5b8151612189611b2382611ab6565b81815260059190911b830184019084810190888311156121a857600080fd5b8585015b83811015611fe1578051858111156121c45760008081fd5b8601603f81018b136121d65760008081fd5b6121e78b8983015160408401611ef8565b8452509186019186016121ac56fea26469706673582212209556a7e983d66eeff96e70efa1f367b56ba92d109c20da3c2ac508c532e8d28b64736f6c63430008110033";

type KamiGachaRevealSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KamiGachaRevealSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KamiGachaRevealSystem__factory extends ContractFactory {
  constructor(...args: KamiGachaRevealSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KamiGachaRevealSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<KamiGachaRevealSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): KamiGachaRevealSystem {
    return super.attach(address) as KamiGachaRevealSystem;
  }
  override connect(signer: Signer): KamiGachaRevealSystem__factory {
    return super.connect(signer) as KamiGachaRevealSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KamiGachaRevealSystemInterface {
    return new utils.Interface(_abi) as KamiGachaRevealSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KamiGachaRevealSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as KamiGachaRevealSystem;
  }
}
