/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  FriendCancelSystem,
  FriendCancelSystemInterface,
} from "../FriendCancelSystem";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_world",
        type: "address",
        internalType: "contract IWorld",
      },
      {
        name: "_components",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "deprecate",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "execute",
    inputs: [
      {
        name: "arguments",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeTyped",
    inputs: [
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "result",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SystemDeprecated",
    inputs: [],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerIsZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NoHandoverRequest",
    inputs: [],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620018cf380380620018cf83398101604081905262000034916200012f565b81816200004133620000dc565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200016e565b6001600160a01b039081166080529190911660a0525062000195915050565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a35b50565b6001600160a01b03811681146200011657600080fd5b600080604083850312156200014357600080fd5b8251620001508162000119565b6020840151909250620001638162000119565b809150509250929050565b6000602082840312156200018157600080fd5b81516200018e8162000119565b9392505050565b60805160a0516116ca62000205600039600050506000818161021701528181610243015281816102da015281816103690152818161039b0152818161049401528181610526015281816105b9015281816105dd0152818161060f0152818161063b015261066501526116ca6000f3fe6080604052600436106100b15760003560e01c8063715018a611610069578063f04e283e1161004e578063f04e283e1461018f578063f2fde38b146101a2578063fee81cf4146101b557600080fd5b8063715018a6146101335780638da5cb5b1461013b57600080fd5b8063256929621161009a57806325692962146101035780633e991df31461010b57806354d1f13d1461012b57600080fd5b806309c5eabe146100b65780630fcc0c28146100ec575b600080fd5b3480156100c257600080fd5b506100d66100d13660046113c7565b6101f6565b6040516100e3919061146b565b60405180910390f35b3480156100f857600080fd5b506101016106a2565b005b6101016106d5565b34801561011757600080fd5b506100d66101263660046114bc565b610725565b610101610757565b610101610793565b34801561014757600080fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e3565b61010161019d3660046114d5565b6107a7565b6101016101b03660046114d5565b6107e7565b3480156101c157600080fd5b506101e86101d03660046114d5565b63389a75e1600c908152600091909152602090205490565b6040519081526020016100e3565b606060008280602001905181019061020e919061150b565b9050600061023c7f00000000000000000000000000000000000000000000000000000000000000003361080e565b90506102687f0000000000000000000000000000000000000000000000000000000000000000836109ce565b6102d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f467269656e6443616e63656c3a206e6f74206120667269656e6473686970000060448201526064015b60405180910390fd5b60006102ff7f000000000000000000000000000000000000000000000000000000000000000084610a17565b60408051808201909152600781527f52455155455354000000000000000000000000000000000000000000000000006020918201528151908201209091507fb86894f0d4d0d822de2bb1686ab4465ef04b4dcd4d3ef6e1f96a340633f66b2a0361042d578161038e7f000000000000000000000000000000000000000000000000000000000000000085610ae0565b14806103c25750816103c07f000000000000000000000000000000000000000000000000000000000000000085610b87565b145b610428576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f467269656e6443616e63656c3a206e6f74206f776e65722f746172676574000060448201526064016102ca565b610636565b60408051808201909152600781527f424c4f434b4544000000000000000000000000000000000000000000000000006020918201528151908201207f9641038fe5b9750b846b513dde74738cbd5484ffac3317430ce346a53b7663930361052057816104b97f000000000000000000000000000000000000000000000000000000000000000085610ae0565b14610428576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f467269656e6443616e63656c3a206e6f74206f776e657200000000000000000060448201526064016102ca565b8161054b7f000000000000000000000000000000000000000000000000000000000000000085610ae0565b146105b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f467269656e6443616e63656c3a206e6f74206f776e657200000000000000000060448201526064016102ca565b60006106087f00000000000000000000000000000000000000000000000000000000000000006106027f000000000000000000000000000000000000000000000000000000000000000087610b87565b85610bb3565b90506106347f000000000000000000000000000000000000000000000000000000000000000082610c66565b505b6106607f000000000000000000000000000000000000000000000000000000000000000084610c66565b61068a7f000000000000000000000000000000000000000000000000000000000000000083610ed5565b50506040805160208101909152600081529392505050565b6106aa610ee4565b6040517f56f33501ffd77f9fe44d81e7db7e66a66bdf52ab3e11267cdc6462763604c4c790600090a1565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b60606107518260405160200161073d91815260200190565b6040516020818303038152906040526101f6565b92915050565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b61079b610ee4565b6107a56000610f1a565b565b6107af610ee4565b63389a75e1600c52806000526020600c2080544211156107d757636f5e88186000526004601cfd5b600090556107e481610f1a565b50565b6107ef610ee4565b8060601b61080557637448fbae6000526004601cfd5b6107e481610f1a565b60008061083b847ff9b94d2a933222e58f90359e8ec33041c5f08d7bc4304958d1c52c21991da575610f80565b6040517fcccf7a8e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830181905292935083169063cccf7a8e90602401602060405180830381865afa1580156108ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d09190611524565b610936576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4163636f756e743a204f70657261746f72206e6f7420666f756e64000000000060448201526064016102ca565b6040517f9507d39a0000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff831690639507d39a90602401602060405180830381865afa1580156109a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c5919061150b565b95945050505050565b6000610a1083836040518060400160405280600a81526020017f465249454e4453484950000000000000000000000000000000000000000000008152506110c4565b9392505050565b6060610a43837f3630e5d2b4dfc42bb69d52e4eef89343acb69d5153f64efe5860a680a55082e7610f80565b73ffffffffffffffffffffffffffffffffffffffff16639507d39a836040518263ffffffff1660e01b8152600401610a7d91815260200190565b600060405180830381865afa158015610a9a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a109190810190611576565b6000610b0c837f76ff1730023e97fe3c625f322b0bce44ef61a1a283231d9d6d32441424ec57cf610f80565b73ffffffffffffffffffffffffffffffffffffffff16639507d39a836040518263ffffffff1660e01b8152600401610b4691815260200190565b602060405180830381865afa158015610b63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a10919061150b565b6000610b0c837f62e5c3a731a312a02bd0a6e08720624c014a22c9f60c82fede06a9606c505815610f80565b600080610c118484604080517f667269656e647368697000000000000000000000000000000000000000000000602080830191909152602a820194909452604a8082019390935281518082039093018352606a019052805191012090565b9050610c5385826040518060400160405280600a81526020017f465249454e4453484950000000000000000000000000000000000000000000008152506110c4565b610c5e5760006109c5565b949350505050565b610c708282611112565b610c9a827f76ff1730023e97fe3c625f322b0bce44ef61a1a283231d9d6d32441424ec57cf610f80565b73ffffffffffffffffffffffffffffffffffffffff16634cc82215826040518263ffffffff1660e01b8152600401610cd491815260200190565b600060405180830381600087803b158015610cee57600080fd5b505af1158015610d02573d6000803e3d6000fd5b50505050610d33827f62e5c3a731a312a02bd0a6e08720624c014a22c9f60c82fede06a9606c50581560001c610f80565b73ffffffffffffffffffffffffffffffffffffffff16634cc82215826040518263ffffffff1660e01b8152600401610d6d91815260200190565b600060405180830381600087803b158015610d8757600080fd5b505af1158015610d9b573d6000803e3d6000fd5b50505050610dcc827f3630e5d2b4dfc42bb69d52e4eef89343acb69d5153f64efe5860a680a55082e760001c610f80565b73ffffffffffffffffffffffffffffffffffffffff16634cc82215826040518263ffffffff1660e01b8152600401610e0691815260200190565b600060405180830381600087803b158015610e2057600080fd5b505af1158015610e34573d6000803e3d6000fd5b50505050610e65827fde0f9b459fab67ff56929343dacb07b0c0a1f8509d3184dc6d736f68b80381de60001c610f80565b73ffffffffffffffffffffffffffffffffffffffff16634cc82215826040518263ffffffff1660e01b8152600401610e9f91815260200190565b600060405180830381600087803b158015610eb957600080fd5b505af1158015610ecd573d6000803e3d6000fd5b505050505050565b610ee082824261113c565b5050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275433146107a5576382b429006000526004601cfd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927805473ffffffffffffffffffffffffffffffffffffffff9092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610ff0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261103691908101906115bf565b905080516000036110a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016102ca565b610c5e816000815181106110b9576110b9611665565b602002602001015190565b6000610c5e83836110f5877f5d88ced8d8e079072bf73f49fc87661b519c50d79482941abb852ba2b10909cd610f80565b73ffffffffffffffffffffffffffffffffffffffff1691906111f4565b610e65827f5d88ced8d8e079072bf73f49fc87661b519c50d79482941abb852ba2b10909cd610f80565b611166837f342adee7430e96bca6f5d4fe57ba5155dc7271000494e77110c292d51ae887fa610f80565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018490526024810183905273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee590604401600060405180830381600087803b1580156111d757600080fd5b505af11580156111eb573d6000803e3d6000fd5b50505050505050565b6000610c5e826112048686611217565b8151602092830120815191909201201490565b6040517fdd98e3c90000000000000000000000000000000000000000000000000000000081526004810182905260609060009073ffffffffffffffffffffffffffffffffffffffff85169063dd98e3c990602401600060405180830381865afa158015611288573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526112ce9190810190611576565b905080516000036112ef575050604080516020810190915260008152610751565b80806020019051810190610c5e9190611576565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561137957611379611303565b604052919050565b600067ffffffffffffffff82111561139b5761139b611303565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000602082840312156113d957600080fd5b813567ffffffffffffffff8111156113f057600080fd5b8201601f8101841361140157600080fd5b803561141461140f82611381565b611332565b81815285602083850101111561142957600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561146257818101518382015260200161144a565b50506000910152565b602081526000825180602084015261148a816040850160208701611447565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000602082840312156114ce57600080fd5b5035919050565b6000602082840312156114e757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610a1057600080fd5b60006020828403121561151d57600080fd5b5051919050565b60006020828403121561153657600080fd5b81518015158114610a1057600080fd5b600061155461140f84611381565b905082815283838301111561156857600080fd5b610a10836020830184611447565b60006020828403121561158857600080fd5b815167ffffffffffffffff81111561159f57600080fd5b8201601f810184136115b057600080fd5b610c5e84825160208401611546565b600060208083850312156115d257600080fd5b825167ffffffffffffffff808211156115ea57600080fd5b818501915085601f8301126115fe57600080fd5b81518181111561161057611610611303565b8060051b9150611621848301611332565b818152918301840191848101908884111561163b57600080fd5b938501935b8385101561165957845182529385019390850190611640565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220bd590f4d45caacf0a8673879f88b82c5fbef429c7265cddd6bb4cad01ca6ffe564736f6c63430008110033";

type FriendCancelSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FriendCancelSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FriendCancelSystem__factory extends ContractFactory {
  constructor(...args: FriendCancelSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FriendCancelSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<FriendCancelSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): FriendCancelSystem {
    return super.attach(address) as FriendCancelSystem;
  }
  override connect(signer: Signer): FriendCancelSystem__factory {
    return super.connect(signer) as FriendCancelSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FriendCancelSystemInterface {
    return new utils.Interface(_abi) as FriendCancelSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FriendCancelSystem {
    return new Contract(address, _abi, signerOrProvider) as FriendCancelSystem;
  }
}
