/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  KamiNameSystem,
  KamiNameSystemInterface,
} from "../KamiNameSystem";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_world",
        type: "address",
        internalType: "contract IWorld",
      },
      {
        name: "_components",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "deprecate",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "execute",
    inputs: [
      {
        name: "arguments",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeTyped",
    inputs: [
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "result",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SystemDeprecated",
    inputs: [],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerIsZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NoHandoverRequest",
    inputs: [],
  },
  {
    type: "error",
    name: "QueryOrderNotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620027613803806200276183398101604081905262000034916200012f565b81816200004133620000dc565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200016e565b6001600160a01b039081166080529190911660a0525062000195915050565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a35b50565b6001600160a01b03811681146200011657600080fd5b600080604083850312156200014357600080fd5b8251620001508162000119565b6020840151909250620001638162000119565b809150509250929050565b6000602082840312156200018157600080fd5b81516200018e8162000119565b9392505050565b60805160a051612578620001e9600039600050506000818161021a01528181610246015281816102730152818161040c0152818161049d0152818161052d01528181610558015261058201526125786000f3fe6080604052600436106100b15760003560e01c8063715018a611610069578063f04e283e1161004e578063f04e283e1461018f578063f2fde38b146101a2578063fee81cf4146101b557600080fd5b8063715018a6146101335780638da5cb5b1461013b57600080fd5b8063256929621161009a578063256929621461010357806354d1f13d1461010b57806368c47df21461011357600080fd5b806309c5eabe146100b65780630fcc0c28146100ec575b600080fd5b3480156100c257600080fd5b506100d66100d1366004611f70565b6101f6565b6040516100e39190612027565b60405180910390f35b3480156100f857600080fd5b506101016105bf565b005b6101016105f2565b610101610642565b34801561011f57600080fd5b506100d661012e36600461203a565b61067e565b6101016106b3565b34801561014757600080fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e3565b61010161019d366004612095565b6106c7565b6101016101b0366004612095565b610707565b3480156101c157600080fd5b506101e86101d0366004612095565b63389a75e1600c908152600091909152602090205490565b6040519081526020016100e3565b60606000808380602001905181019061020f9190612110565b91509150600061023f7f00000000000000000000000000000000000000000000000000000000000000003361072e565b905061026c7f000000000000000000000000000000000000000000000000000000000000000084836108ee565b600b6102987f0000000000000000000000000000000000000000000000000000000000000000856109a5565b63ffffffff161461030a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5065744e616d653a206d75737420626520696e20726f6f6d203131000000000060448201526064015b60405180910390fd5b6000825111610375576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f5065744e616d653a206e616d652063616e6e6f7420626520656d7074790000006044820152606401610301565b601082511115610407576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5065744e616d653a206e616d652063616e206265206174206d6f73742031362060448201527f63686172616374657273000000000000000000000000000000000000000000006064820152608401610301565b6104317f000000000000000000000000000000000000000000000000000000000000000083610ab9565b15610498576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5065744e616d653a206e616d652074616b656e000000000000000000000000006044820152606401610301565b6104c27f000000000000000000000000000000000000000000000000000000000000000084610b7e565b610528576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f5065744e616d653a2063616e6e6f74206265206e616d656400000000000000006044820152606401610301565b6105537f00000000000000000000000000000000000000000000000000000000000000008484610bca565b61057d7f000000000000000000000000000000000000000000000000000000000000000082610c65565b6105a77f000000000000000000000000000000000000000000000000000000000000000082610cad565b50506040805160208101909152600081529392505050565b6105c7610cb8565b6040517f56f33501ffd77f9fe44d81e7db7e66a66bdf52ab3e11267cdc6462763604c4c790600090a1565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b60606106aa838360405160200161069692919061214d565b6040516020818303038152906040526101f6565b90505b92915050565b6106bb610cb8565b6106c56000610cee565b565b6106cf610cb8565b63389a75e1600c52806000526020600c2080544211156106f757636f5e88186000526004601cfd5b6000905561070481610cee565b50565b61070f610cb8565b8060601b61072557637448fbae6000526004601cfd5b61070481610cee565b60008061075b847ff9b94d2a933222e58f90359e8ec33041c5f08d7bc4304958d1c52c21991da575610d54565b6040517fcccf7a8e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830181905292935083169063cccf7a8e90602401602060405180830381865afa1580156107cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f09190612166565b610856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4163636f756e743a204f70657261746f72206e6f7420666f756e6400000000006044820152606401610301565b6040517f9507d39a0000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff831690639507d39a90602401602060405180830381865afa1580156108c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e59190612188565b95945050505050565b61093a828261091d867fdb1228220c36234210e3f04b6ac039f5d81c4d6d81f43d9b4a9d70c4d5bcfac1610e98565b73ffffffffffffffffffffffffffffffffffffffff169190610ea4565b6109a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6b616d69206e6f742075727300000000000000000000000000000000000000006044820152606401610301565b505050565b6000806109b28484610eba565b90506109fc6040518060400160405280600a81526020017f48415256455354494e470000000000000000000000000000000000000000000081525082610f8390919063ffffffff16565b15610a30576000610a0d8585610f99565b90506000610a1b8683610fa5565b9050610a27868261104c565b93505050610ab2565b60408051808201909152600c81527f3732315f45585445524e414c00000000000000000000000000000000000000006020918201528151908201207fbb8785596ebb4b9f684edb50703a5e542576aaf32fbd385c17672ac62e00582203610a9a5760009150610ab2565b6000610aa685856110f3565b90506108e5858261104c565b5092915050565b600080610b48846040518060400160405280600481526020017f4b414d4900000000000000000000000000000000000000000000000000000000815250610b23877f2acf3c3c6b18ed6530ed0fd161fd0b65f4febe79d1182824d3263e852d29ca0360001c610e98565b86604051602001610b349190612027565b60405160208183030381529060405261113f565b90506000815111610b5a576000610b76565b80600081518110610b6d57610b6d6121a1565b60200260200101515b949350505050565b6000610bc283836040518060400160405280600c81526020017f4e4f545f4e414d4541424c4500000000000000000000000000000000000000008152506001611288565b159392505050565b610bf4837f2acf3c3c6b18ed6530ed0fd161fd0b65f4febe79d1182824d3263e852d29ca03610d54565b73ffffffffffffffffffffffffffffffffffffffff16636437197783836040518363ffffffff1660e01b8152600401610c2e92919061214d565b600060405180830381600087803b158015610c4857600080fd5b505af1158015610c5c573d6000803e3d6000fd5b50505050505050565b610ca9828260006040518060400160405280600981526020017f4b414d495f4e414d450000000000000000000000000000000000000000000000815250600161146c565b5050565b610ca982824261148e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275433146106c5576382b429006000526004601cfd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927805473ffffffffffffffffffffffffffffffffffffffff9092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610dc4573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e0a91908101906121f4565b90508051600003610e77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610301565b610b7681600081518110610e8d57610e8d6121a1565b602002602001015190565b60006106aa8383610d54565b600081610eb18585611514565b14949350505050565b6060610ee6837f3630e5d2b4dfc42bb69d52e4eef89343acb69d5153f64efe5860a680a55082e7610d54565b73ffffffffffffffffffffffffffffffffffffffff16639507d39a836040518263ffffffff1660e01b8152600401610f2091815260200190565b600060405180830381865afa158015610f3d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106aa9190810190612285565b8051602091820120825192909101919091201490565b60006106aa83836115f3565b6000610fd1837faa307edc224ff30d3376a8fd6134dde3bc74ef449ad0965df67766cefba5d950610d54565b73ffffffffffffffffffffffffffffffffffffffff16639507d39a836040518263ffffffff1660e01b815260040161100b91815260200190565b602060405180830381865afa158015611028573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106aa9190612188565b6000611078837f3be9611062b8582cf4b9a4eafe577dbde7dcd7779a1efb46d73e212026c4b0cc610d54565b73ffffffffffffffffffffffffffffffffffffffff16639507d39a836040518263ffffffff1660e01b81526004016110b291815260200190565b602060405180830381865afa1580156110cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106aa91906122ba565b60006106aa82611123857fdb1228220c36234210e3f04b6ac039f5d81c4d6d81f43d9b4a9d70c4d5bcfac1610e98565b73ffffffffffffffffffffffffffffffffffffffff1690611514565b604080516002808252606082810190935260009190816020015b6040805160608082018352600080835260208301529181019190915281526020019060019003908161115957905050604080516060810190915290915080600281526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815250816000815181106111d1576111d16121a1565b602090810291909101015260408051606081019091528060028152602001611219887f5d88ced8d8e079072bf73f49fc87661b519c50d79482941abb852ba2b10909cd610e98565b73ffffffffffffffffffffffffffffffffffffffff168152602001866040516020016112459190612027565b6040516020818303038152906040528152508160018151811061126a5761126a6121a1565b602002602001018190525061127e816116c0565b9695505050505050565b6000806112958585611869565b905060006112c3877fd426585847552196ce5fddb7f2e37e8aa38f62676728e7518835f8440cf91958610d54565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015611331573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113559190612166565b9250836113e1576040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff821690634cc8221590602401600060405180830381600087803b1580156113c457600080fd5b505af11580156113d8573d6000803e3d6000fd5b50505050611462565b6040517f60fe47b10000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff8216906360fe47b190602401600060405180830381600087803b15801561144957600080fd5b505af115801561145d573d6000803e3d6000fd5b505050505b5050949350505050565b60006114798585856118bb565b9050611486868284611910565b505050505050565b6114b8837f342adee7430e96bca6f5d4fe57ba5155dc7271000494e77110c292d51ae887fa610d54565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018490526024810183905273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee590604401610c2e565b6040517fdd98e3c900000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063dd98e3c990602401600060405180830381865afa158015611584573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526115ca9190810190612285565b905080516000036115df5760009150506106ad565b80806020019051810190610b769190612188565b60008061166c836040517f70726f64756374696f6e000000000000000000000000000000000000000000006020820152602a8101829052600090604a01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012092915050565b90506116ae84826040518060400160405280600781526020017f4841525645535400000000000000000000000000000000000000000000000000815250611962565b6116b9576000610b76565b9392505050565b606081516000036116e1576040805160008082526020820190925290610ab2565b6002826000815181106116f6576116f66121a1565b6020026020010151600001516003811115611713576117136122e0565b1461174a576040517feec45f3600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260008151811061175f5761175f6121a1565b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff1663b361be4684600081518110611799576117996121a1565b6020026020010151604001516040518263ffffffff1660e01b81526004016117c19190612027565b600060405180830381865afa1580156117de573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261182491908101906121f4565b905060015b8351811015610ab257611855848281518110611847576118476121a1565b6020026020010151836119b0565b9150806118618161233e565b915050611829565b6000828260405160200161187e929190612376565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209392505050565b60008383836040516020016118d2939291906123c2565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120949350505050565b61195c828261193f867fb25ea67b55901db62e4b14311a8c1ab178fec3948b4b493a711970a50aa2a2e1610d54565b73ffffffffffffffffffffffffffffffffffffffff169190611adb565b50505050565b6000610b768383611993877f5d88ced8d8e079072bf73f49fc87661b519c50d79482941abb852ba2b10909cd610d54565b73ffffffffffffffffffffffffffffffffffffffff169190611b83565b60606000836020015173ffffffffffffffffffffffffffffffffffffffff16634323c4ef846040518263ffffffff1660e01b81526004016119f1919061243a565b600060405180830381865afa158015611a0e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611a54919081019061247e565b90506000805b8251811015611ad057611a8686848381518110611a7957611a796121a1565b6020026020010151611ba6565b15611a9d5781611a958161233e565b925050611abe565b6000858281518110611ab157611ab16121a1565b6020026020010181815250505b80611ac88161233e565b915050611a5a565b506108e58482611c8d565b600081611ae88585611514565b611af2919061252f565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018590526024810182905290915073ffffffffffffffffffffffffffffffffffffffff851690631ab06ee590604401600060405180830381600087803b158015611b6457600080fd5b505af1158015611b78573d6000803e3d6000fd5b505050509392505050565b6000610b7682611b938686611d82565b8151602092830120815191909201201490565b60008083516003811115611bbc57611bbc6122e0565b03611bcb5750805115156106ad565b600283516003811115611be057611be06122e0565b03611c015781805190602001208360400151805190602001201490506106ad565b600183516003811115611c1657611c166122e0565b03611c2457508051156106ad565b600383516003811115611c3957611c396122e0565b03611c5b578180519060200120836040015180519060200120141590506106ad565b6040517feec45f3600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606081600003611cac57506040805160008152602081019091526106ad565b60008267ffffffffffffffff811115611cc757611cc7611e6e565b604051908082528060200260200182016040528015611cf0578160200160208202803683370190505b5090506000805b8551811015611d7857858181518110611d1257611d126121a1565b6020026020010151600014611d6657858181518110611d3357611d336121a1565b6020026020010151838380611d479061233e565b945081518110611d5957611d596121a1565b6020026020010181815250505b80611d708161233e565b915050611cf7565b5090949350505050565b6040517fdd98e3c90000000000000000000000000000000000000000000000000000000081526004810182905260609060009073ffffffffffffffffffffffffffffffffffffffff85169063dd98e3c990602401600060405180830381865afa158015611df3573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611e399190810190612285565b90508051600003611e5a5750506040805160208101909152600081526106ad565b80806020019051810190610b769190612285565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611ee457611ee4611e6e565b604052919050565b600067ffffffffffffffff821115611f0657611f06611e6e565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000611f45611f4084611eec565b611e9d565b9050828152838383011115611f5957600080fd5b828260208301376000602084830101529392505050565b600060208284031215611f8257600080fd5b813567ffffffffffffffff811115611f9957600080fd5b8201601f81018413611faa57600080fd5b610b7684823560208401611f32565b60005b83811015611fd4578181015183820152602001611fbc565b50506000910152565b60008151808452611ff5816020860160208601611fb9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006106aa6020830184611fdd565b6000806040838503121561204d57600080fd5b82359150602083013567ffffffffffffffff81111561206b57600080fd5b8301601f8101851361207c57600080fd5b61208b85823560208401611f32565b9150509250929050565b6000602082840312156120a757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146116b957600080fd5b600082601f8301126120dc57600080fd5b81516120ea611f4082611eec565b8181528460208386010111156120ff57600080fd5b610b76826020830160208701611fb9565b6000806040838503121561212357600080fd5b82519150602083015167ffffffffffffffff81111561214157600080fd5b61208b858286016120cb565b828152604060208201526000610b766040830184611fdd565b60006020828403121561217857600080fd5b815180151581146116b957600080fd5b60006020828403121561219a57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600067ffffffffffffffff8211156121ea576121ea611e6e565b5060051b60200190565b6000602080838503121561220757600080fd5b825167ffffffffffffffff81111561221e57600080fd5b8301601f8101851361222f57600080fd5b805161223d611f40826121d0565b81815260059190911b8201830190838101908783111561225c57600080fd5b928401925b8284101561227a57835182529284019290840190612261565b979650505050505050565b60006020828403121561229757600080fd5b815167ffffffffffffffff8111156122ae57600080fd5b610b76848285016120cb565b6000602082840312156122cc57600080fd5b815163ffffffff811681146116b957600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361236f5761236f61230f565b5060010190565b7f6861732e666c61670000000000000000000000000000000000000000000000008152826008820152600082516123b4816028850160208701611fb9565b919091016028019392505050565b7f69732e646174610000000000000000000000000000000000000000000000000081528360078201527fffffffff000000000000000000000000000000000000000000000000000000008360e01b1660278201526000825161242b81602b850160208701611fb9565b91909101602b01949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561247257835183529284019291840191600101612456565b50909695505050505050565b6000602080838503121561249157600080fd5b825167ffffffffffffffff808211156124a957600080fd5b818501915085601f8301126124bd57600080fd5b81516124cb611f40826121d0565b81815260059190911b830184019084810190888311156124ea57600080fd5b8585015b83811015612522578051858111156125065760008081fd5b6125148b89838a01016120cb565b8452509186019186016124ee565b5098975050505050505050565b808201808211156106ad576106ad61230f56fea2646970667358221220de943e9393f47f69719416157887a4c41f962cb4e3328d1c17a71d299934fe9f64736f6c63430008110033";

type KamiNameSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KamiNameSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KamiNameSystem__factory extends ContractFactory {
  constructor(...args: KamiNameSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KamiNameSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<KamiNameSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): KamiNameSystem {
    return super.attach(address) as KamiNameSystem;
  }
  override connect(signer: Signer): KamiNameSystem__factory {
    return super.connect(signer) as KamiNameSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KamiNameSystemInterface {
    return new utils.Interface(_abi) as KamiNameSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KamiNameSystem {
    return new Contract(address, _abi, signerOrProvider) as KamiNameSystem;
  }
}
