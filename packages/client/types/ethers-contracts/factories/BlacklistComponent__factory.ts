/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BlacklistComponent,
  BlacklistComponentInterface,
} from "../BlacklistComponent";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "world",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "authorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "extract",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint32[]",
        internalType: "uint32[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint32[][]",
        internalType: "uint32[][]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "get",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint32[]",
        internalType: "uint32[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint32[][]",
        internalType: "uint32[][]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntities",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitiesWithValue",
    inputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "has",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "id",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "result",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerWorld",
    inputs: [
      {
        name: "_world",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "remove",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "value",
        type: "uint32[]",
        internalType: "uint32[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "values",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "values",
        type: "uint32[][]",
        internalType: "uint32[][]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "unauthorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "world",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "writeAccess",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "BareComponent__NotImplemented",
    inputs: [],
  },
  {
    type: "error",
    name: "BatchOp_UnexpectedLength",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerIsZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NoHandoverRequest",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableWritable__NotWriter",
    inputs: [],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroValueNotAllowed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022d8380380620022d883398101604081905262000034916200016e565b807fb3f96e7944f99619a1086b9a1272bbdff635f1cac9c8bf7ba6ce1a9aa202f19c818162000063336200008e565b60028190556001600160a01b0382161562000083576200008382620000ca565b5050505050620001a0565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a350565b620000d462000150565b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200013457600080fd5b505af115801562000149573d6000803e3d6000fd5b5050505050565b638b78c6d8195433146200016c576382b429006000526004601cfd5b565b6000602082840312156200018157600080fd5b81516001600160a01b03811681146200019957600080fd5b9392505050565b61212880620001b06000396000f3fe6080604052600436106101cd5760003560e01c80638b282947116100f7578063cccf7a8e11610095578063f04e283e11610064578063f04e283e14610565578063f2fde38b14610578578063f96911fa1461058b578063fee81cf4146105ab57600080fd5b8063cccf7a8e146104d8578063dc5c22cd146104f8578063dd98e3c914610518578063e9ff6c761461054557600080fd5b80639d2c76b4116100d15780639d2c76b414610454578063af640d0f14610474578063b361be4614610498578063bf4fe57e146104b857600080fd5b80638b282947146103e05780638da5cb5b146104005780639507d39a1461043457600080fd5b80634323c4ef1161016f578063715018a61161013e578063715018a61461035b5780638482643e1461036357806385b3978214610383578063861eb905146103b057600080fd5b80634323c4ef146102f35780634cc82215146103135780634fef6a381461033357806354d1f13d1461035357600080fd5b80631ac21a20116101ab5780631ac21a2014610257578063256929621461027757806330b67baa1461027f57806331b933b9146102d157600080fd5b8063088dd0b9146101d257806312b111551461020857806313ca8b6a14610235575b600080fd5b3480156101de57600080fd5b506101f26101ed3660046117ee565b6105de565b6040516101ff919061182b565b60405180910390f35b34801561021457600080fd5b506102286102233660046117ee565b6105f7565b6040516101ff919061193d565b34801561024157600080fd5b50610255610250366004611a4b565b610641565b005b34801561026357600080fd5b50610255610272366004611b96565b61068e565b6102556106df565b34801561028b57600080fd5b506000546102ac9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101ff565b3480156102dd57600080fd5b506102e661072f565b6040516101ff9190611c5a565b3480156102ff57600080fd5b5061022861030e3660046117ee565b610763565b34801561031f57600080fd5b5061025561032e366004611c9e565b6108af565b34801561033f57600080fd5b5061025561034e366004611cb7565b6108fa565b610255610970565b6102556109ac565b34801561036f57600080fd5b5061025561037e3660046117ee565b6109c0565b34801561038f57600080fd5b506103a361039e366004611c9e565b610a08565b6040516101ff9190611cf4565b3480156103bc57600080fd5b506103d06103cb366004611cb7565b610a5a565b60405190151581526020016101ff565b3480156103ec57600080fd5b506102556103fb366004611d32565b610ae9565b34801561040c57600080fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927546102ac565b34801561044057600080fd5b506103a361044f366004611c9e565b610b32565b34801561046057600080fd5b5061025561046f366004611cb7565b610b40565b34801561048057600080fd5b5061048a60025481565b6040519081526020016101ff565b3480156104a457600080fd5b506102e66104b3366004611d79565b61072f565b3480156104c457600080fd5b506102556104d3366004611cb7565b610c01565b3480156104e457600080fd5b506103d06104f3366004611c9e565b610c74565b34801561050457600080fd5b506101f26105133660046117ee565b610c96565b34801561052457600080fd5b50610538610533366004611c9e565b610ce3565b6040516101ff9190611dae565b34801561055157600080fd5b50610538610560366004611c9e565b610cee565b610255610573366004611cb7565b610d38565b610255610586366004611cb7565b610d75565b34801561059757600080fd5b506102556105a6366004611dc1565b610d9c565b3480156105b757600080fd5b5061048a6105c6366004611cb7565b63389a75e1600c908152600091909152602090205490565b60606105f16105ec83610ded565b610f32565b92915050565b606061060233610a5a565b610638576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105f182610fe4565b61064a33610a5a565b610680576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61068a8282610ffc565b5050565b61069733610a5a565b6106cd576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61068a826106da836111da565b610ffc565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60606000825167ffffffffffffffff811115610781576107816116e1565b6040519080825280602002602001820160405280156107b457816020015b606081526020019060019003908161079f5790505b50905060005b83518110156108a857600160008583815181106107d9576107d9611dfe565b6020026020010151815260200190815260200160002080546107fa90611e2d565b80601f016020809104026020016040519081016040528092919081815260200182805461082690611e2d565b80156108735780601f1061084857610100808354040283529160200191610873565b820191906000526020600020905b81548152906001019060200180831161085657829003601f168201915b505050505082828151811061088a5761088a611dfe565b602002602001018190525080806108a090611e80565b9150506107ba565b5092915050565b6108b833610a5a565b6108ee576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108f78161128c565b50565b6109026112fa565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b6109b46112fa565b6109be6000611330565b565b6109c933610a5a565b6109ff576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108f781611396565b6060610a1333610a5a565b610a49576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105f1610a55836114b0565b6114d0565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806105f15750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275473ffffffffffffffffffffffffffffffffffffffff91821691161490565b610af233610a5a565b610b28576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61068a82826114e6565b60606105f1610a55836115c8565b610b486112fa565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610be657600080fd5b505af1158015610bfa573d6000803e3d6000fd5b5050505050565b610c096112fa565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610c8d90611e2d565b15159392505050565b6060610ca133610a5a565b610cd7576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105f16105ec83610fe4565b60606105f1826115c8565b6060610cf933610a5a565b610d2f576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105f1826114b0565b610d406112fa565b63389a75e1600c52806000526020600c208054421115610d6857636f5e88186000526004601cfd5b600090556108f781611330565b610d7d6112fa565b8060601b610d9357637448fbae6000526004601cfd5b6108f781611330565b610da533610a5a565b610ddb576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61068a82610de88361166a565b6114e6565b60606000825167ffffffffffffffff811115610e0b57610e0b6116e1565b604051908082528060200260200182016040528015610e3e57816020015b6060815260200190600190039081610e295790505b50905060005b83518110156108a85760016000858381518110610e6357610e63611dfe565b602002602001015181526020019081526020016000208054610e8490611e2d565b80601f0160208091040260200160405190810160405280929190818152602001828054610eb090611e2d565b8015610efd5780601f10610ed257610100808354040283529160200191610efd565b820191906000526020600020905b815481529060010190602001808311610ee057829003601f168201915b5050505050828281518110610f1457610f14611dfe565b60200260200101819052508080610f2a90611e80565b915050610e44565b60606000825167ffffffffffffffff811115610f5057610f506116e1565b604051908082528060200260200182016040528015610f8357816020015b6060815260200190600190039081610f6e5790505b50905060005b83518110156108a857610fb4848281518110610fa757610fa7611dfe565b60200260200101516114d0565b828281518110610fc657610fc6611dfe565b60200260200101819052508080610fdc90611e80565b915050610f89565b60606000610ff183610ded565b90506105f183611396565b8051825114611037576040517fc291f68400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82518110156110fc5781818151811061105557611055611dfe565b602002602001015151600003611097576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181815181106110a9576110a9611dfe565b6020026020010151600160008584815181106110c7576110c7611dfe565b6020026020010151815260200190815260200160002090816110e99190611f25565b50806110f481611e80565b91505061103a565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b83518110156111d4578173ffffffffffffffffffffffffffffffffffffffff1663cfd3c57f85838151811061115057611150611dfe565b602002602001015185848151811061116a5761116a611dfe565b60200260200101516040518363ffffffff1660e01b815260040161118f92919061203f565b600060405180830381600087803b1580156111a957600080fd5b505af11580156111bd573d6000803e3d6000fd5b5050505080806111cc90611e80565b915050611119565b50505050565b60606000825167ffffffffffffffff8111156111f8576111f86116e1565b60405190808252806020026020018201604052801561122b57816020015b60608152602001906001900390816112165790505b50905060005b83518110156108a85761125c84828151811061124f5761124f611dfe565b602002602001015161166a565b82828151811061126e5761126e611dfe565b6020026020010181905250808061128490611e80565b915050611231565b60008181526001602052604081206112a391611693565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610bcc565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275433146109be576382b429006000526004601cfd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927805473ffffffffffffffffffffffffffffffffffffffff9092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b60005b81518110156113ec57600160008383815181106113b8576113b8611dfe565b6020026020010151815260200190815260200160002060006113da9190611693565b806113e481611e80565b915050611399565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b82518110156114ab578173ffffffffffffffffffffffffffffffffffffffff16630de3b7b584838151811061144057611440611dfe565b60200260200101516040518263ffffffff1660e01b815260040161146691815260200190565b600060405180830381600087803b15801561148057600080fd5b505af1158015611494573d6000803e3d6000fd5b5050505080806114a390611e80565b915050611409565b505050565b606060006114bd836115c8565b8051909150156105f1576105f18361128c565b6060818060200190518101906105f19190612058565b8051600003611521576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526001602052604090206115398282611f25565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90611592908590859060040161203f565b600060405180830381600087803b1580156115ac57600080fd5b505af11580156115c0573d6000803e3d6000fd5b505050505050565b60008181526001602052604090208054606091906115e590611e2d565b80601f016020809104026020016040519081016040528092919081815260200182805461161190611e2d565b801561165e5780601f106116335761010080835404028352916020019161165e565b820191906000526020600020905b81548152906001019060200180831161164157829003601f168201915b50505050509050919050565b60608160405160200161167d9190611cf4565b6040516020818303038152906040529050919050565b50805461169f90611e2d565b6000825580601f106116af575050565b601f0160209004906000526020600020908101906108f791905b808211156116dd57600081556001016116c9565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611757576117576116e1565b604052919050565b600067ffffffffffffffff821115611779576117796116e1565b5060051b60200190565b600082601f83011261179457600080fd5b813560206117a96117a48361175f565b611710565b82815260059290921b840181019181810190868411156117c857600080fd5b8286015b848110156117e357803583529183019183016117cc565b509695505050505050565b60006020828403121561180057600080fd5b813567ffffffffffffffff81111561181757600080fd5b61182384828501611783565b949350505050565b6000602080830181845280855180835260408601915060408160051b87010192508387016000805b838110156118cb578886037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0018552825180518088529088019088880190845b818110156118b557835163ffffffff168352928a0192918a0191600101611893565b5090975050509386019391860191600101611853565b509398975050505050505050565b6000815180845260005b818110156118ff576020818501810151868301820152016118e3565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156119b0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261199e8583516118d9565b94509285019290850190600101611964565b5092979650505050505050565b600082601f8301126119ce57600080fd5b813567ffffffffffffffff8111156119e8576119e86116e1565b611a1960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611710565b818152846020838601011115611a2e57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611a5e57600080fd5b823567ffffffffffffffff80821115611a7657600080fd5b611a8286838701611783565b9350602091508185013581811115611a9957600080fd5b8501601f81018713611aaa57600080fd5b8035611ab86117a48261175f565b81815260059190911b82018401908481019089831115611ad757600080fd5b8584015b83811015611b0f57803586811115611af35760008081fd5b611b018c89838901016119bd565b845250918601918601611adb565b508096505050505050509250929050565b63ffffffff811681146108f757600080fd5b600082601f830112611b4357600080fd5b81356020611b536117a48361175f565b82815260059290921b84018101918181019086841115611b7257600080fd5b8286015b848110156117e3578035611b8981611b20565b8352918301918301611b76565b60008060408385031215611ba957600080fd5b823567ffffffffffffffff80821115611bc157600080fd5b611bcd86838701611783565b9350602091508185013581811115611be457600080fd5b8501601f81018713611bf557600080fd5b8035611c036117a48261175f565b81815260059190911b82018401908481019089831115611c2257600080fd5b8584015b83811015611b0f57803586811115611c3e5760008081fd5b611c4c8c8983890101611b32565b845250918601918601611c26565b6020808252825182820181905260009190848201906040850190845b81811015611c9257835183529284019291840191600101611c76565b50909695505050505050565b600060208284031215611cb057600080fd5b5035919050565b600060208284031215611cc957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114611ced57600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015611c9257835163ffffffff1683529284019291840191600101611d10565b60008060408385031215611d4557600080fd5b82359150602083013567ffffffffffffffff811115611d6357600080fd5b611d6f858286016119bd565b9150509250929050565b600060208284031215611d8b57600080fd5b813567ffffffffffffffff811115611da257600080fd5b611823848285016119bd565b602081526000611ced60208301846118d9565b60008060408385031215611dd457600080fd5b82359150602083013567ffffffffffffffff811115611df257600080fd5b611d6f85828601611b32565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680611e4157607f821691505b602082108103611e7a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ed8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b601f8211156114ab57600081815260208120601f850160051c81016020861015611f065750805b601f850160051c820191505b818110156115c057828155600101611f12565b815167ffffffffffffffff811115611f3f57611f3f6116e1565b611f5381611f4d8454611e2d565b84611edf565b602080601f831160018114611fa65760008415611f705750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556115c0565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015611ff357888601518255948401946001909101908401611fd4565b508582101561202f57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b82815260406020820152600061182360408301846118d9565b6000602080838503121561206b57600080fd5b825167ffffffffffffffff81111561208257600080fd5b8301601f8101851361209357600080fd5b80516120a16117a48261175f565b81815260059190911b820183019083810190878311156120c057600080fd5b928401925b828410156120e75783516120d881611b20565b825292840192908401906120c5565b97965050505050505056fea26469706673582212201ab412899380dc4c865a8436436f8f4a68a26fde3257e54b3dc8436b1c76cb1f64736f6c63430008110033";

type BlacklistComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlacklistComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlacklistComponent__factory extends ContractFactory {
  constructor(...args: BlacklistComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BlacklistComponent> {
    return super.deploy(world, overrides || {}) as Promise<BlacklistComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): BlacklistComponent {
    return super.attach(address) as BlacklistComponent;
  }
  override connect(signer: Signer): BlacklistComponent__factory {
    return super.connect(signer) as BlacklistComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlacklistComponentInterface {
    return new utils.Interface(_abi) as BlacklistComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlacklistComponent {
    return new Contract(address, _abi, signerOrProvider) as BlacklistComponent;
  }
}
