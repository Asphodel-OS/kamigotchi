/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CoordComponent,
  CoordComponentInterface,
} from "../CoordComponent";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "world",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "authorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "extract",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Coord",
        components: [
          {
            name: "x",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "y",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "z",
            type: "int32",
            internalType: "int32",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct Coord[]",
        components: [
          {
            name: "x",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "y",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "z",
            type: "int32",
            internalType: "int32",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extractRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "get",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Coord",
        components: [
          {
            name: "x",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "y",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "z",
            type: "int32",
            internalType: "int32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAt",
    inputs: [
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct Coord[]",
        components: [
          {
            name: "x",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "y",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "z",
            type: "int32",
            internalType: "int32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntities",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitiesWithValue",
    inputs: [
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitiesWithValue",
    inputs: [
      {
        name: "value",
        type: "tuple",
        internalType: "struct Coord",
        components: [
          {
            name: "x",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "y",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "z",
            type: "int32",
            internalType: "int32",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRaw",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRawBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "has",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "id",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "result",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerWorld",
    inputs: [
      {
        name: "_world",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "remove",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "set",
    inputs: [
      {
        name: "entity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "value",
        type: "tuple",
        internalType: "struct Coord",
        components: [
          {
            name: "x",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "y",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "z",
            type: "int32",
            internalType: "int32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "values",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBatch",
    inputs: [
      {
        name: "entities",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "values",
        type: "tuple[]",
        internalType: "struct Coord[]",
        components: [
          {
            name: "x",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "y",
            type: "int32",
            internalType: "int32",
          },
          {
            name: "z",
            type: "int32",
            internalType: "int32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "size",
    inputs: [
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "unauthorizeWriter",
    inputs: [
      {
        name: "writer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "world",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "writeAccess",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "BareComponent__NotImplemented",
    inputs: [],
  },
  {
    type: "error",
    name: "BatchOp_UnexpectedLength",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerIsZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NoHandoverRequest",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableWritable__NotWriter",
    inputs: [],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroValueNotAllowed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002b2b38038062002b2b83398101604081905262000034916200014f565b8181818162000043336200006f565b60028190556001600160a01b0382161562000063576200006382620000ab565b5050505050506200018b565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a350565b620000b562000131565b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200011557600080fd5b505af11580156200012a573d6000803e3d6000fd5b5050505050565b638b78c6d8195433146200014d576382b429006000526004601cfd5b565b600080604083850312156200016357600080fd5b82516001600160a01b03811681146200017b57600080fd5b6020939093015192949293505050565b612990806200019b6000396000f3fe6080604052600436106101fe5760003560e01c80638b2829471161011d578063cccf7a8e116100b0578063dd98e3c91161007f578063f04e283e11610064578063f04e283e14610616578063f2fde38b14610629578063fee81cf41461063c57600080fd5b8063dd98e3c9146105c9578063e9ff6c76146105f657600080fd5b8063cccf7a8e14610549578063d2b54c3f14610569578063dc5c22cd14610589578063dd4d16d5146105a957600080fd5b80639d2c76b4116100ec5780639d2c76b4146104d3578063af640d0f146104f3578063b361be4614610509578063bf4fe57e1461052957600080fd5b80638b2829471461043f5780638da5cb5b1461045f57806390e39226146104935780639507d39a146104b357600080fd5b80634cc8221511610195578063715018a611610164578063715018a6146103ba5780638482643e146103c257806385b39782146103e2578063861eb9051461040f57600080fd5b80634cc82215146103525780634fef6a381461037257806354d1f13d146103925780636f9aa1551461039a57600080fd5b806325692962116101d157806325692962146102b657806330b67baa146102be57806331b933b9146103105780634323c4ef1461033257600080fd5b8063088dd0b91461020357806312b111551461023957806313ca8b6a146102665780631c5ee10c14610288575b600080fd5b34801561020f57600080fd5b5061022361021e366004612094565b61066f565b60405161023091906120d1565b60405180910390f35b34801561024557600080fd5b50610259610254366004612094565b610688565b60405161023091906121a3565b34801561027257600080fd5b506102866102813660046122b1565b6106d7565b005b34801561029457600080fd5b506102a86102a3366004612386565b610724565b604051908152602001610230565b610286610748565b3480156102ca57600080fd5b506000546102eb9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610230565b34801561031c57600080fd5b50610325610798565b60405161023091906123bb565b34801561033e57600080fd5b5061025961034d366004612094565b6107cc565b34801561035e57600080fd5b5061028661036d3660046123f3565b610918565b34801561037e57600080fd5b5061028661038d36600461240c565b610963565b6102866109d9565b3480156103a657600080fd5b506102a86103b5366004612442565b610a15565b610286610a3f565b3480156103ce57600080fd5b506102866103dd366004612094565b610a53565b3480156103ee57600080fd5b506104026103fd3660046123f3565b610a9b565b6040516102309190612487565b34801561041b57600080fd5b5061042f61042a36600461240c565b610b08565b6040519015158152602001610230565b34801561044b57600080fd5b5061028661045a3660046124b5565b610b97565b34801561046b57600080fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927546102eb565b34801561049f57600080fd5b506102866104ae36600461257d565b610be0565b3480156104bf57600080fd5b506104026104ce3660046123f3565b610c31565b3480156104df57600080fd5b506102866104ee36600461240c565b610c5a565b3480156104ff57600080fd5b506102a860025481565b34801561051557600080fd5b50610325610524366004612386565b610d1b565b34801561053557600080fd5b5061028661054436600461240c565b610d26565b34801561055557600080fd5b5061042f6105643660046123f3565b610d99565b34801561057557600080fd5b50610325610584366004612641565b610dbb565b34801561059557600080fd5b506102236105a4366004612094565b610dce565b3480156105b557600080fd5b506102866105c436600461265d565b610e1b565b3480156105d557600080fd5b506105e96105e43660046123f3565b610e6c565b604051610230919061268a565b34801561060257600080fd5b506105e96106113660046123f3565b610e77565b61028661062436600461240c565b610ec1565b61028661063736600461240c565b610efe565b34801561064857600080fd5b506102a861065736600461240c565b63389a75e1600c908152600091909152602090205490565b606061068261067d83610f25565b61106a565b92915050565b606061069333610b08565b6106c9576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61068282611152565b919050565b6106e033610b08565b610716576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610720828261116a565b5050565b600061068260036000848051906020012081526020019081526020016000206112fe565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60606000825167ffffffffffffffff8111156107ea576107ea611f87565b60405190808252806020026020018201604052801561081d57816020015b60608152602001906001900390816108085790505b50905060005b835181101561091157600160008583815181106108425761084261269d565b602002602001015181526020019081526020016000208054610863906126cc565b80601f016020809104026020016040519081016040528092919081815260200182805461088f906126cc565b80156108dc5780601f106108b1576101008083540402835291602001916108dc565b820191906000526020600020905b8154815290600101906020018083116108bf57829003601f168201915b50505050508282815181106108f3576108f361269d565b602002602001018190525080806109099061274e565b915050610823565b5092915050565b61092133610b08565b610957576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61096081611308565b50565b61096b6113db565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b81516020808401919091206000908152600390915260408120610a389083611411565b9392505050565b610a476113db565b610a51600061141d565b565b610a5c33610b08565b610a92576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61096081611483565b6040805160608101825260008082526020820181905291810191909152610ac133610b08565b610af7576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610682610b038361158b565b6115ab565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806106825750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275473ffffffffffffffffffffffffffffffffffffffff91821691161490565b610ba033610b08565b610bd6576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107208282611635565b610be933610b08565b610c1f576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61072082610c2c83611730565b61116a565b6040805160608101825260008082526020820181905291810191909152610682610b03836117e2565b610c626113db565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610d0057600080fd5b505af1158015610d14573d6000803e3d6000fd5b5050505050565b606061068282611884565b610d2e6113db565b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610db2906126cc565b15159392505050565b6060610682610dc9836118a8565b611884565b6060610dd933610b08565b610e0f576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61068261067d83611152565b610e2433610b08565b610e5a576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61072082610e67836118a8565b611635565b6060610682826117e2565b6060610e8233610b08565b610eb8576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106828261158b565b610ec96113db565b63389a75e1600c52806000526020600c208054421115610ef157636f5e88186000526004601cfd5b600090556109608161141d565b610f066113db565b8060601b610f1c57637448fbae6000526004601cfd5b6109608161141d565b60606000825167ffffffffffffffff811115610f4357610f43611f87565b604051908082528060200260200182016040528015610f7657816020015b6060815260200190600190039081610f615790505b50905060005b83518110156109115760016000858381518110610f9b57610f9b61269d565b602002602001015181526020019081526020016000208054610fbc906126cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610fe8906126cc565b80156110355780601f1061100a57610100808354040283529160200191611035565b820191906000526020600020905b81548152906001019060200180831161101857829003601f168201915b505050505082828151811061104c5761104c61269d565b602002602001018190525080806110629061274e565b915050610f7c565b60606000825167ffffffffffffffff81111561108857611088611f87565b6040519080825280602002602001820160405280156110f157816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816110a65790505b50905060005b8351811015610911576111228482815181106111155761111561269d565b60200260200101516115ab565b8282815181106111345761113461269d565b6020026020010181905250808061114a9061274e565b9150506110f7565b6060600061115f83610f25565b905061068283611483565b60005b82518110156112f35760006001600085848151811061118e5761118e61269d565b6020026020010151815260200190815260200160002080546111af906126cc565b80601f01602080910402602001604051908101604052809291908181526020018280546111db906126cc565b80156112285780601f106111fd57610100808354040283529160200191611228565b820191906000526020600020905b81548152906001019060200180831161120b57829003601f168201915b505050505090506000815111156112805761127e84838151811061124e5761124e61269d565b6020026020010151600360008480519060200120815260200190815260200160002061190a90919063ffffffff16565b505b6112de8483815181106112955761129561269d565b6020026020010151600360008686815181106112b3576112b361269d565b602002602001015180519060200120815260200190815260200160002061191690919063ffffffff16565b505080806112eb9061274e565b91505061116d565b506107208282611922565b6000610682825490565b60008181526001602052604081208054611321906126cc565b80601f016020809104026020016040519081016040528092919081815260200182805461134d906126cc565b801561139a5780601f1061136f5761010080835404028352916020019161139a565b820191906000526020600020905b81548152906001019060200180831161137d57829003601f168201915b5050505050905080516000036113ae575050565b805160208083019190912060009081526003909152604090206113d1908361190a565b5061072082611b00565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927543314610a51576382b429006000526004601cfd5b6000610a388383611b6e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927805473ffffffffffffffffffffffffffffffffffffffff9092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b60005b8151811015611581576000600160008484815181106114a7576114a761269d565b6020026020010151815260200190815260200160002080546114c8906126cc565b80601f01602080910402602001604051908101604052809291908181526020018280546114f4906126cc565b80156115415780601f1061151657610100808354040283529160200191611541565b820191906000526020600020905b81548152906001019060200180831161152457829003601f168201915b505050505090508051600003611557575061156f565b61156c83838151811061124e5761124e61269d565b50505b806115798161274e565b915050611486565b5061096081611b98565b60606000611598836117e2565b8051909150156106825761068283611308565b6040805160608101825260008082526020820181905291810191909152610682828060200190518101906115df9190612786565b60408051606081018252600080825260208201819052918101919091525060408051606081018252608083901c600390810b825267ffffffffffffffff84841c8116820b602084015290931690920b9082015290565b6000828152600160205260408120805461164e906126cc565b80601f016020809104026020016040519081016040528092919081815260200182805461167a906126cc565b80156116c75780601f1061169c576101008083540402835291602001916116c7565b820191906000526020600020905b8154815290600101906020018083116116aa57829003601f168201915b505050505090506000815111156116fd57805160208083019190912060009081526003909152604090206116fb908461190a565b505b815160208084019190912060009081526003909152604090206117209084611916565b5061172b8383611cad565b505050565b60606000825167ffffffffffffffff81111561174e5761174e611f87565b60405190808252806020026020018201604052801561178157816020015b606081526020019060019003908161176c5790505b50905060005b8351811015610911576117b28482815181106117a5576117a561269d565b60200260200101516118a8565b8282815181106117c4576117c461269d565b602002602001018190525080806117da9061274e565b915050611787565b60008181526001602052604090208054606091906117ff906126cc565b80601f016020809104026020016040519081016040528092919081815260200182805461182b906126cc565b80156118785780601f1061184d57610100808354040283529160200191611878565b820191906000526020600020905b81548152906001019060200180831161185b57829003601f168201915b50505050509050919050565b60606106826003600084805190602001208152602001908152602001600020611d8f565b60606118e2826000816040015163ffffffff166040836020015163ffffffff16901b6080846000015163ffffffff16901b17179050919050565b6040516020016118f491815260200190565b6040516020818303038152906040529050919050565b6000610a388383611d9c565b6000610a388383611e8f565b805182511461195d576040517fc291f68400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8251811015611a225781818151811061197b5761197b61269d565b6020026020010151516000036119bd576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181815181106119cf576119cf61269d565b6020026020010151600160008584815181106119ed576119ed61269d565b602002602001015181526020019081526020016000209081611a0f91906127e5565b5080611a1a8161274e565b915050611960565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b8351811015611afa578173ffffffffffffffffffffffffffffffffffffffff1663cfd3c57f858381518110611a7657611a7661269d565b6020026020010151858481518110611a9057611a9061269d565b60200260200101516040518363ffffffff1660e01b8152600401611ab59291906128ff565b600060405180830381600087803b158015611acf57600080fd5b505af1158015611ae3573d6000803e3d6000fd5b505050508080611af29061274e565b915050611a3f565b50505050565b6000818152600160205260408120611b1791611f39565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610ce6565b6000826000018281548110611b8557611b8561269d565b9060005260206000200154905092915050565b60005b8151811015611bee5760016000838381518110611bba57611bba61269d565b602002602001015181526020019081526020016000206000611bdc9190611f39565b80611be68161274e565b915050611b9b565b506000805473ffffffffffffffffffffffffffffffffffffffff16905b825181101561172b578173ffffffffffffffffffffffffffffffffffffffff16630de3b7b5848381518110611c4257611c4261269d565b60200260200101516040518263ffffffff1660e01b8152600401611c6891815260200190565b600060405180830381600087803b158015611c8257600080fd5b505af1158015611c96573d6000803e3d6000fd5b505050508080611ca59061274e565b915050611c0b565b8051600003611ce8576040517f9cf8540c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000828152600160205260409020611d0082826127e5565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90611d5990859085906004016128ff565b600060405180830381600087803b158015611d7357600080fd5b505af1158015611d87573d6000803e3d6000fd5b505050505050565b60606000610a3883611ede565b60008181526001830160205260408120548015611e85576000611dc0600183612918565b8554909150600090611dd490600190612918565b9050818114611e39576000866000018281548110611df457611df461269d565b9060005260206000200154905080876000018481548110611e1757611e1761269d565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611e4a57611e4a61292b565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610682565b6000915050610682565b6000818152600183016020526040812054611ed657508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610682565b506000610682565b60608160000180548060200260200160405190810160405280929190818152602001828054801561187857602002820191906000526020600020905b815481526020019060010190808311611f1a5750505050509050919050565b508054611f45906126cc565b6000825580601f10611f55575050565b601f01602090049060005260206000209081019061096091905b80821115611f835760008155600101611f6f565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611ffd57611ffd611f87565b604052919050565b600067ffffffffffffffff82111561201f5761201f611f87565b5060051b60200190565b600082601f83011261203a57600080fd5b8135602061204f61204a83612005565b611fb6565b82815260059290921b8401810191818101908684111561206e57600080fd5b8286015b848110156120895780358352918301918301612072565b509695505050505050565b6000602082840312156120a657600080fd5b813567ffffffffffffffff8111156120bd57600080fd5b6120c984828501612029565b949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561213357612120838551805160030b8252602081015160030b6020830152604081015160030b60408301525050565b92840192606092909201916001016120ed565b50909695505050505050565b6000815180845260005b8181101561216557602081850181015186830182015201612149565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612216577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261220485835161213f565b945092850192908501906001016121ca565b5092979650505050505050565b600082601f83011261223457600080fd5b813567ffffffffffffffff81111561224e5761224e611f87565b61227f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611fb6565b81815284602083860101111561229457600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156122c457600080fd5b823567ffffffffffffffff808211156122dc57600080fd5b6122e886838701612029565b93506020915081850135818111156122ff57600080fd5b8501601f8101871361231057600080fd5b803561231e61204a82612005565b81815260059190911b8201840190848101908983111561233d57600080fd5b8584015b83811015612375578035868111156123595760008081fd5b6123678c8983890101612223565b845250918601918601612341565b508096505050505050509250929050565b60006020828403121561239857600080fd5b813567ffffffffffffffff8111156123af57600080fd5b6120c984828501612223565b6020808252825182820181905260009190848201906040850190845b81811015612133578351835292840192918401916001016123d7565b60006020828403121561240557600080fd5b5035919050565b60006020828403121561241e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610a3857600080fd5b6000806040838503121561245557600080fd5b823567ffffffffffffffff81111561246c57600080fd5b61247885828601612223565b95602094909401359450505050565b606081016106828284805160030b8252602081015160030b6020830152604081015160030b60408301525050565b600080604083850312156124c857600080fd5b82359150602083013567ffffffffffffffff8111156124e657600080fd5b6124f285828601612223565b9150509250929050565b8035600381900b81146106d257600080fd5b60006060828403121561252057600080fd5b6040516060810181811067ffffffffffffffff8211171561254357612543611f87565b604052905080612552836124fc565b8152612560602084016124fc565b6020820152612571604084016124fc565b60408201525092915050565b6000806040838503121561259057600080fd5b823567ffffffffffffffff808211156125a857600080fd5b6125b486838701612029565b93506020915081850135818111156125cb57600080fd5b85019050601f810186136125de57600080fd5b80356125ec61204a82612005565b8181526060918202830184019184820191908984111561260b57600080fd5b938501935b83851015612631576126228a8661250e565b83529384019391850191612610565b5080955050505050509250929050565b60006060828403121561265357600080fd5b610a38838361250e565b6000806080838503121561267057600080fd5b82359150612681846020850161250e565b90509250929050565b602081526000610a38602083018461213f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c908216806126e057607f821691505b602082108103612719577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361277f5761277f61271f565b5060010190565b60006020828403121561279857600080fd5b5051919050565b601f82111561172b57600081815260208120601f850160051c810160208610156127c65750805b601f850160051c820191505b81811015611d87578281556001016127d2565b815167ffffffffffffffff8111156127ff576127ff611f87565b6128138161280d84546126cc565b8461279f565b602080601f83116001811461286657600084156128305750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611d87565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156128b357888601518255948401946001909101908401612894565b50858210156128ef57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b8281526040602082015260006120c9604083018461213f565b818103818111156106825761068261271f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220d1518a17bfc58f09c6b895a18240664464d0004abac24c98927e32711c4ff08564736f6c63430008110033";

type CoordComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CoordComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CoordComponent__factory extends ContractFactory {
  constructor(...args: CoordComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CoordComponent> {
    return super.deploy(world, id, overrides || {}) as Promise<CoordComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, id, overrides || {});
  }
  override attach(address: string): CoordComponent {
    return super.attach(address) as CoordComponent;
  }
  override connect(signer: Signer): CoordComponent__factory {
    return super.connect(signer) as CoordComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoordComponentInterface {
    return new utils.Interface(_abi) as CoordComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoordComponent {
    return new Contract(address, _abi, signerOrProvider) as CoordComponent;
  }
}
