// SPDX-License-Identifier: AGPL-3.0-only
pragma solidity >=0.8.28;

////////////////////////
// AUTO GEN FILE
// for components and systems import in one place

// External 
import { VipScore } from "utils/VipScore.sol";

// Solecs
import { IWorld } from "solecs/interfaces/IWorld.sol";
import { World } from "solecs/World.sol";
import { BareComponent } from "solecs/BareComponent.sol";
import { Component } from "solecs/Component.sol";
import { System } from "solecs/System.sol";
import { getAddrByID } from "solecs/utils.sol";
import { IUint256Component } from "solecs/interfaces/IUint256Component.sol";
import { ISystem } from "solecs/interfaces/ISystem.sol";
import { IComponent } from "solecs/interfaces/IComponent.sol";

// Libraries
<% libraries.forEach(library => { -%>
import { <%=library%> } from "libraries/<%= library %>.sol";
<% }); -%>

import { LibCooldown } from "libraries/utils/LibCooldown.sol";
import { LibGetter } from "libraries/utils/LibGetter.sol";
import { LibPack } from "libraries/utils/LibPack.sol";
import { LibReference } from "libraries/utils/LibReference.sol";
import { LibRandom } from "libraries/utils/LibRandom.sol";
import { LibSetter } from "libraries/utils/LibSetter.sol";

// Components
<% components.forEach(component=> { -%>
import { <%= component.comp %>Component, ID as <%= component.comp %>ComponentID } from "components/<%- component.comp %>Component.sol";
<% }); -%>

// Systems
<% systems.forEach(system=> { -%>
import { <%= system.name %>, ID as <%= system.name %>ID } from "systems/<%- system.name %>.sol";
<% }); -%>

// Tokens
import { Kami721 } from "tokens/Kami721.sol";
import { OpenMintable } from "tokens/OpenMintable.sol";
import { ERC20 } from "solmate/tokens/ERC20.sol";

// utils

function getAllComponentIDs() pure returns (uint256[] memory) {
  uint256[] memory ids = new uint256[](<%= components.length %>);
  uint256 index;
  <% components.forEach(component=> { -%>
ids[index++] = <%= component.comp %>ComponentID;
  <% }); -%>
  return ids;
}