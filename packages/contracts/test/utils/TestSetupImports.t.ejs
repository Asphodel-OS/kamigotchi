// SPDX-License-Identifier: AGPL-3.0-only
pragma solidity >=0.8.28;

import "tests/utils/MudTest.t.sol";
import "deployment/Imports.sol";

// Utils
import { WrapCaller } from "tests/utils/WrapCaller.t.sol";

abstract contract TestSetupImports is MudTest {
  // Components vars
<% components.forEach(component => { -%>
  <%= component.comp %>Component _<%= component.comp %>Component;
<% }); -%>

  // System vars
<% systems.forEach(system => { -%>
  <%= system.name %> _<%= system.name %>;
<% }); -%>

  WrapCaller ExternalCaller;

  function setUp() public virtual override {
    super.setUp();
    ExternalCaller = new WrapCaller(world, components);

<% components.forEach(component => { -%>
    _<%= component.comp %>Component = <%= component.comp %>Component(component(<%= component.comp %>ComponentID));
<% }); -%>

<% systems.forEach(system => { -%>
    _<%= system.name %> = <%= system.name %>(system(<%= system.name %>ID));
<% }); -%>

    vm.startPrank(deployer);
<% components.forEach(component => { -%>
    _<%= component.comp %>Component.authorizeWriter(address(ExternalCaller));
<% }); -%>
    vm.stopPrank();
  }
}