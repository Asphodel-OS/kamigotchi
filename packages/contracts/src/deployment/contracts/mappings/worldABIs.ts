export const UintCompABI = [
  {
    inputs: [
      { internalType: 'address', name: 'world', type: 'address' },
      { internalType: 'uint256', name: 'id', type: 'uint256' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  { inputs: [], type: 'error', name: 'BareComponent__NotImplemented' },
  { inputs: [], type: 'error', name: 'BatchOp_UnexpectedLength' },
  { inputs: [], type: 'error', name: 'OwnableWritable__NotWriter' },
  { inputs: [], type: 'error', name: 'Ownable__NotOwner' },
  { inputs: [], type: 'error', name: 'Ownable__NotTransitiveOwner' },
  { inputs: [], type: 'error', name: 'ZeroValueNotAllowed' },
  {
    inputs: [
      { internalType: 'address', name: 'previousOwner', type: 'address', indexed: true },
      { internalType: 'address', name: 'newOwner', type: 'address', indexed: true },
    ],
    type: 'event',
    name: 'OwnershipTransferred',
    anonymous: false,
  },
  {
    inputs: [{ internalType: 'address', name: 'writer', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'authorizeWriter',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'entity', type: 'uint256' }],
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'extract',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
  },
  {
    inputs: [{ internalType: 'uint256[]', name: 'entities', type: 'uint256[]' }],
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'extract',
    outputs: [{ internalType: 'uint256[]', name: '', type: 'uint256[]' }],
  },
  {
    inputs: [{ internalType: 'uint256', name: 'entity', type: 'uint256' }],
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'extractRaw',
    outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
  },
  {
    inputs: [{ internalType: 'uint256[]', name: 'entities', type: 'uint256[]' }],
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'extractRaw',
    outputs: [{ internalType: 'bytes[]', name: '', type: 'bytes[]' }],
  },
  {
    inputs: [{ internalType: 'uint256', name: 'entity', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
    name: 'get',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
  },
  {
    inputs: [
      { internalType: 'bytes', name: 'value', type: 'bytes' },
      { internalType: 'uint256', name: 'index', type: 'uint256' },
    ],
    stateMutability: 'view',
    type: 'function',
    name: 'getAt',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
  },
  {
    inputs: [{ internalType: 'uint256[]', name: 'entities', type: 'uint256[]' }],
    stateMutability: 'view',
    type: 'function',
    name: 'getBatch',
    outputs: [{ internalType: 'uint256[]', name: '', type: 'uint256[]' }],
  },
  {
    inputs: [],
    stateMutability: 'view',
    type: 'function',
    name: 'getEntities',
    outputs: [{ internalType: 'uint256[]', name: '', type: 'uint256[]' }],
  },
  // { // commenting out bytes for ethers to parse this properly
  //   inputs: [{ internalType: 'bytes', name: 'value', type: 'bytes' }],
  //   stateMutability: 'view',
  //   type: 'function',
  //   name: 'getEntitiesWithValue',
  //   outputs: [{ internalType: 'uint256[]', name: '', type: 'uint256[]' }],
  // },
  {
    inputs: [{ internalType: 'uint256', name: 'value', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
    name: 'getEntitiesWithValue',
    outputs: [{ internalType: 'uint256[]', name: '', type: 'uint256[]' }],
  },
  {
    inputs: [{ internalType: 'uint256', name: 'entity', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
    name: 'getRaw',
    outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
  },
  {
    inputs: [{ internalType: 'uint256[]', name: 'entities', type: 'uint256[]' }],
    stateMutability: 'view',
    type: 'function',
    name: 'getRaw',
    outputs: [{ internalType: 'bytes[]', name: '', type: 'bytes[]' }],
  },
  {
    inputs: [{ internalType: 'uint256', name: 'entity', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
    name: 'has',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
  },
  {
    inputs: [],
    stateMutability: 'view',
    type: 'function',
    name: 'id',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
  },
  {
    inputs: [],
    stateMutability: 'view',
    type: 'function',
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
  },
  {
    inputs: [{ internalType: 'address', name: '_world', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'registerWorld',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'entity', type: 'uint256' }],
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'remove',
  },
  {
    inputs: [{ internalType: 'uint256[]', name: 'entities', type: 'uint256[]' }],
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'remove',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'entity', type: 'uint256' },
      { internalType: 'uint256', name: 'value', type: 'uint256' },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'set',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'entity', type: 'uint256' },
      { internalType: 'bytes', name: 'value', type: 'bytes' },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'set',
  },
  {
    inputs: [
      { internalType: 'uint256[]', name: 'entities', type: 'uint256[]' },
      { internalType: 'bytes[]', name: 'values', type: 'bytes[]' },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'set',
  },
  {
    inputs: [
      { internalType: 'uint256[]', name: 'entities', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'values', type: 'uint256[]' },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'set',
  },
  {
    inputs: [{ internalType: 'bytes', name: 'value', type: 'bytes' }],
    stateMutability: 'view',
    type: 'function',
    name: 'size',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'transferOwnership',
  },
  {
    inputs: [{ internalType: 'address', name: 'writer', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'unauthorizeWriter',
  },
  {
    inputs: [],
    stateMutability: 'view',
    type: 'function',
    name: 'world',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
  },
  {
    inputs: [{ internalType: 'address', name: 'operator', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
    name: 'writeAccess',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
  },
];

export const SystemABI = [
  {
    type: 'function',
    name: 'cancelOwnershipHandover',
    inputs: [],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'completeOwnershipHandover',
    inputs: [{ name: 'pendingOwner', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'payable',
  },
  { type: 'function', name: 'deprecate', inputs: [], outputs: [], stateMutability: 'nonpayable' },
  {
    type: 'function',
    name: 'execute',
    inputs: [{ name: 'args', type: 'bytes', internalType: 'bytes' }],
    outputs: [{ name: '', type: 'bytes', internalType: 'bytes' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [{ name: 'result', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'ownershipHandoverExpiresAt',
    inputs: [{ name: 'pendingOwner', type: 'address', internalType: 'address' }],
    outputs: [{ name: 'result', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'renounceOwnership',
    inputs: [],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'requestOwnershipHandover',
    inputs: [],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'transferOwnership',
    inputs: [{ name: 'newOwner', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'event',
    name: 'OwnershipHandoverCanceled',
    inputs: [{ name: 'pendingOwner', type: 'address', indexed: true, internalType: 'address' }],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'OwnershipHandoverRequested',
    inputs: [{ name: 'pendingOwner', type: 'address', indexed: true, internalType: 'address' }],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'OwnershipTransferred',
    inputs: [
      { name: 'oldOwner', type: 'address', indexed: true, internalType: 'address' },
      { name: 'newOwner', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  { type: 'event', name: 'SystemDeprecated', inputs: [], anonymous: false },
  { type: 'error', name: 'AlreadyInitialized', inputs: [] },
  { type: 'error', name: 'NewOwnerIsZeroAddress', inputs: [] },
  { type: 'error', name: 'NoHandoverRequest', inputs: [] },
  { type: 'error', name: 'Unauthorized', inputs: [] },
];

export const WorldABI = [
  { type: 'constructor', inputs: [], stateMutability: 'nonpayable' },
  {
    type: 'function',
    name: 'components',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract IUint256Component' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getUniqueEntityId',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'nonpayable',
  },
  { type: 'function', name: 'init', inputs: [], outputs: [], stateMutability: 'nonpayable' },
  {
    type: 'function',
    name: 'register',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract RegisterSystem' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'registerComponent',
    inputs: [
      { name: 'componentAddr', type: 'address', internalType: 'address' },
      { name: 'id', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'registerComponentValueRemoved',
    inputs: [{ name: 'entity', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'registerComponentValueSet',
    inputs: [
      { name: 'entity', type: 'uint256', internalType: 'uint256' },
      { name: 'data', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'registerSystem',
    inputs: [
      { name: 'systemAddr', type: 'address', internalType: 'address' },
      { name: 'id', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'systems',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract IUint256Component' }],
    stateMutability: 'view',
  },
  {
    type: 'event',
    name: 'ComponentValueRemoved',
    inputs: [
      { name: 'componentId', type: 'uint256', indexed: true, internalType: 'uint256' },
      { name: 'component', type: 'address', indexed: true, internalType: 'address' },
      { name: 'entity', type: 'uint256', indexed: true, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ComponentValueSet',
    inputs: [
      { name: 'componentId', type: 'uint256', indexed: true, internalType: 'uint256' },
      { name: 'component', type: 'address', indexed: true, internalType: 'address' },
      { name: 'entity', type: 'uint256', indexed: true, internalType: 'uint256' },
      { name: 'data', type: 'bytes', indexed: false, internalType: 'bytes' },
    ],
    anonymous: false,
  },
];
