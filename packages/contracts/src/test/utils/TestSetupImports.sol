// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;

import "std-contracts/test/MudTest.t.sol";

// Libraries
import { LibAccount } from "libraries/LibAccount.sol";
import { LibCoin } from "libraries/LibCoin.sol";
import { LibInventory } from "libraries/LibInventory.sol";
import { LibListing } from "libraries/LibListing.sol";
import { LibMerchant } from "libraries/LibMerchant.sol";
import { LibTrait } from "libraries/LibTrait.sol";
import { LibNode } from "libraries/LibNode.sol";
import { LibMetadata } from "libraries/LibMetadata.sol";
import { LibPet } from "libraries/LibPet.sol";
import { LibProduction } from "libraries/LibProduction.sol";
import { LibPrototype } from "libraries/LibPrototype.sol";
import { LibRegister } from "libraries/LibRegister.sol";
import { LibRegistryItem } from "libraries/LibRegistryItem.sol";
import { LibRoom } from "libraries/LibRoom.sol";
import { LibRarity } from "libraries/LibRarity.sol";
import { LibStat } from "libraries/LibStat.sol";

// Components
import { AddressOperatorComponent, ID as AddressOperatorComponentID } from "components/AddressOperatorComponent.sol";
import { AddressOwnerComponent, ID as AddressOwnerComponentID } from "components/AddressOwnerComponent.sol";
import { AffinityComponent, ID as AffinityComponentID } from "components/AffinityComponent.sol";
import { BalanceComponent, ID as BalanceComponentID } from "components/BalanceComponent.sol";
import { BlockLastComponent, ID as BlockLastComponentID } from "components/BlockLastComponent.sol";
import { BlockRevealComponent, ID as BlockRevealComponentID } from "components/BlockRevealComponent.sol";
import { CanNameComponent, ID as CanNameComponentID } from "components/CanNameComponent.sol";
import { CoinComponent, ID as CoinComponentID } from "components/CoinComponent.sol";
import { DescriptionComponent, ID as DescriptionComponentID } from "components/DescriptionComponent.sol";
import { EpochComponent, ID as EpochComponentID } from "components/EpochComponent.sol";
import { ExitsComponent, ID as ExitsComponentID } from "components/ExitsComponent.sol";
import { ExperienceComponent, ID as ExperienceComponentID } from "components/ExperienceComponent.sol";
import { GenusComponent, ID as GenusComponentID } from "components/GenusComponent.sol";
import { HarmonyComponent, ID as HarmonyComponentID } from "components/HarmonyComponent.sol";
import { HealthComponent, ID as HealthComponentID } from "components/HealthComponent.sol";
import { HealthCurrentComponent, ID as HealthCurrentComponentID } from "components/HealthCurrentComponent.sol";
import { IdAccountComponent, ID as IdAccountComponentID } from "components/IdAccountComponent.sol";
import { IdDelegateeComponent, ID as IdDelegateeComponentID } from "components/IdDelegateeComponent.sol";
import { IdDelegatorComponent, ID as IdDelegatorComponentID } from "components/IdDelegatorComponent.sol";
import { IdHolderComponent, ID as IdHolderComponentID } from "components/IdHolderComponent.sol";
import { IdMerchantComponent, ID as IdMerchantComponentID } from "components/IdMerchantComponent.sol";
import { IdNodeComponent, ID as IdNodeComponentID } from "components/IdNodeComponent.sol";
import { IdPetComponent, ID as IdPetComponentID } from "components/IdPetComponent.sol";
import { IdSourceComponent, ID as IdSourceComponentID } from "components/IdSourceComponent.sol";
import { IdTargetComponent, ID as IdTargetComponentID } from "components/IdTargetComponent.sol";
import { IndexBackgroundComponent, ID as IndexBackgroundComponentID } from "components/IndexBackgroundComponent.sol";
import { IndexBodyComponent, ID as IndexBodyComponentID } from "components/IndexBodyComponent.sol";
import { IndexColorComponent, ID as IndexColorComponentID } from "components/IndexColorComponent.sol";
import { IndexFaceComponent, ID as IndexFaceComponentID } from "components/IndexFaceComponent.sol";
import { IndexFoodComponent, ID as IndexFoodComponentID } from "components/IndexFoodComponent.sol";
import { IndexGearComponent, ID as IndexGearComponentID } from "components/IndexGearComponent.sol";
import { IndexHandComponent, ID as IndexHandComponentID } from "components/IndexHandComponent.sol";
import { IndexItemComponent, ID as IndexItemComponentID } from "components/IndexItemComponent.sol";
import { IndexModComponent, ID as IndexModComponentID } from "components/IndexModComponent.sol";
import { IndexPetComponent, ID as IndexPetComponentID } from "components/IndexPetComponent.sol";
import { IndexReviveComponent, ID as IndexReviveComponentID } from "components/IndexReviveComponent.sol";
import { IndexTraitComponent, ID as IndexTraitComponentID } from "components/IndexTraitComponent.sol";
import { IsAccountComponent, ID as IsAccountComponentID } from "components/IsAccountComponent.sol";
import { IsConfigComponent, ID as IsConfigComponentID } from "components/IsConfigComponent.sol";
import { IsEquippedComponent, ID as IsEquippedComponentID } from "components/IsEquippedComponent.sol";
import { IsFungibleComponent, ID as IsFungibleComponentID } from "components/IsFungibleComponent.sol";
import { IsInventoryComponent, ID as IsInventoryComponentID } from "components/IsInventoryComponent.sol";
import { IsKillComponent, ID as IsKillComponentID } from "components/IsKillComponent.sol";
import { IsListingComponent, ID as IsListingComponentID } from "components/IsListingComponent.sol";
import { IsMerchantComponent, ID as IsMerchantComponentID } from "components/IsMerchantComponent.sol";
import { IsNodeComponent, ID as IsNodeComponentID } from "components/IsNodeComponent.sol";
import { IsNonFungibleComponent, ID as IsNonFungibleComponentID } from "components/IsNonFungibleComponent.sol";
import { IsPetComponent, ID as IsPetComponentID } from "components/IsPetComponent.sol";
import { IsProductionComponent, ID as IsProductionComponentID } from "components/IsProductionComponent.sol";
import { IsRegistryComponent, ID as IsRegistryComponentID } from "components/IsRegistryComponent.sol";
import { IsRoomComponent, ID as IsRoomComponentID } from "components/IsRoomComponent.sol";
import { IsScoreComponent, ID as IsScoreComponentID } from "components/IsScoreComponent.sol";
import { IsTraitComponent, ID as IsTraitComponentID } from "components/IsTraitComponent.sol";
import { LocationComponent, ID as LocationComponentID } from "components/LocationComponent.sol";
import { MediaURIComponent, ID as MediaURIComponentID } from "components/MediaURIComponent.sol";
import { NameComponent, ID as NameComponentID } from "components/NameComponent.sol";
import { PowerComponent, ID as PowerComponentID } from "components/PowerComponent.sol";
import { PriceBuyComponent, ID as PriceBuyComponentID } from "components/PriceBuyComponent.sol";
import { PriceSellComponent, ID as PriceSellComponentID } from "components/PriceSellComponent.sol";
import { PrototypeComponent, ID as PrototypeComponentID } from "components/PrototypeComponent.sol";
import { RarityComponent, ID as RarityComponentID } from "components/RarityComponent.sol";
import { RateComponent, ID as RateComponentID } from "components/RateComponent.sol";
import { SlotsComponent, ID as SlotsComponentID } from "components/SlotsComponent.sol";
import { StaminaComponent, ID as StaminaComponentID } from "components/StaminaComponent.sol";
import { StaminaCurrentComponent, ID as StaminaCurrentComponentID } from "components/StaminaCurrentComponent.sol";
import { StateComponent, ID as StateComponentID } from "components/StateComponent.sol";
import { TimeComponent, ID as TimeComponentID } from "components/TimeComponent.sol";
import { TimeLastActionComponent, ID as TimeLastActionComponentID } from "components/TimeLastActionComponent.sol";
import { TimeStartComponent, ID as TimeStartComponentID } from "components/TimeStartComponent.sol";
import { TypeComponent, ID as TypeComponentID } from "components/TypeComponent.sol";
import { UpgradesComponent, ID as UpgradesComponentID } from "components/UpgradesComponent.sol";
import { ValueComponent, ID as ValueComponentID } from "components/ValueComponent.sol";
import { ViolenceComponent, ID as ViolenceComponentID } from "components/ViolenceComponent.sol";

// Systems
import { _InitSystem, ID as _InitSystemID } from "systems/_InitSystem.sol";
import { _devGiveTokensSystem, ID as _devGiveTokensSystemID } from "systems/_devGiveTokensSystem.sol";
import { _ListingSetSystem, ID as _ListingSetSystemID } from "systems/_ListingSetSystem.sol";
import { _MerchantCreateSystem, ID as _MerchantCreateSystemID } from "systems/_MerchantCreateSystem.sol";
import { _NodeCreateSystem, ID as _NodeCreateSystemID } from "systems/_NodeCreateSystem.sol";
import { _NodeSetAffinitySystem, ID as _NodeSetAffinitySystemID } from "systems/_NodeSetAffinitySystem.sol";
import { _NodeSetDescriptionSystem, ID as _NodeSetDescriptionSystemID } from "systems/_NodeSetDescriptionSystem.sol";
import { _NodeSetLocationSystem, ID as _NodeSetLocationSystemID } from "systems/_NodeSetLocationSystem.sol";
import { _NodeSetNameSystem, ID as _NodeSetNameSystemID } from "systems/_NodeSetNameSystem.sol";
import { _RegistryCreateFoodSystem, ID as _RegistryCreateFoodSystemID } from "systems/_RegistryCreateFoodSystem.sol";
import { _RegistryCreateGearSystem, ID as _RegistryCreateGearSystemID } from "systems/_RegistryCreateGearSystem.sol";
import { _RegistryCreateModSystem, ID as _RegistryCreateModSystemID } from "systems/_RegistryCreateModSystem.sol";
import { _RegistryCreateReviveSystem, ID as _RegistryCreateReviveSystemID } from "systems/_RegistryCreateReviveSystem.sol";
import { _RegistryCreateTraitSystem, ID as _RegistryCreateTraitSystemID } from "systems/_RegistryCreateTraitSystem.sol";
import { _RegistryUpdateFoodSystem, ID as _RegistryUpdateFoodSystemID } from "systems/_RegistryUpdateFoodSystem.sol";
import { _RegistryUpdateGearSystem, ID as _RegistryUpdateGearSystemID } from "systems/_RegistryUpdateGearSystem.sol";
import { _RegistryUpdateModSystem, ID as _RegistryUpdateModSystemID } from "systems/_RegistryUpdateModSystem.sol";
import { _RegistryUpdateReviveSystem, ID as _RegistryUpdateReviveSystemID } from "systems/_RegistryUpdateReviveSystem.sol";
import { _RegistryUpdateTraitSystem, ID as _RegistryUpdateTraitSystemID } from "systems/_RegistryUpdateTraitSystem.sol";
import { _RoomCreateSystem, ID as _RoomCreateSystemID } from "systems/_RoomCreateSystem.sol";
import { AccountMoveSystem, ID as AccountMoveSystemID } from "systems/AccountMoveSystem.sol";
import { AccountSetNameSystem, ID as AccountSetNameSystemID } from "systems/AccountSetNameSystem.sol";
import { AccountSetOperatorSystem, ID as AccountSetOperatorSystemID } from "systems/AccountSetOperatorSystem.sol";
import { AccountRegisterSystem, ID as AccountRegisterSystemID } from "systems/AccountRegisterSystem.sol";
import { ERC20ProxySystem, ID as ERC20ProxySystemID } from "systems/ERC20ProxySystem.sol";
import { ERC20WithdrawSystem, ID as ERC20WithdrawSystemID } from "systems/ERC20WithdrawSystem.sol";
import { ERC20DepositSystem, ID as ERC20DepositSystemID } from "systems/ERC20DepositSystem.sol";
import { ERC721MintSystem, ID as ERC721MintSystemID } from "systems/ERC721MintSystem.sol";
import { ERC721MetadataSystem, ID as ERC721MetadataSystemID } from "systems/ERC721MetadataSystem.sol";
import { ERC721TransferSystem, ID as ERC721TransferSystemID } from "systems/ERC721TransferSystem.sol";
import { ERC721ProxySystem, ID as ERC721ProxySystemID } from "systems/ERC721ProxySystem.sol";
import { ERC721WithdrawSystem, ID as ERC721WithdrawSystemID } from "systems/ERC721WithdrawSystem.sol";
import { ERC721DepositSystem, ID as ERC721DepositSystemID } from "systems/ERC721DepositSystem.sol";
import { ListingBuySystem, ID as ListingBuySystemID } from "systems/ListingBuySystem.sol";
import { ListingSellSystem, ID as ListingSellSystemID } from "systems/ListingSellSystem.sol";
import { PetFeedSystem, ID as PetFeedSystemID } from "systems/PetFeedSystem.sol";
import { PetNameSystem, ID as PetNameSystemID } from "systems/PetNameSystem.sol";
import { PetReviveSystem, ID as PetReviveSystemID } from "systems/PetReviveSystem.sol";
import { PetSetAccountSystem, ID as PetSetAccountSystemID } from "systems/PetSetAccountSystem.sol";
import { ProductionCollectSystem, ID as ProductionCollectSystemID } from "systems/ProductionCollectSystem.sol";
import { ProductionLiquidateSystem, ID as ProductionLiquidateSystemID } from "systems/ProductionLiquidateSystem.sol";
import { ProductionStartSystem, ID as ProductionStartSystemID } from "systems/ProductionStartSystem.sol";
import { ProductionStopSystem, ID as ProductionStopSystemID } from "systems/ProductionStopSystem.sol";

// Tokens
import { KamiERC20 } from "tokens/KamiERC20.sol";
import { KamiERC721 } from "tokens/KamiERC721.sol";

abstract contract TestSetupImports is MudTest {
// Components vars
AddressOperatorComponent _AddressOperatorComponent;
AddressOwnerComponent _AddressOwnerComponent;
AffinityComponent _AffinityComponent;
BalanceComponent _BalanceComponent;
BlockLastComponent _BlockLastComponent;
BlockRevealComponent _BlockRevealComponent;
CanNameComponent _CanNameComponent;
CoinComponent _CoinComponent;
DescriptionComponent _DescriptionComponent;
EpochComponent _EpochComponent;
ExitsComponent _ExitsComponent;
ExperienceComponent _ExperienceComponent;
GenusComponent _GenusComponent;
HarmonyComponent _HarmonyComponent;
HealthComponent _HealthComponent;
HealthCurrentComponent _HealthCurrentComponent;
IdAccountComponent _IdAccountComponent;
IdDelegateeComponent _IdDelegateeComponent;
IdDelegatorComponent _IdDelegatorComponent;
IdHolderComponent _IdHolderComponent;
IdMerchantComponent _IdMerchantComponent;
IdNodeComponent _IdNodeComponent;
IdPetComponent _IdPetComponent;
IdSourceComponent _IdSourceComponent;
IdTargetComponent _IdTargetComponent;
IndexBackgroundComponent _IndexBackgroundComponent;
IndexBodyComponent _IndexBodyComponent;
IndexColorComponent _IndexColorComponent;
IndexFaceComponent _IndexFaceComponent;
IndexFoodComponent _IndexFoodComponent;
IndexGearComponent _IndexGearComponent;
IndexHandComponent _IndexHandComponent;
IndexItemComponent _IndexItemComponent;
IndexModComponent _IndexModComponent;
IndexPetComponent _IndexPetComponent;
IndexReviveComponent _IndexReviveComponent;
IndexTraitComponent _IndexTraitComponent;
IsAccountComponent _IsAccountComponent;
IsConfigComponent _IsConfigComponent;
IsEquippedComponent _IsEquippedComponent;
IsFungibleComponent _IsFungibleComponent;
IsInventoryComponent _IsInventoryComponent;
IsKillComponent _IsKillComponent;
IsListingComponent _IsListingComponent;
IsMerchantComponent _IsMerchantComponent;
IsNodeComponent _IsNodeComponent;
IsNonFungibleComponent _IsNonFungibleComponent;
IsPetComponent _IsPetComponent;
IsProductionComponent _IsProductionComponent;
IsRegistryComponent _IsRegistryComponent;
IsRoomComponent _IsRoomComponent;
IsScoreComponent _IsScoreComponent;
IsTraitComponent _IsTraitComponent;
LocationComponent _LocationComponent;
MediaURIComponent _MediaURIComponent;
NameComponent _NameComponent;
PowerComponent _PowerComponent;
PriceBuyComponent _PriceBuyComponent;
PriceSellComponent _PriceSellComponent;
PrototypeComponent _PrototypeComponent;
RarityComponent _RarityComponent;
RateComponent _RateComponent;
SlotsComponent _SlotsComponent;
StaminaComponent _StaminaComponent;
StaminaCurrentComponent _StaminaCurrentComponent;
StateComponent _StateComponent;
TimeComponent _TimeComponent;
TimeLastActionComponent _TimeLastActionComponent;
TimeStartComponent _TimeStartComponent;
TypeComponent _TypeComponent;
UpgradesComponent _UpgradesComponent;
ValueComponent _ValueComponent;
ViolenceComponent _ViolenceComponent;

// System vars
_InitSystem __InitSystem;
_devGiveTokensSystem __devGiveTokensSystem;
_ListingSetSystem __ListingSetSystem;
_MerchantCreateSystem __MerchantCreateSystem;
_NodeCreateSystem __NodeCreateSystem;
_NodeSetAffinitySystem __NodeSetAffinitySystem;
_NodeSetDescriptionSystem __NodeSetDescriptionSystem;
_NodeSetLocationSystem __NodeSetLocationSystem;
_NodeSetNameSystem __NodeSetNameSystem;
_RegistryCreateFoodSystem __RegistryCreateFoodSystem;
_RegistryCreateGearSystem __RegistryCreateGearSystem;
_RegistryCreateModSystem __RegistryCreateModSystem;
_RegistryCreateReviveSystem __RegistryCreateReviveSystem;
_RegistryCreateTraitSystem __RegistryCreateTraitSystem;
_RegistryUpdateFoodSystem __RegistryUpdateFoodSystem;
_RegistryUpdateGearSystem __RegistryUpdateGearSystem;
_RegistryUpdateModSystem __RegistryUpdateModSystem;
_RegistryUpdateReviveSystem __RegistryUpdateReviveSystem;
_RegistryUpdateTraitSystem __RegistryUpdateTraitSystem;
_RoomCreateSystem __RoomCreateSystem;
AccountMoveSystem _AccountMoveSystem;
AccountSetNameSystem _AccountSetNameSystem;
AccountSetOperatorSystem _AccountSetOperatorSystem;
AccountRegisterSystem _AccountRegisterSystem;
ERC20ProxySystem _ERC20ProxySystem;
ERC20WithdrawSystem _ERC20WithdrawSystem;
ERC20DepositSystem _ERC20DepositSystem;
ERC721MintSystem _ERC721MintSystem;
ERC721MetadataSystem _ERC721MetadataSystem;
ERC721TransferSystem _ERC721TransferSystem;
ERC721ProxySystem _ERC721ProxySystem;
ERC721WithdrawSystem _ERC721WithdrawSystem;
ERC721DepositSystem _ERC721DepositSystem;
ListingBuySystem _ListingBuySystem;
ListingSellSystem _ListingSellSystem;
PetFeedSystem _PetFeedSystem;
PetNameSystem _PetNameSystem;
PetReviveSystem _PetReviveSystem;
PetSetAccountSystem _PetSetAccountSystem;
ProductionCollectSystem _ProductionCollectSystem;
ProductionLiquidateSystem _ProductionLiquidateSystem;
ProductionStartSystem _ProductionStartSystem;
ProductionStopSystem _ProductionStopSystem;

// Token vars
KamiERC20 _KamiERC20;
KamiERC721 _KamiERC721;

function setUp() public virtual override {
super.setUp();

_AddressOperatorComponent = AddressOperatorComponent(component(AddressOperatorComponentID));
_AddressOwnerComponent = AddressOwnerComponent(component(AddressOwnerComponentID));
_AffinityComponent = AffinityComponent(component(AffinityComponentID));
_BalanceComponent = BalanceComponent(component(BalanceComponentID));
_BlockLastComponent = BlockLastComponent(component(BlockLastComponentID));
_BlockRevealComponent = BlockRevealComponent(component(BlockRevealComponentID));
_CanNameComponent = CanNameComponent(component(CanNameComponentID));
_CoinComponent = CoinComponent(component(CoinComponentID));
_DescriptionComponent = DescriptionComponent(component(DescriptionComponentID));
_EpochComponent = EpochComponent(component(EpochComponentID));
_ExitsComponent = ExitsComponent(component(ExitsComponentID));
_ExperienceComponent = ExperienceComponent(component(ExperienceComponentID));
_GenusComponent = GenusComponent(component(GenusComponentID));
_HarmonyComponent = HarmonyComponent(component(HarmonyComponentID));
_HealthComponent = HealthComponent(component(HealthComponentID));
_HealthCurrentComponent = HealthCurrentComponent(component(HealthCurrentComponentID));
_IdAccountComponent = IdAccountComponent(component(IdAccountComponentID));
_IdDelegateeComponent = IdDelegateeComponent(component(IdDelegateeComponentID));
_IdDelegatorComponent = IdDelegatorComponent(component(IdDelegatorComponentID));
_IdHolderComponent = IdHolderComponent(component(IdHolderComponentID));
_IdMerchantComponent = IdMerchantComponent(component(IdMerchantComponentID));
_IdNodeComponent = IdNodeComponent(component(IdNodeComponentID));
_IdPetComponent = IdPetComponent(component(IdPetComponentID));
_IdSourceComponent = IdSourceComponent(component(IdSourceComponentID));
_IdTargetComponent = IdTargetComponent(component(IdTargetComponentID));
_IndexBackgroundComponent = IndexBackgroundComponent(component(IndexBackgroundComponentID));
_IndexBodyComponent = IndexBodyComponent(component(IndexBodyComponentID));
_IndexColorComponent = IndexColorComponent(component(IndexColorComponentID));
_IndexFaceComponent = IndexFaceComponent(component(IndexFaceComponentID));
_IndexFoodComponent = IndexFoodComponent(component(IndexFoodComponentID));
_IndexGearComponent = IndexGearComponent(component(IndexGearComponentID));
_IndexHandComponent = IndexHandComponent(component(IndexHandComponentID));
_IndexItemComponent = IndexItemComponent(component(IndexItemComponentID));
_IndexModComponent = IndexModComponent(component(IndexModComponentID));
_IndexPetComponent = IndexPetComponent(component(IndexPetComponentID));
_IndexReviveComponent = IndexReviveComponent(component(IndexReviveComponentID));
_IndexTraitComponent = IndexTraitComponent(component(IndexTraitComponentID));
_IsAccountComponent = IsAccountComponent(component(IsAccountComponentID));
_IsConfigComponent = IsConfigComponent(component(IsConfigComponentID));
_IsEquippedComponent = IsEquippedComponent(component(IsEquippedComponentID));
_IsFungibleComponent = IsFungibleComponent(component(IsFungibleComponentID));
_IsInventoryComponent = IsInventoryComponent(component(IsInventoryComponentID));
_IsKillComponent = IsKillComponent(component(IsKillComponentID));
_IsListingComponent = IsListingComponent(component(IsListingComponentID));
_IsMerchantComponent = IsMerchantComponent(component(IsMerchantComponentID));
_IsNodeComponent = IsNodeComponent(component(IsNodeComponentID));
_IsNonFungibleComponent = IsNonFungibleComponent(component(IsNonFungibleComponentID));
_IsPetComponent = IsPetComponent(component(IsPetComponentID));
_IsProductionComponent = IsProductionComponent(component(IsProductionComponentID));
_IsRegistryComponent = IsRegistryComponent(component(IsRegistryComponentID));
_IsRoomComponent = IsRoomComponent(component(IsRoomComponentID));
_IsScoreComponent = IsScoreComponent(component(IsScoreComponentID));
_IsTraitComponent = IsTraitComponent(component(IsTraitComponentID));
_LocationComponent = LocationComponent(component(LocationComponentID));
_MediaURIComponent = MediaURIComponent(component(MediaURIComponentID));
_NameComponent = NameComponent(component(NameComponentID));
_PowerComponent = PowerComponent(component(PowerComponentID));
_PriceBuyComponent = PriceBuyComponent(component(PriceBuyComponentID));
_PriceSellComponent = PriceSellComponent(component(PriceSellComponentID));
_PrototypeComponent = PrototypeComponent(component(PrototypeComponentID));
_RarityComponent = RarityComponent(component(RarityComponentID));
_RateComponent = RateComponent(component(RateComponentID));
_SlotsComponent = SlotsComponent(component(SlotsComponentID));
_StaminaComponent = StaminaComponent(component(StaminaComponentID));
_StaminaCurrentComponent = StaminaCurrentComponent(component(StaminaCurrentComponentID));
_StateComponent = StateComponent(component(StateComponentID));
_TimeComponent = TimeComponent(component(TimeComponentID));
_TimeLastActionComponent = TimeLastActionComponent(component(TimeLastActionComponentID));
_TimeStartComponent = TimeStartComponent(component(TimeStartComponentID));
_TypeComponent = TypeComponent(component(TypeComponentID));
_UpgradesComponent = UpgradesComponent(component(UpgradesComponentID));
_ValueComponent = ValueComponent(component(ValueComponentID));
_ViolenceComponent = ViolenceComponent(component(ViolenceComponentID));

__InitSystem = _InitSystem(system(_InitSystemID));
__devGiveTokensSystem = _devGiveTokensSystem(system(_devGiveTokensSystemID));
__ListingSetSystem = _ListingSetSystem(system(_ListingSetSystemID));
__MerchantCreateSystem = _MerchantCreateSystem(system(_MerchantCreateSystemID));
__NodeCreateSystem = _NodeCreateSystem(system(_NodeCreateSystemID));
__NodeSetAffinitySystem = _NodeSetAffinitySystem(system(_NodeSetAffinitySystemID));
__NodeSetDescriptionSystem = _NodeSetDescriptionSystem(system(_NodeSetDescriptionSystemID));
__NodeSetLocationSystem = _NodeSetLocationSystem(system(_NodeSetLocationSystemID));
__NodeSetNameSystem = _NodeSetNameSystem(system(_NodeSetNameSystemID));
__RegistryCreateFoodSystem = _RegistryCreateFoodSystem(system(_RegistryCreateFoodSystemID));
__RegistryCreateGearSystem = _RegistryCreateGearSystem(system(_RegistryCreateGearSystemID));
__RegistryCreateModSystem = _RegistryCreateModSystem(system(_RegistryCreateModSystemID));
__RegistryCreateReviveSystem = _RegistryCreateReviveSystem(system(_RegistryCreateReviveSystemID));
__RegistryCreateTraitSystem = _RegistryCreateTraitSystem(system(_RegistryCreateTraitSystemID));
__RegistryUpdateFoodSystem = _RegistryUpdateFoodSystem(system(_RegistryUpdateFoodSystemID));
__RegistryUpdateGearSystem = _RegistryUpdateGearSystem(system(_RegistryUpdateGearSystemID));
__RegistryUpdateModSystem = _RegistryUpdateModSystem(system(_RegistryUpdateModSystemID));
__RegistryUpdateReviveSystem = _RegistryUpdateReviveSystem(system(_RegistryUpdateReviveSystemID));
__RegistryUpdateTraitSystem = _RegistryUpdateTraitSystem(system(_RegistryUpdateTraitSystemID));
__RoomCreateSystem = _RoomCreateSystem(system(_RoomCreateSystemID));
_AccountMoveSystem = AccountMoveSystem(system(AccountMoveSystemID));
_AccountSetNameSystem = AccountSetNameSystem(system(AccountSetNameSystemID));
_AccountSetOperatorSystem = AccountSetOperatorSystem(system(AccountSetOperatorSystemID));
_AccountRegisterSystem = AccountRegisterSystem(system(AccountRegisterSystemID));
_ERC20ProxySystem = ERC20ProxySystem(system(ERC20ProxySystemID));
_ERC20WithdrawSystem = ERC20WithdrawSystem(system(ERC20WithdrawSystemID));
_ERC20DepositSystem = ERC20DepositSystem(system(ERC20DepositSystemID));
_ERC721MintSystem = ERC721MintSystem(system(ERC721MintSystemID));
_ERC721MetadataSystem = ERC721MetadataSystem(system(ERC721MetadataSystemID));
_ERC721TransferSystem = ERC721TransferSystem(system(ERC721TransferSystemID));
_ERC721ProxySystem = ERC721ProxySystem(system(ERC721ProxySystemID));
_ERC721WithdrawSystem = ERC721WithdrawSystem(system(ERC721WithdrawSystemID));
_ERC721DepositSystem = ERC721DepositSystem(system(ERC721DepositSystemID));
_ListingBuySystem = ListingBuySystem(system(ListingBuySystemID));
_ListingSellSystem = ListingSellSystem(system(ListingSellSystemID));
_PetFeedSystem = PetFeedSystem(system(PetFeedSystemID));
_PetNameSystem = PetNameSystem(system(PetNameSystemID));
_PetReviveSystem = PetReviveSystem(system(PetReviveSystemID));
_PetSetAccountSystem = PetSetAccountSystem(system(PetSetAccountSystemID));
_ProductionCollectSystem = ProductionCollectSystem(system(ProductionCollectSystemID));
_ProductionLiquidateSystem = ProductionLiquidateSystem(system(ProductionLiquidateSystemID));
_ProductionStartSystem = ProductionStartSystem(system(ProductionStartSystemID));
_ProductionStopSystem = ProductionStopSystem(system(ProductionStopSystemID));

_KamiERC20 = _ERC20ProxySystem.getToken();
_KamiERC721 = _ERC721ProxySystem.getToken();
}
}