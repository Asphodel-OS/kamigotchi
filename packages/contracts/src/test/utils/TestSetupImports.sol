// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;

import "std-contracts/test/MudTest.t.sol";

// Libraries
import { LibAccount } from "libraries/LibAccount.sol";
import { LibCoin } from "libraries/LibCoin.sol";
import { LibConfig } from "libraries/LibConfig.sol";
import { LibDataEntity } from "libraries/LibDataEntity.sol";
import { LibExperience } from "libraries/LibExperience.sol";
import { LibInventory } from "libraries/LibInventory.sol";
import { LibKill } from "libraries/LibKill.sol";
import { LibListing } from "libraries/LibListing.sol";
import { LibLootbox } from "libraries/LibLootbox.sol";
import { LibMint20 } from "libraries/LibMint20.sol";
import { LibNode } from "libraries/LibNode.sol";
import { LibNPC } from "libraries/LibNPC.sol";
import { LibPet721 } from "libraries/LibPet721.sol";
import { LibPet } from "libraries/LibPet.sol";
import { LibProduction } from "libraries/LibProduction.sol";
import { LibPrototype } from "libraries/LibPrototype.sol";
import { LibQuests } from "libraries/LibQuests.sol";
import { LibRandom } from "libraries/LibRandom.sol";
import { LibRegistryAffinity } from "libraries/LibRegistryAffinity.sol";
import { LibRegistryItem } from "libraries/LibRegistryItem.sol";
import { LibRegistryQuests } from "libraries/LibRegistryQuests.sol";
import { LibRegistrySkill } from "libraries/LibRegistrySkill.sol";
import { LibRegistryRelationship } from "libraries/LibRegistryRelationship.sol";
import { LibRegistryTrait } from "libraries/LibRegistryTrait.sol";
import { LibRelationship } from "libraries/LibRelationship.sol";
import { LibRoom } from "libraries/LibRoom.sol";
import { LibScore } from "libraries/LibScore.sol";
import { LibSkill } from "libraries/LibSkill.sol";
import { LibStat } from "libraries/LibStat.sol";

// Components
import { AddressOperatorComponent, ID as AddressOperatorComponentID } from "components/AddressOperatorComponent.sol";
import { AddressOwnerComponent, ID as AddressOwnerComponentID } from "components/AddressOwnerComponent.sol";
import { AffinityComponent, ID as AffinityComponentID } from "components/AffinityComponent.sol";
import { BalanceComponent, ID as BalanceComponentID } from "components/BalanceComponent.sol";
import { BlacklistComponent, ID as BlacklistComponentID } from "components/BlacklistComponent.sol";
import { BlockLastComponent, ID as BlockLastComponentID } from "components/BlockLastComponent.sol";
import { BlockRevealComponent, ID as BlockRevealComponentID } from "components/BlockRevealComponent.sol";
import { CanNameComponent, ID as CanNameComponentID } from "components/CanNameComponent.sol";
import { CoinComponent, ID as CoinComponentID } from "components/CoinComponent.sol";
import { CostComponent, ID as CostComponentID } from "components/CostComponent.sol";
import { DescriptionComponent, ID as DescriptionComponentID } from "components/DescriptionComponent.sol";
import { EpochComponent, ID as EpochComponentID } from "components/EpochComponent.sol";
import { ExitsComponent, ID as ExitsComponentID } from "components/ExitsComponent.sol";
import { ExperienceComponent, ID as ExperienceComponentID } from "components/ExperienceComponent.sol";
import { ForComponent, ID as ForComponentID } from "components/ForComponent.sol";
import { GenusComponent, ID as GenusComponentID } from "components/GenusComponent.sol";
import { HarmonyComponent, ID as HarmonyComponentID } from "components/HarmonyComponent.sol";
import { HealthComponent, ID as HealthComponentID } from "components/HealthComponent.sol";
import { HealthCurrentComponent, ID as HealthCurrentComponentID } from "components/HealthCurrentComponent.sol";
import { IdAccountComponent, ID as IdAccountComponentID } from "components/IdAccountComponent.sol";
import { IdDelegateeComponent, ID as IdDelegateeComponentID } from "components/IdDelegateeComponent.sol";
import { IdDelegatorComponent, ID as IdDelegatorComponentID } from "components/IdDelegatorComponent.sol";
import { IdHolderComponent, ID as IdHolderComponentID } from "components/IdHolderComponent.sol";
import { IdNodeComponent, ID as IdNodeComponentID } from "components/IdNodeComponent.sol";
import { IdPetComponent, ID as IdPetComponentID } from "components/IdPetComponent.sol";
import { IdSourceComponent, ID as IdSourceComponentID } from "components/IdSourceComponent.sol";
import { IdTargetComponent, ID as IdTargetComponentID } from "components/IdTargetComponent.sol";
import { IndexComponent, ID as IndexComponentID } from "components/IndexComponent.sol";
import { IndexBackgroundComponent, ID as IndexBackgroundComponentID } from "components/IndexBackgroundComponent.sol";
import { IndexBodyComponent, ID as IndexBodyComponentID } from "components/IndexBodyComponent.sol";
import { IndexColorComponent, ID as IndexColorComponentID } from "components/IndexColorComponent.sol";
import { IndexFaceComponent, ID as IndexFaceComponentID } from "components/IndexFaceComponent.sol";
import { IndexFoodComponent, ID as IndexFoodComponentID } from "components/IndexFoodComponent.sol";
import { IndexGearComponent, ID as IndexGearComponentID } from "components/IndexGearComponent.sol";
import { IndexHandComponent, ID as IndexHandComponentID } from "components/IndexHandComponent.sol";
import { IndexItemComponent, ID as IndexItemComponentID } from "components/IndexItemComponent.sol";
import { IndexModComponent, ID as IndexModComponentID } from "components/IndexModComponent.sol";
import { IndexNodeComponent, ID as IndexNodeComponentID } from "components/IndexNodeComponent.sol";
import { IndexNPCComponent, ID as IndexNPCComponentID } from "components/IndexNPCComponent.sol";
import { IndexObjectiveComponent, ID as IndexObjectiveComponentID } from "components/IndexObjectiveComponent.sol";
import { IndexPetComponent, ID as IndexPetComponentID } from "components/IndexPetComponent.sol";
import { IndexRelationshipComponent, ID as IndexRelationshipComponentID } from "components/IndexRelationshipComponent.sol";
import { IndexReviveComponent, ID as IndexReviveComponentID } from "components/IndexReviveComponent.sol";
import { IndexQuestComponent, ID as IndexQuestComponentID } from "components/IndexQuestComponent.sol";
import { IndexSkillComponent, ID as IndexSkillComponentID } from "components/IndexSkillComponent.sol";
import { IndexTraitComponent, ID as IndexTraitComponentID } from "components/IndexTraitComponent.sol";
import { IsAccountComponent, ID as IsAccountComponentID } from "components/IsAccountComponent.sol";
import { IsBonusComponent, ID as IsBonusComponentID } from "components/IsBonusComponent.sol";
import { IsConfigComponent, ID as IsConfigComponentID } from "components/IsConfigComponent.sol";
import { IsCompleteComponent, ID as IsCompleteComponentID } from "components/IsCompleteComponent.sol";
import { IsDataComponent, ID as IsDataComponentID } from "components/IsDataComponent.sol";
import { IsEffectComponent, ID as IsEffectComponentID } from "components/IsEffectComponent.sol";
import { IsEquippedComponent, ID as IsEquippedComponentID } from "components/IsEquippedComponent.sol";
import { IsFungibleComponent, ID as IsFungibleComponentID } from "components/IsFungibleComponent.sol";
import { IsInventoryComponent, ID as IsInventoryComponentID } from "components/IsInventoryComponent.sol";
import { IsKillComponent, ID as IsKillComponentID } from "components/IsKillComponent.sol";
import { IsListingComponent, ID as IsListingComponentID } from "components/IsListingComponent.sol";
import { IsLootboxComponent, ID as IsLootboxComponentID } from "components/IsLootboxComponent.sol";
import { IsNodeComponent, ID as IsNodeComponentID } from "components/IsNodeComponent.sol";
import { IsNonFungibleComponent, ID as IsNonFungibleComponentID } from "components/IsNonFungibleComponent.sol";
import { IsNPCComponent, ID as IsNPCComponentID } from "components/IsNPCComponent.sol";
import { IsPetComponent, ID as IsPetComponentID } from "components/IsPetComponent.sol";
import { IsProductionComponent, ID as IsProductionComponentID } from "components/IsProductionComponent.sol";
import { IsRegistryComponent, ID as IsRegistryComponentID } from "components/IsRegistryComponent.sol";
import { IsRelationshipComponent, ID as IsRelationshipComponentID } from "components/IsRelationshipComponent.sol";
import { IsRepeatableComponent, ID as IsRepeatableComponentID } from "components/IsRepeatableComponent.sol";
import { IsRequirementComponent, ID as IsRequirementComponentID } from "components/IsRequirementComponent.sol";
import { IsRewardComponent, ID as IsRewardComponentID } from "components/IsRewardComponent.sol";
import { IsRoomComponent, ID as IsRoomComponentID } from "components/IsRoomComponent.sol";
import { IsObjectiveComponent, ID as IsObjectiveComponentID } from "components/IsObjectiveComponent.sol";
import { IsQuestComponent, ID as IsQuestComponentID } from "components/IsQuestComponent.sol";
import { IsScoreComponent, ID as IsScoreComponentID } from "components/IsScoreComponent.sol";
import { IsSkillComponent, ID as IsSkillComponentID } from "components/IsSkillComponent.sol";
import { IsTraitComponent, ID as IsTraitComponentID } from "components/IsTraitComponent.sol";
import { KeysComponent, ID as KeysComponentID } from "components/KeysComponent.sol";
import { LevelComponent, ID as LevelComponentID } from "components/LevelComponent.sol";
import { LocationComponent, ID as LocationComponentID } from "components/LocationComponent.sol";
import { LogicTypeComponent, ID as LogicTypeComponentID } from "components/LogicTypeComponent.sol";
import { MaxComponent, ID as MaxComponentID } from "components/MaxComponent.sol";
import { MediaURIComponent, ID as MediaURIComponentID } from "components/MediaURIComponent.sol";
import { NameComponent, ID as NameComponentID } from "components/NameComponent.sol";
import { PowerComponent, ID as PowerComponentID } from "components/PowerComponent.sol";
import { PriceBuyComponent, ID as PriceBuyComponentID } from "components/PriceBuyComponent.sol";
import { PriceSellComponent, ID as PriceSellComponentID } from "components/PriceSellComponent.sol";
import { PrototypeComponent, ID as PrototypeComponentID } from "components/PrototypeComponent.sol";
import { ProxyPermissionsFarm20Component, ID as ProxyPermissionsFarm20ComponentID } from "components/ProxyPermissionsFarm20Component.sol";
import { ProxyPermissionsERC721Component, ID as ProxyPermissionsERC721ComponentID } from "components/ProxyPermissionsERC721Component.sol";
import { ProxyPermissionsMint20Component, ID as ProxyPermissionsMint20ComponentID } from "components/ProxyPermissionsMint20Component.sol";
import { RarityComponent, ID as RarityComponentID } from "components/RarityComponent.sol";
import { RateComponent, ID as RateComponentID } from "components/RateComponent.sol";
import { SkillPointComponent, ID as SkillPointComponentID } from "components/SkillPointComponent.sol";
import { SlotsComponent, ID as SlotsComponentID } from "components/SlotsComponent.sol";
import { StaminaComponent, ID as StaminaComponentID } from "components/StaminaComponent.sol";
import { StaminaCurrentComponent, ID as StaminaCurrentComponentID } from "components/StaminaCurrentComponent.sol";
import { StateComponent, ID as StateComponentID } from "components/StateComponent.sol";
import { SubtypeComponent, ID as SubtypeComponentID } from "components/SubtypeComponent.sol";
import { TimeComponent, ID as TimeComponentID } from "components/TimeComponent.sol";
import { TimeLastActionComponent, ID as TimeLastActionComponentID } from "components/TimeLastActionComponent.sol";
import { TimeStartComponent, ID as TimeStartComponentID } from "components/TimeStartComponent.sol";
import { TypeComponent, ID as TypeComponentID } from "components/TypeComponent.sol";
import { UpgradesComponent, ID as UpgradesComponentID } from "components/UpgradesComponent.sol";
import { ValueComponent, ID as ValueComponentID } from "components/ValueComponent.sol";
import { ViolenceComponent, ID as ViolenceComponentID } from "components/ViolenceComponent.sol";
import { WeightsComponent, ID as WeightsComponentID } from "components/WeightsComponent.sol";
import { WhitelistComponent, ID as WhitelistComponentID } from "components/WhitelistComponent.sol";

// Systems
import { _devGiveTokensSystem, ID as _devGiveTokensSystemID } from "systems/_devGiveTokensSystem.sol";
import { _ConfigSetSystem, ID as _ConfigSetSystemID } from "systems/_ConfigSetSystem.sol";
import { _ConfigSetStringSystem, ID as _ConfigSetStringSystemID } from "systems/_ConfigSetStringSystem.sol";
import { _ListingSetSystem, ID as _ListingSetSystemID } from "systems/_ListingSetSystem.sol";
import { _NodeCreateSystem, ID as _NodeCreateSystemID } from "systems/_NodeCreateSystem.sol";
import { _NodeSetAffinitySystem, ID as _NodeSetAffinitySystemID } from "systems/_NodeSetAffinitySystem.sol";
import { _NodeSetDescriptionSystem, ID as _NodeSetDescriptionSystemID } from "systems/_NodeSetDescriptionSystem.sol";
import { _NodeSetLocationSystem, ID as _NodeSetLocationSystemID } from "systems/_NodeSetLocationSystem.sol";
import { _NodeSetNameSystem, ID as _NodeSetNameSystemID } from "systems/_NodeSetNameSystem.sol";
import { _NPCCreateSystem, ID as _NPCCreateSystemID } from "systems/_NPCCreateSystem.sol";
import { _NPCSetLocationSystem, ID as _NPCSetLocationSystemID } from "systems/_NPCSetLocationSystem.sol";
import { _NPCSetNameSystem, ID as _NPCSetNameSystemID } from "systems/_NPCSetNameSystem.sol";
import { _RegistryCreateFoodSystem, ID as _RegistryCreateFoodSystemID } from "systems/_RegistryCreateFoodSystem.sol";
import { _RegistryCreateGearSystem, ID as _RegistryCreateGearSystemID } from "systems/_RegistryCreateGearSystem.sol";
import { _RegistryCreateLootboxSystem, ID as _RegistryCreateLootboxSystemID } from "systems/_RegistryCreateLootboxSystem.sol";
import { _RegistryCreateModSystem, ID as _RegistryCreateModSystemID } from "systems/_RegistryCreateModSystem.sol";
import { _RegistryCreateQuestSystem, ID as _RegistryCreateQuestSystemID } from "systems/_RegistryCreateQuestSystem.sol";
import { _RegistryCreateQuestObjectiveSystem, ID as _RegistryCreateQuestObjectiveSystemID } from "systems/_RegistryCreateQuestObjectiveSystem.sol";
import { _RegistryCreateQuestRequirementSystem, ID as _RegistryCreateQuestRequirementSystemID } from "systems/_RegistryCreateQuestRequirementSystem.sol";
import { _RegistryCreateQuestRewardSystem, ID as _RegistryCreateQuestRewardSystemID } from "systems/_RegistryCreateQuestRewardSystem.sol";
import { _RegistryCreateRelationshipSystem, ID as _RegistryCreateRelationshipSystemID } from "systems/_RegistryCreateRelationshipSystem.sol";
import { _RegistryCreateReviveSystem, ID as _RegistryCreateReviveSystemID } from "systems/_RegistryCreateReviveSystem.sol";
import { _RegistryCreateSkillSystem, ID as _RegistryCreateSkillSystemID } from "systems/_RegistryCreateSkillSystem.sol";
import { _RegistryCreateSkillEffectSystem, ID as _RegistryCreateSkillEffectSystemID } from "systems/_RegistryCreateSkillEffectSystem.sol";
import { _RegistryCreateSkillRequirementSystem, ID as _RegistryCreateSkillRequirementSystemID } from "systems/_RegistryCreateSkillRequirementSystem.sol";
import { _RegistryCreateTraitSystem, ID as _RegistryCreateTraitSystemID } from "systems/_RegistryCreateTraitSystem.sol";
import { _RegistryDeleteItemSystem, ID as _RegistryDeleteItemSystemID } from "systems/_RegistryDeleteItemSystem.sol";
import { _RegistryDeleteQuestSystem, ID as _RegistryDeleteQuestSystemID } from "systems/_RegistryDeleteQuestSystem.sol";
import { _RegistryDeleteSkillSystem, ID as _RegistryDeleteSkillSystemID } from "systems/_RegistryDeleteSkillSystem.sol";
import { _RegistryUpdateRelationshipSystem, ID as _RegistryUpdateRelationshipSystemID } from "systems/_RegistryUpdateRelationshipSystem.sol";
import { _RegistryUpdateTraitSystem, ID as _RegistryUpdateTraitSystemID } from "systems/_RegistryUpdateTraitSystem.sol";
import { _RoomCreateSystem, ID as _RoomCreateSystemID } from "systems/_RoomCreateSystem.sol";
import { _RoomSetDescriptionSystem, ID as _RoomSetDescriptionSystemID } from "systems/_RoomSetDescriptionSystem.sol";
import { _RoomSetExitsSystem, ID as _RoomSetExitsSystemID } from "systems/_RoomSetExitsSystem.sol";
import { _RoomSetNameSystem, ID as _RoomSetNameSystemID } from "systems/_RoomSetNameSystem.sol";
import { AccountFundSystem, ID as AccountFundSystemID } from "systems/AccountFundSystem.sol";
import { AccountMoveSystem, ID as AccountMoveSystemID } from "systems/AccountMoveSystem.sol";
import { AccountSetNameSystem, ID as AccountSetNameSystemID } from "systems/AccountSetNameSystem.sol";
import { AccountSetOperatorSystem, ID as AccountSetOperatorSystemID } from "systems/AccountSetOperatorSystem.sol";
import { AccountRegisterSystem, ID as AccountRegisterSystemID } from "systems/AccountRegisterSystem.sol";
import { Farm20ProxySystem, ID as Farm20ProxySystemID } from "systems/Farm20ProxySystem.sol";
import { Farm20DepositSystem, ID as Farm20DepositSystemID } from "systems/Farm20DepositSystem.sol";
import { Farm20WithdrawSystem, ID as Farm20WithdrawSystemID } from "systems/Farm20WithdrawSystem.sol";
import { ListingBuySystem, ID as ListingBuySystemID } from "systems/ListingBuySystem.sol";
import { ListingSellSystem, ID as ListingSellSystemID } from "systems/ListingSellSystem.sol";
import { LootboxExecuteRevealSystem, ID as LootboxExecuteRevealSystemID } from "systems/LootboxExecuteRevealSystem.sol";
import { LootboxStartRevealSystem, ID as LootboxStartRevealSystemID } from "systems/LootboxStartRevealSystem.sol";
import { Mint20ProxySystem, ID as Mint20ProxySystemID } from "systems/Mint20ProxySystem.sol";
import { Mint20MintSystem, ID as Mint20MintSystemID } from "systems/Mint20MintSystem.sol";
import { NodeCollectSystem, ID as NodeCollectSystemID } from "systems/NodeCollectSystem.sol";
import { Pet721MetadataSystem, ID as Pet721MetadataSystemID } from "systems/Pet721MetadataSystem.sol";
import { Pet721MintSystem, ID as Pet721MintSystemID } from "systems/Pet721MintSystem.sol";
import { Pet721RevealSystem, ID as Pet721RevealSystemID } from "systems/Pet721RevealSystem.sol";
import { Pet721TransferSystem, ID as Pet721TransferSystemID } from "systems/Pet721TransferSystem.sol";
import { Pet721ProxySystem, ID as Pet721ProxySystemID } from "systems/Pet721ProxySystem.sol";
import { Pet721UnstakeSystem, ID as Pet721UnstakeSystemID } from "systems/Pet721UnstakeSystem.sol";
import { Pet721StakeSystem, ID as Pet721StakeSystemID } from "systems/Pet721StakeSystem.sol";
import { PetFeedSystem, ID as PetFeedSystemID } from "systems/PetFeedSystem.sol";
import { PetLevelSystem, ID as PetLevelSystemID } from "systems/PetLevelSystem.sol";
import { PetNameSystem, ID as PetNameSystemID } from "systems/PetNameSystem.sol";
import { PetReviveSystem, ID as PetReviveSystemID } from "systems/PetReviveSystem.sol";
import { PetSetAccountSystem, ID as PetSetAccountSystemID } from "systems/PetSetAccountSystem.sol";
import { ProductionCollectSystem, ID as ProductionCollectSystemID } from "systems/ProductionCollectSystem.sol";
import { ProductionLiquidateSystem, ID as ProductionLiquidateSystemID } from "systems/ProductionLiquidateSystem.sol";
import { ProductionStartSystem, ID as ProductionStartSystemID } from "systems/ProductionStartSystem.sol";
import { ProductionStopSystem, ID as ProductionStopSystemID } from "systems/ProductionStopSystem.sol";
import { QuestAcceptSystem, ID as QuestAcceptSystemID } from "systems/QuestAcceptSystem.sol";
import { QuestCompleteSystem, ID as QuestCompleteSystemID } from "systems/QuestCompleteSystem.sol";
import { QuestDropSystem, ID as QuestDropSystemID } from "systems/QuestDropSystem.sol";
import { RelationshipAdvanceSystem, ID as RelationshipAdvanceSystemID } from "systems/RelationshipAdvanceSystem.sol";
import { SkillUpgradeSystem, ID as SkillUpgradeSystemID } from "systems/SkillUpgradeSystem.sol";

// Tokens
import { Farm20 } from "tokens/Farm20.sol";
import { Mint20 } from "tokens/Mint20.sol";
import { Pet721 } from "tokens/Pet721.sol";

abstract contract TestSetupImports is MudTest {
// Components vars
AddressOperatorComponent _AddressOperatorComponent;
AddressOwnerComponent _AddressOwnerComponent;
AffinityComponent _AffinityComponent;
BalanceComponent _BalanceComponent;
BlacklistComponent _BlacklistComponent;
BlockLastComponent _BlockLastComponent;
BlockRevealComponent _BlockRevealComponent;
CanNameComponent _CanNameComponent;
CoinComponent _CoinComponent;
CostComponent _CostComponent;
DescriptionComponent _DescriptionComponent;
EpochComponent _EpochComponent;
ExitsComponent _ExitsComponent;
ExperienceComponent _ExperienceComponent;
ForComponent _ForComponent;
GenusComponent _GenusComponent;
HarmonyComponent _HarmonyComponent;
HealthComponent _HealthComponent;
HealthCurrentComponent _HealthCurrentComponent;
IdAccountComponent _IdAccountComponent;
IdDelegateeComponent _IdDelegateeComponent;
IdDelegatorComponent _IdDelegatorComponent;
IdHolderComponent _IdHolderComponent;
IdNodeComponent _IdNodeComponent;
IdPetComponent _IdPetComponent;
IdSourceComponent _IdSourceComponent;
IdTargetComponent _IdTargetComponent;
IndexComponent _IndexComponent;
IndexBackgroundComponent _IndexBackgroundComponent;
IndexBodyComponent _IndexBodyComponent;
IndexColorComponent _IndexColorComponent;
IndexFaceComponent _IndexFaceComponent;
IndexFoodComponent _IndexFoodComponent;
IndexGearComponent _IndexGearComponent;
IndexHandComponent _IndexHandComponent;
IndexItemComponent _IndexItemComponent;
IndexModComponent _IndexModComponent;
IndexNodeComponent _IndexNodeComponent;
IndexNPCComponent _IndexNPCComponent;
IndexObjectiveComponent _IndexObjectiveComponent;
IndexPetComponent _IndexPetComponent;
IndexRelationshipComponent _IndexRelationshipComponent;
IndexReviveComponent _IndexReviveComponent;
IndexQuestComponent _IndexQuestComponent;
IndexSkillComponent _IndexSkillComponent;
IndexTraitComponent _IndexTraitComponent;
IsAccountComponent _IsAccountComponent;
IsBonusComponent _IsBonusComponent;
IsConfigComponent _IsConfigComponent;
IsCompleteComponent _IsCompleteComponent;
IsDataComponent _IsDataComponent;
IsEffectComponent _IsEffectComponent;
IsEquippedComponent _IsEquippedComponent;
IsFungibleComponent _IsFungibleComponent;
IsInventoryComponent _IsInventoryComponent;
IsKillComponent _IsKillComponent;
IsListingComponent _IsListingComponent;
IsLootboxComponent _IsLootboxComponent;
IsNodeComponent _IsNodeComponent;
IsNonFungibleComponent _IsNonFungibleComponent;
IsNPCComponent _IsNPCComponent;
IsPetComponent _IsPetComponent;
IsProductionComponent _IsProductionComponent;
IsRegistryComponent _IsRegistryComponent;
IsRelationshipComponent _IsRelationshipComponent;
IsRepeatableComponent _IsRepeatableComponent;
IsRequirementComponent _IsRequirementComponent;
IsRewardComponent _IsRewardComponent;
IsRoomComponent _IsRoomComponent;
IsObjectiveComponent _IsObjectiveComponent;
IsQuestComponent _IsQuestComponent;
IsScoreComponent _IsScoreComponent;
IsSkillComponent _IsSkillComponent;
IsTraitComponent _IsTraitComponent;
KeysComponent _KeysComponent;
LevelComponent _LevelComponent;
LocationComponent _LocationComponent;
LogicTypeComponent _LogicTypeComponent;
MaxComponent _MaxComponent;
MediaURIComponent _MediaURIComponent;
NameComponent _NameComponent;
PowerComponent _PowerComponent;
PriceBuyComponent _PriceBuyComponent;
PriceSellComponent _PriceSellComponent;
PrototypeComponent _PrototypeComponent;
ProxyPermissionsFarm20Component _ProxyPermissionsFarm20Component;
ProxyPermissionsERC721Component _ProxyPermissionsERC721Component;
ProxyPermissionsMint20Component _ProxyPermissionsMint20Component;
RarityComponent _RarityComponent;
RateComponent _RateComponent;
SkillPointComponent _SkillPointComponent;
SlotsComponent _SlotsComponent;
StaminaComponent _StaminaComponent;
StaminaCurrentComponent _StaminaCurrentComponent;
StateComponent _StateComponent;
SubtypeComponent _SubtypeComponent;
TimeComponent _TimeComponent;
TimeLastActionComponent _TimeLastActionComponent;
TimeStartComponent _TimeStartComponent;
TypeComponent _TypeComponent;
UpgradesComponent _UpgradesComponent;
ValueComponent _ValueComponent;
ViolenceComponent _ViolenceComponent;
WeightsComponent _WeightsComponent;
WhitelistComponent _WhitelistComponent;

// System vars
_devGiveTokensSystem __devGiveTokensSystem;
_ConfigSetSystem __ConfigSetSystem;
_ConfigSetStringSystem __ConfigSetStringSystem;
_ListingSetSystem __ListingSetSystem;
_NodeCreateSystem __NodeCreateSystem;
_NodeSetAffinitySystem __NodeSetAffinitySystem;
_NodeSetDescriptionSystem __NodeSetDescriptionSystem;
_NodeSetLocationSystem __NodeSetLocationSystem;
_NodeSetNameSystem __NodeSetNameSystem;
_NPCCreateSystem __NPCCreateSystem;
_NPCSetLocationSystem __NPCSetLocationSystem;
_NPCSetNameSystem __NPCSetNameSystem;
_RegistryCreateFoodSystem __RegistryCreateFoodSystem;
_RegistryCreateGearSystem __RegistryCreateGearSystem;
_RegistryCreateLootboxSystem __RegistryCreateLootboxSystem;
_RegistryCreateModSystem __RegistryCreateModSystem;
_RegistryCreateQuestSystem __RegistryCreateQuestSystem;
_RegistryCreateQuestObjectiveSystem __RegistryCreateQuestObjectiveSystem;
_RegistryCreateQuestRequirementSystem __RegistryCreateQuestRequirementSystem;
_RegistryCreateQuestRewardSystem __RegistryCreateQuestRewardSystem;
_RegistryCreateRelationshipSystem __RegistryCreateRelationshipSystem;
_RegistryCreateReviveSystem __RegistryCreateReviveSystem;
_RegistryCreateSkillSystem __RegistryCreateSkillSystem;
_RegistryCreateSkillEffectSystem __RegistryCreateSkillEffectSystem;
_RegistryCreateSkillRequirementSystem __RegistryCreateSkillRequirementSystem;
_RegistryCreateTraitSystem __RegistryCreateTraitSystem;
_RegistryDeleteItemSystem __RegistryDeleteItemSystem;
_RegistryDeleteQuestSystem __RegistryDeleteQuestSystem;
_RegistryDeleteSkillSystem __RegistryDeleteSkillSystem;
_RegistryUpdateRelationshipSystem __RegistryUpdateRelationshipSystem;
_RegistryUpdateTraitSystem __RegistryUpdateTraitSystem;
_RoomCreateSystem __RoomCreateSystem;
_RoomSetDescriptionSystem __RoomSetDescriptionSystem;
_RoomSetExitsSystem __RoomSetExitsSystem;
_RoomSetNameSystem __RoomSetNameSystem;
AccountFundSystem _AccountFundSystem;
AccountMoveSystem _AccountMoveSystem;
AccountSetNameSystem _AccountSetNameSystem;
AccountSetOperatorSystem _AccountSetOperatorSystem;
AccountRegisterSystem _AccountRegisterSystem;
Farm20ProxySystem _Farm20ProxySystem;
Farm20DepositSystem _Farm20DepositSystem;
Farm20WithdrawSystem _Farm20WithdrawSystem;
ListingBuySystem _ListingBuySystem;
ListingSellSystem _ListingSellSystem;
LootboxExecuteRevealSystem _LootboxExecuteRevealSystem;
LootboxStartRevealSystem _LootboxStartRevealSystem;
Mint20ProxySystem _Mint20ProxySystem;
Mint20MintSystem _Mint20MintSystem;
NodeCollectSystem _NodeCollectSystem;
Pet721MetadataSystem _Pet721MetadataSystem;
Pet721MintSystem _Pet721MintSystem;
Pet721RevealSystem _Pet721RevealSystem;
Pet721TransferSystem _Pet721TransferSystem;
Pet721ProxySystem _Pet721ProxySystem;
Pet721UnstakeSystem _Pet721UnstakeSystem;
Pet721StakeSystem _Pet721StakeSystem;
PetFeedSystem _PetFeedSystem;
PetLevelSystem _PetLevelSystem;
PetNameSystem _PetNameSystem;
PetReviveSystem _PetReviveSystem;
PetSetAccountSystem _PetSetAccountSystem;
ProductionCollectSystem _ProductionCollectSystem;
ProductionLiquidateSystem _ProductionLiquidateSystem;
ProductionStartSystem _ProductionStartSystem;
ProductionStopSystem _ProductionStopSystem;
QuestAcceptSystem _QuestAcceptSystem;
QuestCompleteSystem _QuestCompleteSystem;
QuestDropSystem _QuestDropSystem;
RelationshipAdvanceSystem _RelationshipAdvanceSystem;
SkillUpgradeSystem _SkillUpgradeSystem;

// Token vars
Farm20 _Farm20;
Mint20 _Mint20;
Pet721 _Pet721;

function setUp() public virtual override {
super.setUp();

_AddressOperatorComponent = AddressOperatorComponent(component(AddressOperatorComponentID));
_AddressOwnerComponent = AddressOwnerComponent(component(AddressOwnerComponentID));
_AffinityComponent = AffinityComponent(component(AffinityComponentID));
_BalanceComponent = BalanceComponent(component(BalanceComponentID));
_BlacklistComponent = BlacklistComponent(component(BlacklistComponentID));
_BlockLastComponent = BlockLastComponent(component(BlockLastComponentID));
_BlockRevealComponent = BlockRevealComponent(component(BlockRevealComponentID));
_CanNameComponent = CanNameComponent(component(CanNameComponentID));
_CoinComponent = CoinComponent(component(CoinComponentID));
_CostComponent = CostComponent(component(CostComponentID));
_DescriptionComponent = DescriptionComponent(component(DescriptionComponentID));
_EpochComponent = EpochComponent(component(EpochComponentID));
_ExitsComponent = ExitsComponent(component(ExitsComponentID));
_ExperienceComponent = ExperienceComponent(component(ExperienceComponentID));
_ForComponent = ForComponent(component(ForComponentID));
_GenusComponent = GenusComponent(component(GenusComponentID));
_HarmonyComponent = HarmonyComponent(component(HarmonyComponentID));
_HealthComponent = HealthComponent(component(HealthComponentID));
_HealthCurrentComponent = HealthCurrentComponent(component(HealthCurrentComponentID));
_IdAccountComponent = IdAccountComponent(component(IdAccountComponentID));
_IdDelegateeComponent = IdDelegateeComponent(component(IdDelegateeComponentID));
_IdDelegatorComponent = IdDelegatorComponent(component(IdDelegatorComponentID));
_IdHolderComponent = IdHolderComponent(component(IdHolderComponentID));
_IdNodeComponent = IdNodeComponent(component(IdNodeComponentID));
_IdPetComponent = IdPetComponent(component(IdPetComponentID));
_IdSourceComponent = IdSourceComponent(component(IdSourceComponentID));
_IdTargetComponent = IdTargetComponent(component(IdTargetComponentID));
_IndexComponent = IndexComponent(component(IndexComponentID));
_IndexBackgroundComponent = IndexBackgroundComponent(component(IndexBackgroundComponentID));
_IndexBodyComponent = IndexBodyComponent(component(IndexBodyComponentID));
_IndexColorComponent = IndexColorComponent(component(IndexColorComponentID));
_IndexFaceComponent = IndexFaceComponent(component(IndexFaceComponentID));
_IndexFoodComponent = IndexFoodComponent(component(IndexFoodComponentID));
_IndexGearComponent = IndexGearComponent(component(IndexGearComponentID));
_IndexHandComponent = IndexHandComponent(component(IndexHandComponentID));
_IndexItemComponent = IndexItemComponent(component(IndexItemComponentID));
_IndexModComponent = IndexModComponent(component(IndexModComponentID));
_IndexNodeComponent = IndexNodeComponent(component(IndexNodeComponentID));
_IndexNPCComponent = IndexNPCComponent(component(IndexNPCComponentID));
_IndexObjectiveComponent = IndexObjectiveComponent(component(IndexObjectiveComponentID));
_IndexPetComponent = IndexPetComponent(component(IndexPetComponentID));
_IndexRelationshipComponent = IndexRelationshipComponent(component(IndexRelationshipComponentID));
_IndexReviveComponent = IndexReviveComponent(component(IndexReviveComponentID));
_IndexQuestComponent = IndexQuestComponent(component(IndexQuestComponentID));
_IndexSkillComponent = IndexSkillComponent(component(IndexSkillComponentID));
_IndexTraitComponent = IndexTraitComponent(component(IndexTraitComponentID));
_IsAccountComponent = IsAccountComponent(component(IsAccountComponentID));
_IsBonusComponent = IsBonusComponent(component(IsBonusComponentID));
_IsConfigComponent = IsConfigComponent(component(IsConfigComponentID));
_IsCompleteComponent = IsCompleteComponent(component(IsCompleteComponentID));
_IsDataComponent = IsDataComponent(component(IsDataComponentID));
_IsEffectComponent = IsEffectComponent(component(IsEffectComponentID));
_IsEquippedComponent = IsEquippedComponent(component(IsEquippedComponentID));
_IsFungibleComponent = IsFungibleComponent(component(IsFungibleComponentID));
_IsInventoryComponent = IsInventoryComponent(component(IsInventoryComponentID));
_IsKillComponent = IsKillComponent(component(IsKillComponentID));
_IsListingComponent = IsListingComponent(component(IsListingComponentID));
_IsLootboxComponent = IsLootboxComponent(component(IsLootboxComponentID));
_IsNodeComponent = IsNodeComponent(component(IsNodeComponentID));
_IsNonFungibleComponent = IsNonFungibleComponent(component(IsNonFungibleComponentID));
_IsNPCComponent = IsNPCComponent(component(IsNPCComponentID));
_IsPetComponent = IsPetComponent(component(IsPetComponentID));
_IsProductionComponent = IsProductionComponent(component(IsProductionComponentID));
_IsRegistryComponent = IsRegistryComponent(component(IsRegistryComponentID));
_IsRelationshipComponent = IsRelationshipComponent(component(IsRelationshipComponentID));
_IsRepeatableComponent = IsRepeatableComponent(component(IsRepeatableComponentID));
_IsRequirementComponent = IsRequirementComponent(component(IsRequirementComponentID));
_IsRewardComponent = IsRewardComponent(component(IsRewardComponentID));
_IsRoomComponent = IsRoomComponent(component(IsRoomComponentID));
_IsObjectiveComponent = IsObjectiveComponent(component(IsObjectiveComponentID));
_IsQuestComponent = IsQuestComponent(component(IsQuestComponentID));
_IsScoreComponent = IsScoreComponent(component(IsScoreComponentID));
_IsSkillComponent = IsSkillComponent(component(IsSkillComponentID));
_IsTraitComponent = IsTraitComponent(component(IsTraitComponentID));
_KeysComponent = KeysComponent(component(KeysComponentID));
_LevelComponent = LevelComponent(component(LevelComponentID));
_LocationComponent = LocationComponent(component(LocationComponentID));
_LogicTypeComponent = LogicTypeComponent(component(LogicTypeComponentID));
_MaxComponent = MaxComponent(component(MaxComponentID));
_MediaURIComponent = MediaURIComponent(component(MediaURIComponentID));
_NameComponent = NameComponent(component(NameComponentID));
_PowerComponent = PowerComponent(component(PowerComponentID));
_PriceBuyComponent = PriceBuyComponent(component(PriceBuyComponentID));
_PriceSellComponent = PriceSellComponent(component(PriceSellComponentID));
_PrototypeComponent = PrototypeComponent(component(PrototypeComponentID));
_ProxyPermissionsFarm20Component = ProxyPermissionsFarm20Component(component(ProxyPermissionsFarm20ComponentID));
_ProxyPermissionsERC721Component = ProxyPermissionsERC721Component(component(ProxyPermissionsERC721ComponentID));
_ProxyPermissionsMint20Component = ProxyPermissionsMint20Component(component(ProxyPermissionsMint20ComponentID));
_RarityComponent = RarityComponent(component(RarityComponentID));
_RateComponent = RateComponent(component(RateComponentID));
_SkillPointComponent = SkillPointComponent(component(SkillPointComponentID));
_SlotsComponent = SlotsComponent(component(SlotsComponentID));
_StaminaComponent = StaminaComponent(component(StaminaComponentID));
_StaminaCurrentComponent = StaminaCurrentComponent(component(StaminaCurrentComponentID));
_StateComponent = StateComponent(component(StateComponentID));
_SubtypeComponent = SubtypeComponent(component(SubtypeComponentID));
_TimeComponent = TimeComponent(component(TimeComponentID));
_TimeLastActionComponent = TimeLastActionComponent(component(TimeLastActionComponentID));
_TimeStartComponent = TimeStartComponent(component(TimeStartComponentID));
_TypeComponent = TypeComponent(component(TypeComponentID));
_UpgradesComponent = UpgradesComponent(component(UpgradesComponentID));
_ValueComponent = ValueComponent(component(ValueComponentID));
_ViolenceComponent = ViolenceComponent(component(ViolenceComponentID));
_WeightsComponent = WeightsComponent(component(WeightsComponentID));
_WhitelistComponent = WhitelistComponent(component(WhitelistComponentID));

__devGiveTokensSystem = _devGiveTokensSystem(system(_devGiveTokensSystemID));
__ConfigSetSystem = _ConfigSetSystem(system(_ConfigSetSystemID));
__ConfigSetStringSystem = _ConfigSetStringSystem(system(_ConfigSetStringSystemID));
__ListingSetSystem = _ListingSetSystem(system(_ListingSetSystemID));
__NodeCreateSystem = _NodeCreateSystem(system(_NodeCreateSystemID));
__NodeSetAffinitySystem = _NodeSetAffinitySystem(system(_NodeSetAffinitySystemID));
__NodeSetDescriptionSystem = _NodeSetDescriptionSystem(system(_NodeSetDescriptionSystemID));
__NodeSetLocationSystem = _NodeSetLocationSystem(system(_NodeSetLocationSystemID));
__NodeSetNameSystem = _NodeSetNameSystem(system(_NodeSetNameSystemID));
__NPCCreateSystem = _NPCCreateSystem(system(_NPCCreateSystemID));
__NPCSetLocationSystem = _NPCSetLocationSystem(system(_NPCSetLocationSystemID));
__NPCSetNameSystem = _NPCSetNameSystem(system(_NPCSetNameSystemID));
__RegistryCreateFoodSystem = _RegistryCreateFoodSystem(system(_RegistryCreateFoodSystemID));
__RegistryCreateGearSystem = _RegistryCreateGearSystem(system(_RegistryCreateGearSystemID));
__RegistryCreateLootboxSystem = _RegistryCreateLootboxSystem(system(_RegistryCreateLootboxSystemID));
__RegistryCreateModSystem = _RegistryCreateModSystem(system(_RegistryCreateModSystemID));
__RegistryCreateQuestSystem = _RegistryCreateQuestSystem(system(_RegistryCreateQuestSystemID));
__RegistryCreateQuestObjectiveSystem = _RegistryCreateQuestObjectiveSystem(system(_RegistryCreateQuestObjectiveSystemID));
__RegistryCreateQuestRequirementSystem = _RegistryCreateQuestRequirementSystem(system(_RegistryCreateQuestRequirementSystemID));
__RegistryCreateQuestRewardSystem = _RegistryCreateQuestRewardSystem(system(_RegistryCreateQuestRewardSystemID));
__RegistryCreateRelationshipSystem = _RegistryCreateRelationshipSystem(system(_RegistryCreateRelationshipSystemID));
__RegistryCreateReviveSystem = _RegistryCreateReviveSystem(system(_RegistryCreateReviveSystemID));
__RegistryCreateSkillSystem = _RegistryCreateSkillSystem(system(_RegistryCreateSkillSystemID));
__RegistryCreateSkillEffectSystem = _RegistryCreateSkillEffectSystem(system(_RegistryCreateSkillEffectSystemID));
__RegistryCreateSkillRequirementSystem = _RegistryCreateSkillRequirementSystem(system(_RegistryCreateSkillRequirementSystemID));
__RegistryCreateTraitSystem = _RegistryCreateTraitSystem(system(_RegistryCreateTraitSystemID));
__RegistryDeleteItemSystem = _RegistryDeleteItemSystem(system(_RegistryDeleteItemSystemID));
__RegistryDeleteQuestSystem = _RegistryDeleteQuestSystem(system(_RegistryDeleteQuestSystemID));
__RegistryDeleteSkillSystem = _RegistryDeleteSkillSystem(system(_RegistryDeleteSkillSystemID));
__RegistryUpdateRelationshipSystem = _RegistryUpdateRelationshipSystem(system(_RegistryUpdateRelationshipSystemID));
__RegistryUpdateTraitSystem = _RegistryUpdateTraitSystem(system(_RegistryUpdateTraitSystemID));
__RoomCreateSystem = _RoomCreateSystem(system(_RoomCreateSystemID));
__RoomSetDescriptionSystem = _RoomSetDescriptionSystem(system(_RoomSetDescriptionSystemID));
__RoomSetExitsSystem = _RoomSetExitsSystem(system(_RoomSetExitsSystemID));
__RoomSetNameSystem = _RoomSetNameSystem(system(_RoomSetNameSystemID));
_AccountFundSystem = AccountFundSystem(system(AccountFundSystemID));
_AccountMoveSystem = AccountMoveSystem(system(AccountMoveSystemID));
_AccountSetNameSystem = AccountSetNameSystem(system(AccountSetNameSystemID));
_AccountSetOperatorSystem = AccountSetOperatorSystem(system(AccountSetOperatorSystemID));
_AccountRegisterSystem = AccountRegisterSystem(system(AccountRegisterSystemID));
_Farm20ProxySystem = Farm20ProxySystem(system(Farm20ProxySystemID));
_Farm20DepositSystem = Farm20DepositSystem(system(Farm20DepositSystemID));
_Farm20WithdrawSystem = Farm20WithdrawSystem(system(Farm20WithdrawSystemID));
_ListingBuySystem = ListingBuySystem(system(ListingBuySystemID));
_ListingSellSystem = ListingSellSystem(system(ListingSellSystemID));
_LootboxExecuteRevealSystem = LootboxExecuteRevealSystem(system(LootboxExecuteRevealSystemID));
_LootboxStartRevealSystem = LootboxStartRevealSystem(system(LootboxStartRevealSystemID));
_Mint20ProxySystem = Mint20ProxySystem(system(Mint20ProxySystemID));
_Mint20MintSystem = Mint20MintSystem(system(Mint20MintSystemID));
_NodeCollectSystem = NodeCollectSystem(system(NodeCollectSystemID));
_Pet721MetadataSystem = Pet721MetadataSystem(system(Pet721MetadataSystemID));
_Pet721MintSystem = Pet721MintSystem(system(Pet721MintSystemID));
_Pet721RevealSystem = Pet721RevealSystem(system(Pet721RevealSystemID));
_Pet721TransferSystem = Pet721TransferSystem(system(Pet721TransferSystemID));
_Pet721ProxySystem = Pet721ProxySystem(system(Pet721ProxySystemID));
_Pet721UnstakeSystem = Pet721UnstakeSystem(system(Pet721UnstakeSystemID));
_Pet721StakeSystem = Pet721StakeSystem(system(Pet721StakeSystemID));
_PetFeedSystem = PetFeedSystem(system(PetFeedSystemID));
_PetLevelSystem = PetLevelSystem(system(PetLevelSystemID));
_PetNameSystem = PetNameSystem(system(PetNameSystemID));
_PetReviveSystem = PetReviveSystem(system(PetReviveSystemID));
_PetSetAccountSystem = PetSetAccountSystem(system(PetSetAccountSystemID));
_ProductionCollectSystem = ProductionCollectSystem(system(ProductionCollectSystemID));
_ProductionLiquidateSystem = ProductionLiquidateSystem(system(ProductionLiquidateSystemID));
_ProductionStartSystem = ProductionStartSystem(system(ProductionStartSystemID));
_ProductionStopSystem = ProductionStopSystem(system(ProductionStopSystemID));
_QuestAcceptSystem = QuestAcceptSystem(system(QuestAcceptSystemID));
_QuestCompleteSystem = QuestCompleteSystem(system(QuestCompleteSystemID));
_QuestDropSystem = QuestDropSystem(system(QuestDropSystemID));
_RelationshipAdvanceSystem = RelationshipAdvanceSystem(system(RelationshipAdvanceSystemID));
_SkillUpgradeSystem = SkillUpgradeSystem(system(SkillUpgradeSystemID));

_Farm20 = _Farm20ProxySystem.getToken();
_Pet721 = _Pet721ProxySystem.getToken();
_Mint20 = _Mint20ProxySystem.getToken();
}
}