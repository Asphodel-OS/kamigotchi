// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;

import "std-contracts/test/MudTest.t.sol";

// Libraries
import { LibBattery } from "libraries/LibBattery.sol";
import { LibCoin } from "libraries/LibCoin.sol";
import { LibInventory } from "libraries/LibInventory.sol";
import { LibListing } from "libraries/LibListing.sol";
import { LibMerchant } from "libraries/LibMerchant.sol";
import { LibModifier } from "libraries/LibModifier.sol";
import { LibNode } from "libraries/LibNode.sol";
import { LibOperator } from "libraries/LibOperator.sol";
import { LibPet } from "libraries/LibPet.sol";
import { LibProduction } from "libraries/LibProduction.sol";
import { LibPrototype } from "libraries/LibPrototype.sol";
import { LibRegister } from "libraries/LibRegister.sol";
import { LibRegistry } from "libraries/LibRegistry.sol";
import { LibModReg } from "libraries/LibModReg.sol";
import { LibRoom } from "libraries/LibRoom.sol";
import { LibTrade } from "libraries/LibTrade.sol";

// Components
import { AddressPlayerComponent, ID as AddressPlayerComponentID } from "components/AddressPlayerComponent.sol";
import { BalanceComponent, ID as BalanceComponentID } from "components/BalanceComponent.sol";
import { BandwidthComponent, ID as BandwidthComponentID } from "components/BandwidthComponent.sol";
import { BlockLastComponent, ID as BlockLastComponentID } from "components/BlockLastComponent.sol";
import { CapacityComponent, ID as CapacityComponentID } from "components/CapacityComponent.sol";
import { ChargeComponent, ID as ChargeComponentID } from "components/ChargeComponent.sol";
import { CoinComponent, ID as CoinComponentID } from "components/CoinComponent.sol";
import { ExitsComponent, ID as ExitsComponentID } from "components/ExitsComponent.sol";
import { GenusComponent, ID as GenusComponentID } from "components/GenusComponent.sol";
import { IdDelegateeComponent, ID as IdDelegateeComponentID } from "components/IdDelegateeComponent.sol";
import { IdDelegatorComponent, ID as IdDelegatorComponentID } from "components/IdDelegatorComponent.sol";
import { IdHolderComponent, ID as IdHolderComponentID } from "components/IdHolderComponent.sol";
import { IdMerchantComponent, ID as IdMerchantComponentID } from "components/IdMerchantComponent.sol";
import { IdNodeComponent, ID as IdNodeComponentID } from "components/IdNodeComponent.sol";
import { IdOperatorComponent, ID as IdOperatorComponentID } from "components/IdOperatorComponent.sol";
import { IdOwnerComponent, ID as IdOwnerComponentID } from "components/IdOwnerComponent.sol";
import { IdPetComponent, ID as IdPetComponentID } from "components/IdPetComponent.sol";
import { IdRequesteeComponent, ID as IdRequesteeComponentID } from "components/IdRequesteeComponent.sol";
import { IdRequesterComponent, ID as IdRequesterComponentID } from "components/IdRequesterComponent.sol";
import { IndexItemComponent, ID as IndexItemComponentID } from "components/IndexItemComponent.sol";
import { IndexModifierComponent, ID as IndexModifierComponentID } from "components/IndexModifierComponent.sol";
import { IndexPetComponent, ID as IndexPetComponentID } from "components/IndexPetComponent.sol";
import { IsFoodComponent, ID as IsFoodComponentID } from "components/IsFoodComponent.sol";
import { IsInventoryComponent, ID as IsInventoryComponentID } from "components/IsInventoryComponent.sol";
import { IsListingComponent, ID as IsListingComponentID } from "components/IsListingComponent.sol";
import { IsMerchantComponent, ID as IsMerchantComponentID } from "components/IsMerchantComponent.sol";
import { IsModifierComponent, ID as IsModifierComponentID } from "components/IsModifierComponent.sol";
import { IsNodeComponent, ID as IsNodeComponentID } from "components/IsNodeComponent.sol";
import { IsOperatorComponent, ID as IsOperatorComponentID } from "components/IsOperatorComponent.sol";
import { IsPetComponent, ID as IsPetComponentID } from "components/IsPetComponent.sol";
import { IsProductionComponent, ID as IsProductionComponentID } from "components/IsProductionComponent.sol";
import { IsRegisterComponent, ID as IsRegisterComponentID } from "components/IsRegisterComponent.sol";
import { IsRegistryEntryComponent, ID as IsRegistryEntryComponentID } from "components/IsRegistryEntryComponent.sol";
import { IsRequestComponent, ID as IsRequestComponentID } from "components/IsRequestComponent.sol";
import { IsRoomComponent, ID as IsRoomComponentID } from "components/IsRoomComponent.sol";
import { IsTradeComponent, ID as IsTradeComponentID } from "components/IsTradeComponent.sol";
import { LocationComponent, ID as LocationComponentID } from "components/LocationComponent.sol";
import { MediaURIComponent, ID as MediaURIComponentID } from "components/MediaURIComponent.sol";
import { ModifierStatusComponent, ID as ModifierStatusComponentID } from "components/ModifierStatusComponent.sol";
import { ModifierTypeComponent, ID as ModifierTypeComponentID } from "components/ModifierTypeComponent.sol";
import { ModifierValueComponent, ID as ModifierValueComponentID } from "components/ModifierValueComponent.sol";
import { NameComponent, ID as NameComponentID } from "components/NameComponent.sol";
import { PriceBuyComponent, ID as PriceBuyComponentID } from "components/PriceBuyComponent.sol";
import { PriceSellComponent, ID as PriceSellComponentID } from "components/PriceSellComponent.sol";
import { PrototypeComponent, ID as PrototypeComponentID } from "components/PrototypeComponent.sol";
import { StateComponent, ID as StateComponentID } from "components/StateComponent.sol";
import { StorageSizeComponent, ID as StorageSizeComponentID } from "components/StorageSizeComponent.sol";
import { TimeLastActionComponent, ID as TimeLastActionComponentID } from "components/TimeLastActionComponent.sol";
import { TimeStartComponent, ID as TimeStartComponentID } from "components/TimeStartComponent.sol";

// Systems
import { _InitSystem, ID as _InitSystemID } from "systems/_InitSystem.sol";
import { _AddModifierSystem, ID as _AddModifierSystemID } from "systems/_AddModifierSystem.sol";
import { _ListingSetSystem, ID as _ListingSetSystemID } from "systems/_ListingSetSystem.sol";
import { _MerchantCreateSystem, ID as _MerchantCreateSystemID } from "systems/_MerchantCreateSystem.sol";
import { _NodeCreateSystem, ID as _NodeCreateSystemID } from "systems/_NodeCreateSystem.sol";
import { _RoomCreateSystem, ID as _RoomCreateSystemID } from "systems/_RoomCreateSystem.sol";
import { ERC721PetSystem, ID as ERC721PetSystemID } from "systems/ERC721PetSystem.sol";
import { ListingBuySystem, ID as ListingBuySystemID } from "systems/ListingBuySystem.sol";
import { ListingSellSystem, ID as ListingSellSystemID } from "systems/ListingSellSystem.sol";
import { OperatorMoveSystem, ID as OperatorMoveSystemID } from "systems/OperatorMoveSystem.sol";
import { OperatorSetSystem, ID as OperatorSetSystemID } from "systems/OperatorSetSystem.sol";
import { PetSetOperatorSystem, ID as PetSetOperatorSystemID } from "systems/PetSetOperatorSystem.sol";
import { ProductionCollectSystem, ID as ProductionCollectSystemID } from "systems/ProductionCollectSystem.sol";
import { ProductionStartSystem, ID as ProductionStartSystemID } from "systems/ProductionStartSystem.sol";
import { ProductionStopSystem, ID as ProductionStopSystemID } from "systems/ProductionStopSystem.sol";
import { PetMetadataSystem, ID as PetMetadataSystemID } from "systems/PetMetadataSystem.sol";
import { PetFoodSystem, ID as PetFoodSystemID } from "systems/PetFoodSystem.sol";
import { TradeAcceptSystem, ID as TradeAcceptSystemID } from "systems/TradeAcceptSystem.sol";
import { TradeAddToSystem, ID as TradeAddToSystemID } from "systems/TradeAddToSystem.sol";
import { TradeCancelSystem, ID as TradeCancelSystemID } from "systems/TradeCancelSystem.sol";
import { TradeConfirmSystem, ID as TradeConfirmSystemID } from "systems/TradeConfirmSystem.sol";
import { TradeInitiateSystem, ID as TradeInitiateSystemID } from "systems/TradeInitiateSystem.sol";
import { PetNameSystem, ID as PetNameSystemID } from "systems/PetNameSystem.sol";
import { OperatorNameSystem, ID as OperatorNameSystemID } from "systems/OperatorNameSystem.sol";

abstract contract TestSetupImports is MudTest {
// Components vars
AddressPlayerComponent _AddressPlayerComponent;
BalanceComponent _BalanceComponent;
BandwidthComponent _BandwidthComponent;
BlockLastComponent _BlockLastComponent;
CapacityComponent _CapacityComponent;
ChargeComponent _ChargeComponent;
CoinComponent _CoinComponent;
ExitsComponent _ExitsComponent;
GenusComponent _GenusComponent;
IdDelegateeComponent _IdDelegateeComponent;
IdDelegatorComponent _IdDelegatorComponent;
IdHolderComponent _IdHolderComponent;
IdMerchantComponent _IdMerchantComponent;
IdNodeComponent _IdNodeComponent;
IdOperatorComponent _IdOperatorComponent;
IdOwnerComponent _IdOwnerComponent;
IdPetComponent _IdPetComponent;
IdRequesteeComponent _IdRequesteeComponent;
IdRequesterComponent _IdRequesterComponent;
IndexItemComponent _IndexItemComponent;
IndexModifierComponent _IndexModifierComponent;
IndexPetComponent _IndexPetComponent;
IsFoodComponent _IsFoodComponent;
IsInventoryComponent _IsInventoryComponent;
IsListingComponent _IsListingComponent;
IsMerchantComponent _IsMerchantComponent;
IsModifierComponent _IsModifierComponent;
IsNodeComponent _IsNodeComponent;
IsOperatorComponent _IsOperatorComponent;
IsPetComponent _IsPetComponent;
IsProductionComponent _IsProductionComponent;
IsRegisterComponent _IsRegisterComponent;
IsRegistryEntryComponent _IsRegistryEntryComponent;
IsRequestComponent _IsRequestComponent;
IsRoomComponent _IsRoomComponent;
IsTradeComponent _IsTradeComponent;
LocationComponent _LocationComponent;
MediaURIComponent _MediaURIComponent;
ModifierStatusComponent _ModifierStatusComponent;
ModifierTypeComponent _ModifierTypeComponent;
ModifierValueComponent _ModifierValueComponent;
NameComponent _NameComponent;
PriceBuyComponent _PriceBuyComponent;
PriceSellComponent _PriceSellComponent;
PrototypeComponent _PrototypeComponent;
StateComponent _StateComponent;
StorageSizeComponent _StorageSizeComponent;
TimeLastActionComponent _TimeLastActionComponent;
TimeStartComponent _TimeStartComponent;

// System vars
_InitSystem __InitSystem;
_AddModifierSystem __AddModifierSystem;
_ListingSetSystem __ListingSetSystem;
_MerchantCreateSystem __MerchantCreateSystem;
_NodeCreateSystem __NodeCreateSystem;
_RoomCreateSystem __RoomCreateSystem;
ERC721PetSystem _ERC721PetSystem;
ListingBuySystem _ListingBuySystem;
ListingSellSystem _ListingSellSystem;
OperatorMoveSystem _OperatorMoveSystem;
OperatorSetSystem _OperatorSetSystem;
PetSetOperatorSystem _PetSetOperatorSystem;
ProductionCollectSystem _ProductionCollectSystem;
ProductionStartSystem _ProductionStartSystem;
ProductionStopSystem _ProductionStopSystem;
PetMetadataSystem _PetMetadataSystem;
PetFoodSystem _PetFoodSystem;
TradeAcceptSystem _TradeAcceptSystem;
TradeAddToSystem _TradeAddToSystem;
TradeCancelSystem _TradeCancelSystem;
TradeConfirmSystem _TradeConfirmSystem;
TradeInitiateSystem _TradeInitiateSystem;
PetNameSystem _PetNameSystem;
OperatorNameSystem _OperatorNameSystem;

function setUp() public virtual override {
super.setUp();

_AddressPlayerComponent = AddressPlayerComponent(component(AddressPlayerComponentID));
_BalanceComponent = BalanceComponent(component(BalanceComponentID));
_BandwidthComponent = BandwidthComponent(component(BandwidthComponentID));
_BlockLastComponent = BlockLastComponent(component(BlockLastComponentID));
_CapacityComponent = CapacityComponent(component(CapacityComponentID));
_ChargeComponent = ChargeComponent(component(ChargeComponentID));
_CoinComponent = CoinComponent(component(CoinComponentID));
_ExitsComponent = ExitsComponent(component(ExitsComponentID));
_GenusComponent = GenusComponent(component(GenusComponentID));
_IdDelegateeComponent = IdDelegateeComponent(component(IdDelegateeComponentID));
_IdDelegatorComponent = IdDelegatorComponent(component(IdDelegatorComponentID));
_IdHolderComponent = IdHolderComponent(component(IdHolderComponentID));
_IdMerchantComponent = IdMerchantComponent(component(IdMerchantComponentID));
_IdNodeComponent = IdNodeComponent(component(IdNodeComponentID));
_IdOperatorComponent = IdOperatorComponent(component(IdOperatorComponentID));
_IdOwnerComponent = IdOwnerComponent(component(IdOwnerComponentID));
_IdPetComponent = IdPetComponent(component(IdPetComponentID));
_IdRequesteeComponent = IdRequesteeComponent(component(IdRequesteeComponentID));
_IdRequesterComponent = IdRequesterComponent(component(IdRequesterComponentID));
_IndexItemComponent = IndexItemComponent(component(IndexItemComponentID));
_IndexModifierComponent = IndexModifierComponent(component(IndexModifierComponentID));
_IndexPetComponent = IndexPetComponent(component(IndexPetComponentID));
_IsFoodComponent = IsFoodComponent(component(IsFoodComponentID));
_IsInventoryComponent = IsInventoryComponent(component(IsInventoryComponentID));
_IsListingComponent = IsListingComponent(component(IsListingComponentID));
_IsMerchantComponent = IsMerchantComponent(component(IsMerchantComponentID));
_IsModifierComponent = IsModifierComponent(component(IsModifierComponentID));
_IsNodeComponent = IsNodeComponent(component(IsNodeComponentID));
_IsOperatorComponent = IsOperatorComponent(component(IsOperatorComponentID));
_IsPetComponent = IsPetComponent(component(IsPetComponentID));
_IsProductionComponent = IsProductionComponent(component(IsProductionComponentID));
_IsRegisterComponent = IsRegisterComponent(component(IsRegisterComponentID));
_IsRegistryEntryComponent = IsRegistryEntryComponent(component(IsRegistryEntryComponentID));
_IsRequestComponent = IsRequestComponent(component(IsRequestComponentID));
_IsRoomComponent = IsRoomComponent(component(IsRoomComponentID));
_IsTradeComponent = IsTradeComponent(component(IsTradeComponentID));
_LocationComponent = LocationComponent(component(LocationComponentID));
_MediaURIComponent = MediaURIComponent(component(MediaURIComponentID));
_ModifierStatusComponent = ModifierStatusComponent(component(ModifierStatusComponentID));
_ModifierTypeComponent = ModifierTypeComponent(component(ModifierTypeComponentID));
_ModifierValueComponent = ModifierValueComponent(component(ModifierValueComponentID));
_NameComponent = NameComponent(component(NameComponentID));
_PriceBuyComponent = PriceBuyComponent(component(PriceBuyComponentID));
_PriceSellComponent = PriceSellComponent(component(PriceSellComponentID));
_PrototypeComponent = PrototypeComponent(component(PrototypeComponentID));
_StateComponent = StateComponent(component(StateComponentID));
_StorageSizeComponent = StorageSizeComponent(component(StorageSizeComponentID));
_TimeLastActionComponent = TimeLastActionComponent(component(TimeLastActionComponentID));
_TimeStartComponent = TimeStartComponent(component(TimeStartComponentID));

__InitSystem = _InitSystem(system(_InitSystemID));
__AddModifierSystem = _AddModifierSystem(system(_AddModifierSystemID));
__ListingSetSystem = _ListingSetSystem(system(_ListingSetSystemID));
__MerchantCreateSystem = _MerchantCreateSystem(system(_MerchantCreateSystemID));
__NodeCreateSystem = _NodeCreateSystem(system(_NodeCreateSystemID));
__RoomCreateSystem = _RoomCreateSystem(system(_RoomCreateSystemID));
_ERC721PetSystem = ERC721PetSystem(system(ERC721PetSystemID));
_ListingBuySystem = ListingBuySystem(system(ListingBuySystemID));
_ListingSellSystem = ListingSellSystem(system(ListingSellSystemID));
_OperatorMoveSystem = OperatorMoveSystem(system(OperatorMoveSystemID));
_OperatorSetSystem = OperatorSetSystem(system(OperatorSetSystemID));
_PetSetOperatorSystem = PetSetOperatorSystem(system(PetSetOperatorSystemID));
_ProductionCollectSystem = ProductionCollectSystem(system(ProductionCollectSystemID));
_ProductionStartSystem = ProductionStartSystem(system(ProductionStartSystemID));
_ProductionStopSystem = ProductionStopSystem(system(ProductionStopSystemID));
_PetMetadataSystem = PetMetadataSystem(system(PetMetadataSystemID));
_PetFoodSystem = PetFoodSystem(system(PetFoodSystemID));
_TradeAcceptSystem = TradeAcceptSystem(system(TradeAcceptSystemID));
_TradeAddToSystem = TradeAddToSystem(system(TradeAddToSystemID));
_TradeCancelSystem = TradeCancelSystem(system(TradeCancelSystemID));
_TradeConfirmSystem = TradeConfirmSystem(system(TradeConfirmSystemID));
_TradeInitiateSystem = TradeInitiateSystem(system(TradeInitiateSystemID));
_PetNameSystem = PetNameSystem(system(PetNameSystemID));
_OperatorNameSystem = OperatorNameSystem(system(OperatorNameSystemID));
}
}