// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;

import "test/utils/MudTest.t.sol";
import "deployment/Imports.sol";

// Utils
import { WrapCaller } from "test/utils/WrapCaller.sol";

abstract contract TestSetupImports is MudTest {
  // Components vars
<% components.forEach(component => { -%>
  <%= component.comp %> _<%= component.comp %>;
<% }); -%>

  // System vars
<% systems.forEach(system => { -%>
  <%= system.name %> _<%= system.name %>;
<% }); -%>

  // Token vars
  Farm20 _Farm20;
  Mint20 _Mint20;
  Pet721 _Pet721;

  WrapCaller ExternalCaller;

  function setUp() public virtual override {
    super.setUp();
    ExternalCaller = new WrapCaller(world, components);

<% components.forEach(component => { -%>
    _<%= component.comp %> = <%= component.comp %>(component(<%= component.comp %>ID));
<% }); -%>

<% systems.forEach(system => { -%>
    _<%= system.name %> = <%= system.name %>(system(<%= system.name %>ID));
<% }); -%>

    _Farm20 = _Farm20ProxySystem.getToken();
    _Pet721 = _Pet721ProxySystem.getToken();
    _Mint20 = _Mint20ProxySystem.getToken();

    vm.startPrank(deployer);
<% components.forEach(component => { -%>
    _<%= component.comp %>.authorizeWriter(address(ExternalCaller));
<% }); -%>
    vm.stopPrank();
  }
}