{
  "name": "contracts",
  "license": "MIT",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "----- TOP LEVEL COMMANDS -----": "---------------------------",
    "abi": "pnpm abi:gen && pnpm abi:types && pnpm abi:clean",
    "build": "rimraf out && pnpm build:systems && pnpm codegen && pnpm abi",
    "codegen": "pnpm codegen:clear && pnpm codegen:imports && pnpm codegen:deploy && pnpm codegen:tests",
    "deploy": "pnpm deploy:script",
    "dev": "pnpm prepare && pnpm start",
    "lint": "solhint --config ./.solhint.json 'src/**/*.sol' --fix",
    "format": "prettier --write 'src/**/*.sol'",
    "nuke": "rimraf abi types out node_modules",
    "prepare": "pnpm abi && pnpm codegen",
    "start": "pnpm run-p -l node:local deploy:local",
    "test": "pnpm codegen && FOUNDRY_PROFILE=build forge test --contracts test --gas-limit=10000000000000",
    "----- SPECIFIC COMMANDS -----": "---------------------------",
    "deploy:local": "NODE_ENV=puter pnpm deploy:script ",
    "deploy:local:partial": "pnpm deploy:local --partial",
    "deploy:test": "NODE_ENV=testing pnpm deploy:script --forge='-g=215 --batch-size=5'",
    "deploy:test:partial": "pnpm deploy:test --partial",
    "deploy:prod": "NODE_ENV=production pnpm deploy:script --forge='-g=200 --batch-size=5'",
    "deploy:prod:partial": "pnpm deploy:prod --partial",
    "deprecate:local": "NODE_ENV=puter pnpm deprecate:script ",
    "deprecate:test": "NODE_ENV=testing pnpm deprecate:script --forge='--batch-size=5'",
    "deprecate:prod": "NODE_ENV=production pnpm deprecate:script --forge='--batch-size=5'",
    "multisig:systems:local": "NODE_ENV=puter pnpm multisig:systems:script ",
    "multisig:systems:test": "NODE_ENV=testing pnpm multisig:systems:script",
    "multisig:systems:prod": "NODE_ENV=production pnpm multisig:systems:script",
    "world:addrs:local": "NODE_ENV=puter ts-node deployment/commands/addresses.ts",
    "world:addrs:test": "NODE_ENV=testing ts-node deployment/commands/addresses.ts",
    "world:addrs:prod": "NODE_ENV=production ts-node deployment/commands/addresses.ts",
    "world:state:local": "NODE_ENV=puter pnpm world:state:script ",
    "world:state:test": "NODE_ENV=testing pnpm world:state:script --forge='-g=300 --batch-size=5'",
    "world:state:prod": "NODE_ENV=production pnpm world:state:script --forge='-g=300 --batch-size=5'",
    "world:god:local": "NODE_ENV=puter pnpm world:god:script",
    "world:god:test": "NODE_ENV=testing pnpm world:god:script --forge='-g=400 --batch-size=5'",
    "world:god:prod": "NODE_ENV=production pnpm world:god:script --forge='-g=400 --batch-size=5'",
    "mint:pets:local": "NODE_ENV=puter pnpm mint:pets:script",
    "mint:pets:test": "NODE_ENV=testing pnpm mint:pets:script",
    "nuke:anvil": "rimraf ~/.foundry/anvil/tmp/*",
    "----- LOW LEVEL COMMANDS -----": "---------------------------",
    "deploy:script": "ts-node deployment/commands/deploy.ts",
    "deprecate:script": "ts-node deployment/commands/deprecateSystem.ts",
    "multisig:systems:script": "ts-node deployment/commands/multisigSystemRegister.ts",
    "world:state:script": "ts-node deployment/commands/worldState.ts",
    "world:god:script": "ts-node deployment/commands/callGod.ts",
    "mint:pets:script": "ts-node deployment/commands/batchMinter.ts",
    "node:local": "anvil --chain-id 1337 -b 1 --base-fee 0 --gas-price 0 --gas-limit 10000000000 --timestamp 1708214400",
    "----- INTERNAL -----": "---------------------------",
    "abi:gen": "rimraf ../client/abi && mkdir ../client/abi && bash exports.sh && rimraf ../client/abi/*.metadata.json",
    "abi:clean": "for i in ../client/abi/*; do jq 'del(.bytecode) | del(.deployedBytecode) | del(.ast) | del(.rawMetadata) | del(.metadata) | del(.ast) | del(.id)' \"$i\" > \"$i\".tmp && mv \"$i\".tmp \"$i\"; done",
    "abi:types": "rimraf ../client/types && mkdir ../client/types && pnpm abi:types:gen && pnpm abi:types:mappings && rimraf ../client/types/ethers-contracts/factories",
    "abi:types:gen": "pnpm typechain --target=ethers-v5 --out-dir ../client/types/ethers-contracts ../client/abi/*.json ",
    "abi:types:mappings": "ts-node deployment/commands/genMappings.ts",
    "build:systems": "FOUNDRY_PROFILE=build forge build --skip test",
    "codegen:clear": "ts-node deployment/commands/clearAutogen.ts",
    "codegen:imports": "pnpm ejs deployment/contracts/Imports.ejs  -f deploy.json -o deployment/contracts/Imports.sol",
    "codegen:ids": "ts-node deployment/commands/genIDs.ts",
    "codegen:deploy": "pnpm ejs deployment/contracts/LibDeploy.ejs -f deploy.json -o deployment/contracts/LibDeploy.sol",
    "codegen:tests": "pnpm ejs test/utils/TestSetupImports.t.ejs -f deploy.json -o test/utils/TestSetupImports.t.sol && ts-node deployment/commands/initTests.ts"
  },
  "devDependencies": {
    "@typechain/ethers-v5": "^10.1.1",
    "@types/ejs": "^3.1.5",
    "@types/glob": "^8.1.0",
    "@types/node": "^18.11.9",
    "dotenv": "^16.4.5",
    "ds-test": "https://github.com/dapphub/ds-test.git#c7a36fb236f298e04edf28e2fee385b80f53945f",
    "ethers": "^5.7.1",
    "execa": "^5.1.1",
    "forge-std": "github:foundry-rs/forge-std",
    "memmove": "https://github.com/brockelmore/memmove.git#d577ecd1bc43656f4032edf4daa9797f756a8ad2",
    "openurl": "^1.1.1",
    "prettier-plugin-solidity": "^1.0.0-beta.19",
    "run-pty": "^4.0.3",
    "solhint": "^3.3.7",
    "ts-node": "^10.7.0",
    "typechain": "^8.1.1",
    "typescript": "^4.6.2",
    "vip-evm": "github:initia-labs/vip-score-evm#main",
    "wait-on": "^6.0.1",
    "yargs": "^17.7.2"
  },
  "dependencies": {
    "@ethersproject/abi": "^5.7.0",
    "@ethersproject/bignumber": "^5.0",
    "@ethersproject/bytes": "^5.7.0",
    "@ethersproject/providers": "^5.7.0",
    "@morpho-labs/gnosis-tx-builder": "^1.3.1",
    "@mud-classic/solecs": "^0.0.1",
    "@mud-classic/std-contracts": "^0.0.1",
    "@openzeppelin/contracts": "^4.9.0",
    "@prb/math": "^4.1.0",
    "@types/minimatch": "^5.1.2",
    "csv-parse": "^5.5.6",
    "dotenv-cli": "^7.2.1",
    "erc721a": "^4.2.3",
    "ethers-multisend": "^3.1.0",
    "glob": "7.2.0",
    "solady": "github:Vectorized/solady",
    "solmate": "github:transmissions11/solmate"
  }
}
